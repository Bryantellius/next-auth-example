[
  {
    "term": "Selector (CSS)",
    "def": "A CSS selector is the part of a CSS rule that describes what elements in a document the rule will match. The matching elements will have the rule's specified style applied to them.Consider this CSS:The selectors here are \"p\" (which applies the color green to the text inside any <p> element), \"div.warning\" (which makes any <div> element with the class \"warning\" look like a warning box), and \"#customized\", which sets the base font of the element with the ID \"customized\" to 16-pixel tall Lucida Grande or one of a few fallback fonts.We can then apply this CSS to some HTML, such as:The resulting page content is styled like this:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/CSS_Selector"
  },
  {
    "term": "Data structure",
    "def": "Data structure is a particular way of organizing data so that it can be used efficiently.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Data_structure"
  },
  {
    "term": "Denial of Service",
    "def": "DoS (Denial of Service) is a category of network attack that consumes available server resources, typically by flooding the server with requests. The server is then sluggish or unavailable for legitimate users.See DoS attack for more information.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Denial_of_Service"
  },
  {
    "term": "CSS preprocessor",
    "def": "A CSS preprocessor is a program that lets you generate CSS from the preprocessor's own unique syntax.There are many CSS preprocessors to choose from, however most CSS preprocessors will add some features that don't exist in pure CSS, such as mixin, nesting selector, inheritance selector, and so on. These features make the CSS structure more readable and easier to maintain.To use a CSS preprocessor, you must install a CSS compiler on your web server; Or use the CSS preprocessor to compile on the development environment, and then upload compiled CSS file to the web server.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/CSS_preprocessor"
  },
  {
    "term": "CSRF",
    "def": "CSRF (Cross-Site Request Forgery) is an attack that impersonates a trusted user and sends a website unwanted commands.This can be done, for example, by including malicious parameters in a URL behind a link that purports to go somewhere else:For users who have modification permissions on https://www.example.com, the <img> element executes action on https://www.example.com without their noticing, even if the element is not at https://www.example.com.There are many ways to prevent CSRF, such as implementing RESTful API, adding secure tokens, etc.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/CSRF"
  },
  {
    "term": "Deep copy",
    "def": "A deep copy of an object is a copy whose properties do not share the same references (point to the same underlying values) as those of the source object from which the copy was made. As a result, when you change either the source or the copy, you can be assured you're not causing the other object to change too; that is, you won't unintentionally be causing changes to the source or copy that you don't expect. That behavior contrasts with the behavior of a shallow copy, in which changes to either the source or the copy may also cause the other object to change too (because the two objects share the same references).In JavaScript, standard built-in object-copy operations (spread syntax, Array.prototype.concat(), Array.prototype.slice(), Array.from(), Object.assign(), and Object.create()) do not create deep copies (instead, they create shallow copies).One way to make a deep copy of a JavaScript object, if it can be serialized, is to use JSON.stringify() to convert the object to a JSON string, and then JSON.parse() to convert the string back into a (completely new) JavaScript object:As can be seen from the code above, because a deep copy shares no references with its source object, any changes made to the deep copy do not affect the source object.However, while the object in the code above is simple enough to be serializable, many JavaScript objects are not serializable at all — for example, functions (with closures), Symbols, objects that represent HTML elements in the HTML DOM API, recursive data, any many other cases. Calling JSON.stringify() to serialize the objects in those cases will fail. So there's no way to make deep copies of such objects.For objects that are serializable, you can alternatively use the structuredClone() method to create deep copies. structuredClone() has the advantage of allowing transferable objects in the source to be transferred to the new copy, rather than just cloned. But note that structuredClone() isn't a feature of the JavaScript language itself — instead it's a feature of browsers and any other JavaScript runtimes that implement a global object like window. And calling structuredClone() to clone a non-serializable object will fail in the same way that calling JSON.stringify() to serialize it will fail.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Deep_copy"
  },
  {
    "term": "Delta",
    "def": "The term delta refers to the difference between two values or states.The name originates from the Greek letter Δ (delta), which is equivalent to the letter D in the Roman alphabet. Delta refers to the use of the letter Δ as a shorthand for difference.The term delta is commonly used when communicating changes in speed, position, or acceleration of a physical or virtual object. It's also used when describing changes in the volume or frequency of sound waves.For example, when describing how far an object on the screen moves left-to-right, one might use the term delta x or Δx.Likewise, given the new value of X and its old value, you might compute the delta like this:More commonly, you receive the delta and use it to update a saved previous condition:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Delta"
  },
  {
    "term": "CSS Object Model (CSSOM)",
    "def": "The CSS Object Model (CSSOM) is a set of APIs for reading and modifying a document's style-related (CSS) information. In other words, similar to the way in which the DOM enables a document's structure and content to be read and modified from JavaScript, the CSSOM allows the document's styling to be read and modified from JavaScript.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/CSSOM"
  },
  {
    "term": "CSS pixel",
    "def": "The term CSS pixel is synonymous with the CSS unit of absolute length px — which is normatively defined as being exactly 1/96th of 1 inch.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/CSS_pixel"
  },
  {
    "term": "Cryptography",
    "def": "Cryptography, or cryptology, is the science that studies how to encode and transmit messages securely. Cryptography designs and studies algorithms used to encode and decode messages in an insecure environment, and their applications.More than just data confidentiality, cryptography also tackles identification, authentication, non-repudiation, and data integrity. Therefore it also studies usage of cryptographic methods in context, cryptosystems.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Cryptography"
  },
  {
    "term": "DMZ",
    "def": "A DMZ (DeMilitarized Zone) is a way to provide an insulated secure interface between an internal network (corporate or private) and the outside untrusted world — usually the Internet.It exposes only certain defined endpoints, while denying access to the internal network from external nodes.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/DMZ"
  },
  {
    "term": "CSS",
    "def": "CSS (Cascading Style Sheets) is a declarative language that controls how webpages look in the browser.The browser applies CSS style declarations to selected elements to display them properly. A style declaration contains the properties and their values, which determine how a webpage looks.CSS is one of the three core Web technologies, along with HTML and JavaScript. CSS usually styles HTML elements, but can be also used with other markup languages like SVG or XML.A CSS rule is a set of properties associated with a selector. Here is an example that makes every HTML paragraph yellow against a black background:\"Cascading\" refers to the rules that govern how selectors are prioritized to change a page's appearance. This is a very important feature, since a complex website can have thousands of CSS rules.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/CSS"
  },
  {
    "term": "Descriptor (CSS)",
    "def": "A CSS descriptor defines the characteristics of an at-rule. At-rules may have one or multiple descriptors. Each descriptor has:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Descriptor_(CSS)"
  },
  {
    "term": "Deserialization",
    "def": "The process whereby a lower-level format (e.g. that has been transferred over a network, or stored in a data store) is translated into a readable object or other data structure.In JavaScript, for example, you can deserialize a JSON string to an object by calling the function JSON.parse().",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Deserialization"
  },
  {
    "term": "Developer Tools",
    "def": "Developer tools (or \"development tools\" or short \"DevTools\") are programs that allow a developer to create, test and debug software.Current browsers provide integrated developer tools, which allow to inspect a website. They let users inspect and debug the page's HTML, CSS, and JavaScript, allow to inspect the network traffic it causes, make it possible to measure it's performance, and much more.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Developer_Tools"
  },
  {
    "term": "Distributed Denial of Service",
    "def": "A Distributed Denial-of-Service (DDoS) is an attack in which many compromised systems are made to attack a single target, in order to swamp server resources and block legitimate users.Normally many persons, using many bots, attack high-profile Web servers like banks or credit-card payment gateways. DDoS concerns computer networks and CPU resource management.In a typical DDoS attack, the assailant begins by exploiting a vulnerability in one computer system and making it the DDoS master. The attack master, also known as the botmaster, identifies and infects other vulnerable systems with malware. Eventually, the assailant instructs the controlled machines to launch an attack against a specified target.There are two types of DDoS attacks: a network-centric attack (which overloads a service by using up bandwidth) and an application-layer attack (which overloads a service or database with application calls). The overflow of data to the target causes saturation in the target machine so that it cannot respond or responds very slowly to legitimate traffic (hence the name \"denial of service\"). The infected computers' owners normally don't know that their computers have been compromised, and they also suffer loss of service.A computer under an intruder's control is called a zombie or bot. A network of co-infected computers is known as a botnet or a zombie army. Both Kaspersky Labs and Symantec have identified botnets -- not spam, viruses, or worms -- as the biggest threat to Internet security.The United States Computer Emergency Readiness Team (US-CERT) defines symptoms of denial-of-service attacks to include:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Distributed_Denial_of_Service"
  },
  {
    "term": "Digest",
    "def": "A digest is a small value generated by a hash function from a whole message. Ideally, a digest is quick to calculate, irreversible, and unpredictable, and therefore indicates whether someone has tampered with a given message.A digest can be used to perform several tasks:It is critical to choose the proper hash function for your use case to avoid collisions and predictability.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Digest"
  },
  {
    "term": "Decryption",
    "def": "In cryptography, decryption is the conversion of ciphertext into Plaintext.Decryption is a cryptographic primitive: it transforms a ciphertext message into plaintext using a cryptographic algorithm called a cipher. Like encryption, decryption in modern ciphers is performed using a specific algorithm and a secret, called the key. Since the algorithm is often public, the key must stay secret if the encryption stays secure.\n  \nDecryption is the reverse of encryption and if the key stays secret, decryption without knowing the specific secret, decryption is mathematically hard to perform. How hard depends on the security of the cryptographic algorithm chosen and evolves with the progress of cryptanalysis.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Decryption"
  },
  {
    "term": "DNS",
    "def": "DNS (Domain Name System) is a hierarchical and decentralized naming system for Internet connected resources. DNS maintains a list of domain names along with the resources, such as IP addresses, that are associated with them.The most prominent function of DNS is the translation of human-friendly domain names (such as mozilla.org) to a numeric IP address (such as 151.106.5.172); this process of mapping a domain name to the appropriate IP address is known as a DNS lookup. By contrast, a reverse DNS lookup (rDNS) is used to determine the domain name associated with an IP address.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/DNS"
  },
  {
    "term": "Digital certificate",
    "def": "A digital certificate is a data file that binds a publicly known cryptographic key to an organization.A digital certificate contains information about an organization, such as the common name (e.g., mozilla.org), the organization unit (e.g., Mozilla Corporation), and the location (e.g., Mountain View). Digital certificates are most commonly signed by a certificate authority, attesting to the certificate's authenticity.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Digital_certificate"
  },
  {
    "term": "Doctype",
    "def": "In HTML, the doctype is the required \"<!DOCTYPE html>\" preamble found at the top of all documents. Its sole purpose is to prevent a browser from switching into so-called \"quirks mode\" when rendering a document; that is, the \"<!DOCTYPE html>\" doctype ensures that the browser makes a best-effort attempt at following the relevant specifications, rather than using a different rendering mode that is incompatible with some specifications.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Doctype"
  },
  {
    "term": "document environment",
    "def": "When the JavaScript global environment is a window or an iframe, it is called a document environment. A global environment is an environment that doesn't have an outer environment.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/document_environment"
  },
  {
    "term": "Document directive",
    "def": "CSP document directives are used in a Content-Security-Policy header and govern the properties of a document or worker environment to which a policy applies.Document directives don't fall back to the default-src directive.See Document directives for a complete list.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Document_directive"
  },
  {
    "term": "Domain",
    "def": "A domain is an authority within the internet that controls its own resources. Its \"domain name\" is a way to address this authority as part of the hierarchy in a URL - usually the most memorable part of it, for instance a brand name.A fully qualified domain name (FQDN) contains all necessary parts to look up this authority by name unambiguously using the DNS system of the internet.For example, in \"developer.mozilla.org\":",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Domain"
  },
  {
    "term": "Domain sharding",
    "def": "Browsers limit the number of active connections for each domain. To enable concurrent downloads of assets exceeding that limit, domain sharding splits content across multiple subdomains. When multiple domains are used to serve multiple assets, browsers are able to download more resources simultaneously, resulting in a faster page load time and improved user experience.The problem with domain sharding, in terms of performance, is the cost of extra DNS lookups for each domain and the overhead of establishing each TCP connection.The initial response from an HTTP request is generally an HTML file listing other resources such as JavaScript, CSS, images and other media files that need to be downloaded. As browsers limit the number of active connections per domain, serving all the required resources from a single domain could be slow as assets need to be downloaded sequentially. With domain sharding, the required downloads are served from more than one domain, enabling the browser to simultaneously download needed resources. Multiple domains, however, is an anti-pattern, as DNS lookups slow initial load times.HTTP2 supports unlimited concurrent requests making domain sharding an obsolete requirement when HTTP/2 is enabled.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Domain_sharding"
  },
  {
    "term": "Domain name",
    "def": "A domain name is a website's address on the Internet. Domain names are used in URLs to identify to which server belong a specific webpage. The domain name consists of a hierarchical sequence of names (labels) separated by periods (dots) and ending with an extension.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Domain_name"
  },
  {
    "term": "DOM (Document Object Model)",
    "def": "The DOM (Document Object Model) is an API that represents and interacts with any HTML or XML document. The DOM is a document model loaded in the browser and representing the document as a node tree, where each node represents part of the document (e.g. an element, text string, or comment).The DOM is one of the most-used APIs on the Web because it allows code running in a browser to access and interact with every node in the document. Nodes can be created, moved and changed. Event listeners can be added to nodes and triggered on occurrence of a given event.DOM was not originally specified—it came about when browsers began implementing JavaScript. This legacy DOM is sometimes called DOM 0. Today, the WHATWG maintains the DOM Living Standard.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/DOM"
  },
  {
    "term": "DTMF (Dual-Tone Multi-Frequency signaling)",
    "def": "Dual-Tone Multi-Frequency (DTMF) signaling is a system by which audible tones are used to represent buttons being pressed on a keypad. Frequently referred to in the United States as \"touch tone\" (after the Touch-Tone trademark used when the transition from pulse dialing to DTMF began), DTMF makes it possible to signal the digits 0-9 as well as the letters \"A\" through \"D\" and the symbols \"#\" and \"*\". Few telephone keypads include the letters, which are typically used for control signaling by the telephone network.Computers may make use of DTMF when dialing a modem, or when sending commands to a menu system for teleconferencing or other purposes.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/DTMF"
  },
  {
    "term": "Dominator",
    "def": "In graph theory, node A dominates node B if every path from the root node to B passes through A.This concept is important for garbage collection because it means that B is only reachable through A. So if the garbage collector found A to be unreachable and eligible for reclaiming, than B would also be unreachable and eligible for reclaiming. So objects that A dominates contribute to the retained size of A: that is, the total amount of memory that could be freed if A itself were freed.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Dominator"
  },
  {
    "term": "Dynamic typing",
    "def": "Dynamically-typed languages are those (like JavaScript) where the interpreter assigns variables a type at runtime based on the variable's value at the time.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Dynamic_typing"
  },
  {
    "term": "ECMA",
    "def": "Ecma International (formally European Computer Manufacturers Association) is a non-profit organization that develops standards in computer hardware, communications, and programming languages.On the web it is famous for being the organization which maintain the ECMA-262 specification (aka. ECMAScript) which is the core specification for the JavaScript language.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/ECMA"
  },
  {
    "term": "Effective connection type",
    "def": "Effective connection type (ECT) refers to the measured network performance, returning a cellular connection type, like 3G, even if the actual connection is tethered broadband or WiFi, based on the time between the browser requesting a page and effective type of the connection.The values of 'slow-2g', '2g', '3g', and '4g' are determined using observed round-trip times and downlink values.effectiveType is a property of the Network Information API, exposed to JavaScript via the navigator.connection object. To see your effective connection type, open the console of the developer tools of a supporting browser and enter the following:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Effective_connection_type"
  },
  {
    "term": "Encapsulation",
    "def": "Encapsulation is the packing of data and functions into one component (for example, a class) and then controlling access to that component to make a \"blackbox\" out of the object. Because of this, a user of that class only needs to know its interface (that is, the data and functions exposed outside the class), not the hidden implementation.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Encapsulation"
  },
  {
    "term": "DoS attack",
    "def": "DoS (Denial of Service) is a network attack that prevents legitimate use of server resources by flooding the server with requests.Computers have limited resources, for example computation power or memory. When these are exhausted, the program can freeze or crash, making it unavailable. A DoS attack consists of various techniques to exhaust these resources and make a server or a network unavailable to legitimate users, or at least make the server perform sluggishly.There are also Distributed Denial of Service (DDoS) Attacks in which a multitude of servers are used to exhaust the computing capacity of an attacked computer.DoS attacks are more of a category than a particular kind of attack. Here is a non-exhaustive list of DoS attack types:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/DOS_attack"
  },
  {
    "term": "Endianness",
    "def": "Endian and endianness (or \"byte-order\") describe how computers organize the bytes that make up numbers.Each memory storage location has an index or address. Every byte can store an 8-bit number (i.e. between 0x00 and 0xff), so you must reserve more than one byte to store a larger number. By far the most common ordering of multiple bytes in one number is the little-endian, which is used on all Intel processors. Little-endian means storing bytes in order of least-to-most-significant (where the least significant byte takes the first or lowest address), comparable to a common European way of writing dates (e.g., 31 December 2050).Naturally, big-endian is the opposite order, comparable to an ISO date (2050-12-31). Big-endian is also often called \"network byte order\", because Internet standards usually require data to be stored big-endian, starting at the standard UNIX socket level and going all the way up to standardized Web binary data structures. Also, older Mac computers using 68000-series and PowerPC microprocessors formerly used big-endian.Examples with the number 0x12345678 (i.e. 305 419 896 in decimal):",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Endianness"
  },
  {
    "term": "ECMAScript",
    "def": "ECMAScript is a scripting language specification on which JavaScript is based. Ecma International is in charge of standardizing ECMAScript.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/ECMAScript"
  },
  {
    "term": "Empty element",
    "def": "An empty element is an element from HTML, SVG, or MathML that cannot have any child nodes (i.e., nested elements or text nodes).The HTML, SVG, and MathML specifications define very precisely what each element can contain. Many combinations have no semantic meaning, for example an <audio> element nested inside an <hr> element.In HTML, using a closing tag on an empty element is usually invalid. For example, <input type=\"text\"></input> is invalid HTML.The empty elements in HTML are as follows:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Empty_element"
  },
  {
    "term": "Element",
    "def": "An element is a part of a webpage. In XML and HTML, an element may contain a data item or a chunk of text or an image, or perhaps nothing. A typical element includes an opening tag with some attributes, enclosed text content, and a closing tag.\n  \nElements and tags are not the same things. Tags begin or end an element in source code, whereas elements are part of the DOM, the document model for displaying the page in the browser.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Element"
  },
  {
    "term": "Encryption",
    "def": "In cryptography, encryption is the conversion of plaintext into a coded text or ciphertext. A ciphertext is intended to be unreadable by unauthorized readers.Encryption is a cryptographic primitive: it transforms a plaintext message into a ciphertext using a cryptographic algorithm called a cipher. Encryption in modern ciphers is performed using a specific algorithm and a secret, called the key. Since the algorithm is often public, the key must stay secret if the encryption stays secure.\n  \nWithout knowing the secret, the reverse operation, decryption, is mathematically hard to perform. How hard depends on the security of the cryptographic algorithm chosen and evolves with the progress of cryptanalysis.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Encryption"
  },
  {
    "term": "Entity",
    "def": "An HTML entity is a piece of text (\"string\") that begins with an ampersand (&) and ends with a semicolon (;) . Entities are frequently used to display reserved characters (which would otherwise be interpreted as HTML code), and invisible characters (like non-breaking spaces). You can also use them in place of other characters that are difficult to type with a standard keyboard.Some special characters are reserved for use in HTML, meaning that your browser will parse them as HTML code. For example, if you use the less-than (<) sign, the browser interprets any text that follows as a tag.To display these characters as text, replace them with their corresponding character entities, as shown in the following table.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Entity"
  },
  {
    "term": "Fetch directive",
    "def": "CSP fetch directives are used in a Content-Security-Policy header and control locations from which certain resource types may be loaded. For instance, script-src allows developers to allow trusted sources of script to execute on a page, while font-src controls the sources of web fonts.All fetch directives fall back to default-src. That means, if a fetch directive is absent in the CSP header, the user agent will look for the default-src directive.See Fetch directives for a complete list.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Fetch_directive"
  },
  {
    "term": "First input delay",
    "def": "First input delay (FID) measures the time from when a user first interacts with your site (i.e. when they click a link, tap on a button, or use a custom, JavaScript-powered control) to the time when the browser is actually able to respond to that interaction.It is the length of time, in milliseconds, between the first user interaction on a web page and the browser's response to that interaction. Scrolling and zooming are not included in this metric.The time between when content is painted to the page and when all the functionality becomes responsive to human interaction often varies based on the size and complexity of the JavaScript needing to be downloaded, parsed, and executed on the main thread, and on the device speed or lack thereof (think low end mobile devices). The longer the delay, the worse the user experience. Reducing site initialization time and eliminating long tasks can help eliminate first input delays.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/First_input_delay"
  },
  {
    "term": "First paint",
    "def": "First Paint, part of the Paint Timing API, is the time between navigation and when the browser renders the first pixels to the screen, rendering anything that is visually different from what was on the screen prior to navigation. It answers the question \"Is it happening?\"",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/First_paint"
  },
  {
    "term": "EXIF",
    "def": "The Exchangeable Image File Format (EXIF) is a standard that specifies how metadata about a multimedia file can be embedded within the file. For example, an image might contain EXIF data describing the: pixel width, height, and density, shutter speed, aperture, ISO settings, capture date, etc.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/EXIF"
  },
  {
    "term": "First interactive",
    "def": "First Interactive, also known as first CPU idle, is a non-standard web performance metric that measures when the user's window is quiet enough to handle user input, or what is termed as minimally interactive.Minimally interactive is defined as when some, but not necessarily all, UI elements on the page have loaded and are interactive, and, on average, respond to user input in a reasonable amount of time.First interactive is a variation of Time to Interactive, which is split into First Interactive and Consistently Interactive. These metrics have been proposed by the Web Incubator Community Group and are already being used in various tools. This metric has been called First CPU Idle since Lighthouse 3.0",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/First_interactive"
  },
  {
    "term": "Firefox OS",
    "def": "Firefox OS is a discontinued open source mobile operating system developed by Mozilla. See Firefox OS for more details.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Firefox_OS"
  },
  {
    "term": "Fallback alignment",
    "def": "In CSS Box Alignment, a fallback alignment is specified in order to deal with cases where the requested alignment cannot be fulfilled. For example, if you specify justify-content: space-between there must be more than one alignment subject. If there is not, the fallback alignment is used. This is specified per alignment method, as detailed below.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Fallback_Alignment"
  },
  {
    "term": "Exception",
    "def": "An exception is a condition that interrupts normal code execution. In JavaScript syntax errors are a very common source of exceptions.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Exception"
  },
  {
    "term": "Favicon",
    "def": "A favicon (favorite icon) is a tiny icon included along with a website, which is displayed in places like the browser's address bar, page tabs and bookmarks menu.Note, however, that most modern browsers replaced the favicon from the address bar by an image indicating whether or not the website is using HTTPS.Usually, a favicon is 16 x 16 pixels in size and stored in the GIF, PNG, or ICO file format.They are used to improve user experience and enforce brand consistency. When a familiar icon is seen in the browser's address bar, for example, it helps users know they are in the right place.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Favicon"
  },
  {
    "term": "Flex Container",
    "def": "A flexbox layout is defined using the flex or inline-flex values of the display property on the parent item. This element then becomes a flex container, and each one of its children becomes a flex item.A value of flex causes the element to become a block level flex container, and inline-flex an inline level flex container. These values create a flex formatting context for the element, which is similar to a block formatting context in that floats will not intrude into the container, and the margins on the container will not collapse with those of the items.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Flex_Container"
  },
  {
    "term": "Expando",
    "def": "Expando properties are properties added to DOM nodes with JavaScript, where those properties are not part of the object's DOM specification:The term may also be applied to properties added to objects without respecting the object's original intent, such as non-numeric named properties added to an Array.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Expando"
  },
  {
    "term": "Event",
    "def": "Events are assets generated by DOM elements, which can be manipulated by a Javascript code.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/event"
  },
  {
    "term": "Flex",
    "def": "flex is a new value added to the CSS display property. Along with inline-flex it causes the element that it applies to in order to become a flex container, and the element's children to each become a flex item. The items then participate in flex layout, and all of the properties defined in the CSS Flexible Box Layout Module may be applied.The flex property is a shorthand for the flexbox properties flex-grow, flex-shrink and flex-basis.In addition <flex> can refer to a flexible length in CSS Grid Layout.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Flex"
  },
  {
    "term": "Fetch metadata request header",
    "def": "A fetch metadata request header is an HTTP request header that provides additional information about the context from which the request originated. This allows the server to make decisions about whether a request should be allowed based on where the request came from and how the resource will be used.With this information a server can implement a resource isolation policy, allowing external sites to request only those resources that are intended for sharing, and that are used appropriately. This approach can help mitigate common cross-site web vulnerabilities such as CSRF, Cross-site Script Inclusion('XSSI'), timing attacks, and cross-origin information leaks.These headers are prefixed with Sec-, and hence have forbidden header names. As such, they cannot be modified from JavaScript.The fetch metadata request headers are:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Fetch_metadata_request_header"
  },
  {
    "term": "Entity header",
    "def": "An entity header is an HTTP header that describes the payload of an HTTP message (i.e. metadata about the message body). Entity headers include: Content-Length, Content-Language, Content-Encoding, Content-Type, Expires, etc. Entity headers may be present in both HTTP request and response messages.In the following example, Content-Length is an entity header, while Host and User-Agent are requests headers:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Entity_header"
  },
  {
    "term": "First CPU idle",
    "def": "First CPU Idle measures when a page is minimally interactive, or when the window is quiet enough to handle user input. It is a non-standard Google web performance metric. Generally, it occurs when most, but not necessarily all visible UI elements are interactive, and the user interface responds, on average, to most user input within 50ms. It is also known as First interactive.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/First_CPU_idle"
  },
  {
    "term": "Flexbox",
    "def": "Flexbox is the commonly-used name for the CSS Flexible Box Layout Module, a layout model for displaying items in a single dimension — as a row or as a column.In the specification, Flexbox is described as a layout model for user interface design. The key feature of Flexbox is the fact that items in a flex layout can grow and shrink. Space can be assigned to the items themselves, or distributed between or around the items.Flexbox also enables alignment of items on the main or cross axis, thus providing a high level of control over the size and alignment of a group of items.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Flexbox"
  },
  {
    "term": "firewall",
    "def": "A firewall is a system that filters network traffic. It can either let it pass or block it, according to some specified rules. For example, it can block incoming connections aimed at a certain port or outgoing connections to a certain IP address.Firewalls can be as simple as a single piece of software, or more complex, like a dedicated machine whose only function is to act as a firewall.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/firewall"
  },
  {
    "term": "First Meaningful Paint",
    "def": "First Meaningful Paint (FMP) is the paint after which the biggest above-the-fold layout change has happened and web fonts have loaded. It is when the answer to \"Is it useful?\" becomes \"yes\", upon first meaningful paint completion.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/first_meaningful_paint"
  },
  {
    "term": "Forbidden header name",
    "def": "A forbidden header name is the name of any HTTP header that cannot be modified programmatically; specifically, an HTTP request header name (in contrast with a Forbidden response header name).Modifying such headers is forbidden because the user agent retains full control over them. Names starting with Sec- are reserved for creating new headers safe from APIs using Fetch that grant developers control over headers, such as XMLHttpRequest.Forbidden header names start with Proxy- or Sec-, or are one of the following names:Forbidden response header name (Glossary)",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name"
  },
  {
    "term": "First contentful paint",
    "def": "First Contentful Paint (FCP) is when the browser renders the first bit of content from the DOM, providing the first feedback to the user that the page is actually loading. The question \"Is it happening?\" is \"yes\" when the first contentful paint completes.The First Contentful Paint time stamp is when the browser first rendered any text, image (including background images), non-white canvas or SVG. This excludes any content of iframes, but includes text with pending webfonts. This is the first time users could start consuming page content.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/First_contentful_paint"
  },
  {
    "term": "DTLS (Datagram Transport Layer Security)",
    "def": "Datagram Transport Layer Security (DTLS) is a protocol used to secure datagram-based communications. It's based on the stream-focused Transport Layer Security (TLS), providing a similar level of security. As a datagram protocol, DTLS doesn't guarantee the order of message delivery, or even that messages will be delivered at all. However, DTLS gains the benefits of datagram protocols, too; in particular, the lower overhead and reduced latency.These features are especially useful for one of the most common areas in which DTLS comes into play: WebRTC. All of the WebRTC related protocols are required to encrypt their communications using DTLS; this includes SCTP, SRTP, and STUN.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/DTLS"
  },
  {
    "term": "Flex Item",
    "def": "The direct children of a Flex Container (elements with display: flex or display: inline-flex set on them) become flex items.Continuous runs of text inside flex containers will also become flex items.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Flex_Item"
  },
  {
    "term": "Engine",
    "def": "The JavaScript engine is an interpreter that parses and executes a JavaScript program.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Engine"
  },
  {
    "term": "First-class Function",
    "def": "A programming language is said to have First-class functions when functions in that language are treated like any other variable. For example, in such a language, a function can be passed as an argument to other functions, can be returned by another function and can be assigned as a value to a variable.We assigned an Anonymous Function in a Variable, then we used that variable to invoke the function by adding parentheses () at the end.We are passing our sayHello() function as an argument to the greeting() function, this explains how we are treating the function as a value.In this example; We need to return a function from another function - We can return a function because we treated function in JavaScript as a value.Back to our example; Now, we need to invoke sayHello function and its returned Anonymous Function. To do so, we have two ways:This way, it returns the Hello! message.We are using double parentheses ()() to invoke the returned function as well.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/First-class_Function"
  },
  {
    "term": "Forbidden response header name",
    "def": "A forbidden response header name is an HTTP header name (either Set-Cookie or Set-Cookie2) that cannot be modified programmatically.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_response_header_name"
  },
  {
    "term": "frame rate (FPS)",
    "def": "A frame rate is the speed at which the browser is able to recalculate, layout and paint content to the display. The frames per second, or fps, is how many frames can be repainted in one second. The goal frame rate for in web site computer graphics is 60fps.Movies generally have a frame rate of 24 fps. They are able to have fewer frames per second because the illusion of life is created with motion blurs. When moving on a computer screen there are no motion blurs (unless you are animating an image sprite with motion blurs).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/FPS"
  },
  {
    "term": "Fragmentainer",
    "def": "A fragmentainer is defined in the CSS Fragmentation Specification as follows:Fragmented contexts are found in CSS Paged Media, where the fragmentainer would be the box which defines a page. In Multiple-column Layout the fragmentainer is the column box created when columns are defined on a multicol container. In CSS Regions each Region is a fragmentainer.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Fragmentainer"
  },
  {
    "term": "Fork",
    "def": "A fork is a copy of an existing software project at some point to add someone's own modifications to the project.Basically, if the license of the original software allows, you can copy the code to develop your own version of it, with your own additions, which will be a \"fork\".Forks are often seen in free and open source software development. This is now a more popular term thanks to contribution model using Git (and/or the GitHub platform).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Fork"
  },
  {
    "term": "FTU",
    "def": "FTU (First Time Use) is the app that loads when you run a newly-installed version of Gecko on a Firefox OS device.You can use FTU to set many important options (e.g. timezone, WiFi details, default language, importing contacts), or take the \"Phone Tour\" to find out more about your device.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/FTU"
  },
  {
    "term": "GIF",
    "def": "GIF (Graphics Interchange Format) is an image format that uses lossless compression and can be used for animations. A GIF uses up to 8 bits per pixel and a maximum of 256 colors from the 24-bit color space.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/gif"
  },
  {
    "term": "FTP",
    "def": "FTP (File Transfer Protocol) is an insecure protocol for transferring files from one host to another over the Internet.For many years it was the defacto standard way of transferring files, but as it is inherently insecure, it is no longer supported by many hosting accounts. Instead you should use SFTP (a secure, encrypted version of FTP) or another secure method for transferring files like Rsync over SSH.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/FTP"
  },
  {
    "term": "Git",
    "def": "Git is a free, open-source, distributed Source Code Management (SCM) system. It facilitates handling code bases with distributed development teams. What sets it apart from previous SCM systems is the ability to do common operations (branching, committing, etc.) on your local development machine, without having to change the master repository or even having write access to it.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Git"
  },
  {
    "term": "General header",
    "def": "General header is an outdated term used to refer to an HTTP header that can be used in both request and response messages, but which doesn't apply to the content itself (a header that applied to the content was called an entity header). Depending on the context they are used in, general headers might either be response or request headers (e.g. Cache-Control).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/General_header"
  },
  {
    "term": "Glyph",
    "def": "A glyph is a term used in typography for the visual representation of one or more characters.The fonts used by a website contain different sets of glyphs, which represent the characters of the font.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Glyph"
  },
  {
    "term": "Fuzz testing",
    "def": "Fuzzing is a technique for testing software using automated tools to provide invalid or unexpected input to a program or function in a program, then checking the results to see if the program crashes or otherwise acts inappropriately. This is an important way to ensure that software is stable, reliable, and secure, and we use fuzzing a lot at Mozilla.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Fuzzing"
  },
  {
    "term": "Function",
    "def": "A function is a code snippet that can be called by other code or by itself, or a variable that refers to the function. When a function is called, arguments are passed to the function as input, and the function can optionally return a value. A function in JavaScript is also an object.A function name is an identifier included as part of a function declaration or function expression. The function name's scope depends on whether the function name is a declaration or expression.An anonymous function is a function without a function name. Only function expressions can be anonymous, function declarations must have a name:The following terms are not used in the ECMAScript language specification, they're jargon used to refer to different types of functions.A named function is a function with a function name:An inner function is a function inside another function (square in this case). An outer function is a function containing a function (addSquares in this case):A recursive function is a function that calls itself. See recursion.An Immediately Invoked Function Expressions (IIFE) is a function that is called directly after the function is loaded into the browser's compiler. The way to identify an IIFE is by locating the extra left and right parenthesis at the end of the function's definition.If you'd like to know more about IIFEs, check out the following page on Wikipedia : Immediately Invoked Function Expression",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Function"
  },
  {
    "term": "Global variable",
    "def": "A global variable is a variable that is declared in the global scope in other words, a variable that is visible from all other scopes.In JavaScript it is a property of the global object.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Global_variable"
  },
  {
    "term": "Global scope",
    "def": "In a programming environment, the global scope is the scope that contains, and is visible in, all other scopes.In client-side JavaScript, the global scope is generally the web page inside which all the code is being executed.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Global_scope"
  },
  {
    "term": "GPU",
    "def": "The GPU (Graphics Processing Unit) is a computer component similar to the CPU (Central Processing Unit). It specializes in the drawing of graphics (both 2D and 3D) on your monitor.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/GPU"
  },
  {
    "term": "Gecko",
    "def": "Gecko is the layout engine developed by the Mozilla Project and used in many apps/devices, including Firefox and Firefox OS.Web browsers need software called a layout engine to interpret HTML, CSS, JavaScript, and embedded content (like images) and draw everything to your screen. Besides this, Gecko makes sure associated APIs work well on every operating system Gecko supports, and that appropriate APIs are exposed only to relevant support targets. This means that Gecko includes, among other things, a networking stack, graphics stack, layout engine, a JavaScript virtual machine, and porting layers.Since all Firefox OS apps are Web apps, Firefox OS uses Gecko as its app runtime as well.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Gecko"
  },
  {
    "term": "GPL",
    "def": "The (GNU) GPL (General Public License) is a copyleft free software license published by the Free Software Foundation. Users of a GPL-licensed program are granted the freedom to use it, read the source code, modify it and redistribute the changes they made, provided they redistribute the program (modified or unmodified) under the same license.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/GPL"
  },
  {
    "term": "Grid Cell",
    "def": "In a CSS Grid Layout, a grid cell is the smallest unit you can have on your CSS grid. It is the space between four intersecting grid lines and conceptually much like a table cell.\n  \nIf you do not place items using one of the grid placement methods, direct children of the grid container will be placed one into each individual grid cell by the auto-placement algorithm. Additional row or column tracks will be created to create enough cells to hold all items.In the example we have created a three column track grid. The five items are placed into grid cells working along an initial row of three grid cells, then creating a new row for the remaining two.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Grid_Cell"
  },
  {
    "term": "Grid container",
    "def": "Using the value grid or inline-grid on an element turns it into a grid container using CSS Grid Layout, and any direct children of this element become grid items.When an element becomes a grid container it establishes a grid formatting context. The direct children can now lay themselves out on any explicit grid defined using grid-template-columns and grid-template-rows, or on the implicit grid created when an item is placed outside of the explicit grid.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Grid_Container"
  },
  {
    "term": "Grid Axis",
    "def": "CSS Grid Layout is a two-dimensional layout method enabling the laying out of content in rows and columns. Therefore in any grid we have two axes. The block or column axis, and the inline or row axis.It is along these axes that items can be aligned and justified using the properties defined in the Box Alignment specification.In CSS the block or column axis is the axis used when laying out blocks of text. If you have two paragraphs and are working in a right to left, top to bottom language they lay out one below the other, on the block axis.\n  \nThe inline or row axis runs across the Block Axis and is the direction along which regular text flows. These are our rows in CSS Grid Layout.\n  \nThe physical direction of these axes can change according to the writing mode of the document.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Grid_Axis"
  },
  {
    "term": "Google Chrome",
    "def": "Google Chrome is a free Web browser developed by Google. It's based on the Chromium open source project. Some key differences are described on the Chromium wiki. Chrome supports its own layout called Blink. Note that the iOS version of Chrome uses that platform's WebView, not Blink.Use one of these links if you're an everyday user.If you want to try the latest Chrome features, install one of the pre-stable builds. Google pushes updates frequently and has designed the distributions to run side-by-side with the stable version. Visit the Chrome Releases Blog to learn what's new.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Google_Chrome"
  },
  {
    "term": "Graceful degradation",
    "def": "Graceful degradation is a design philosophy that centers around trying to build a modern web site/application that will work in the newest browsers, but falls back to an experience that while not as good still delivers essential content and functionality in older browsers.Polyfills can be used to build in missing features with JavaScript, but acceptable alternatives to features like styling and layout should be provided where possible, for example by using the CSS cascade, or HTML fallback behavior. Some good examples can be found in Handling common HTML and CSS problems.It is a useful technique that allows Web developers to focus on developing the best possible websites, given that those websites are accessed by multiple unknown user-agents. Progressive enhancement is related but different — often seen as going in the opposite direction to graceful degradation. In reality both approaches are valid and can often complement one another.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Graceful_degradation"
  },
  {
    "term": "Garbage collection",
    "def": "Garbage collection is a term used in computer programming to describe the process of finding and deleting objects which are no longer being referenced by other objects.In other words, garbage collection is the process of removing any objects which are not being used by any other objects. Often abbreviated \"GC,\" garbage collection is a fundamental component of the memory management system used by JavaScript.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Garbage_collection"
  },
  {
    "term": "Grid Column",
    "def": "A grid column is a vertical track in a CSS Grid Layout, and is the space between two vertical grid lines. It is defined by the grid-template-columns property or in the shorthand grid or grid-template properties.In addition, columns may be created in the implicit grid when items are placed outside of columns created in the explicit grid. These columns will be auto-sized by default, or can have a size specified with the grid-auto-columns property.When working with alignment in CSS Grid Layout, the axis down which columns run is known as the block, or column, axis.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Grid_Column"
  },
  {
    "term": "Grid Lines",
    "def": "Grid lines are created when you define tracks in the explicit grid using CSS Grid Layout.In the following example there is a grid with three column tracks and two row tracks. This gives us 4 column lines and 3 row lines.Lines can be addressed using their line number. In a left-to-right language such as English, column line 1 will be on the left of the grid, row line 1 on the top. Lines numbers respect the writing mode of the document and so in a right-to-left language for example, column line 1 will be on the right of the grid. The image below shows the line numbers of the grid, assuming the language is left-to-right.\n  \nLines are also created in the implicit grid when implicit tracks are created to hold content positioned outside of the explicit grid, however these lines cannot be addressed by a number.Having created a grid, you can place items onto the grid by line number. In the following example the item is positioned from column line 1 to column line 3, and from row line 1 to row line 3.The lines created in the explicit grid can be named, by adding the name in square brackets before or after the track sizing information. When placing an item, you can then use these names instead of the line number, as demonstrated below.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Grid_Lines"
  },
  {
    "term": "Grid Tracks",
    "def": "A grid track is the space between two adjacent grid lines. They are defined in the explicit grid by using the grid-template-columns and grid-template-rows properties or the shorthand grid or grid-template properties. Tracks are also created in the implicit grid by positioning a grid item outside of the tracks created in the explicit grid.The image below shows the first row track on a grid.\n  \nWhen defining grid tracks using grid-template-columns and grid-template-rows you may use any length unit, and also the flex unit, fr which indicates a portion of the available space in the grid container.The example below demonstrates a grid with three column tracks, one of 200 pixels, the second of 1fr, the third of 3fr. Once the 200 pixels has been subtracted from the space available in the grid container, the remaining space is divided by 4. One part is given to column 2, 3 parts to column 3.Tracks created in the implicit grid are auto-sized by default, however you can define a size for these tracks using the grid-auto-rows and grid-auto-columns properties.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Grid_Tracks"
  },
  {
    "term": "Grid Areas",
    "def": "A grid area is one or more grid cells that make up a rectangular area on the grid. Grid areas are created when you place an item using line-based placement or when defining areas using named grid areas.\n  \nGrid areas must be rectangular in nature; it is not possible to create, for example, a T- or L-shaped grid area.In the example below I have a grid container with two grid items. I have named these with the grid-area property and then laid them out on the grid using grid-template-areas. This creates two grid areas, one covering four grid cells, the other two.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Grid_Areas"
  },
  {
    "term": "gzip compression",
    "def": "gzip is a file format used for file compression and decompression. It is based on the Deflate algorithm that allows files to be made smaller in size which allows for faster network transfers. gzip is commonly supported by web servers and modern browsers, meaning that servers can automatically compress files with gzip before sending them, and browsers can uncompress files upon receiving them.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/GZip_compression"
  },
  {
    "term": "Gutters",
    "def": "Gutters or alleys are spacing between content tracks. These can be created in CSS Grid Layout using the column-gap, row-gap, or gap properties.In the example below we have a three-column and two-row track grid, with 20-pixel gaps between column tracks and 20px-gaps between row tracks.In terms of grid sizing, gaps act as if they were a regular grid track however nothing can be placed into the gap. The gap acts as if the grid line at that location has gained extra size, so any grid item placed after that line begins at the end of the gap.The row-gap and column-gap properties are not the only things that can cause tracks to space out. Margins, padding, or the use of the space distribution properties in Box Alignment can all contribute to the visible gap – therefore the row-gap and column-gap properties should not be seen as equal to the \"gutter size\" unless you know that your design has not introduced any additional space with one of these methods.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Gutters"
  },
  {
    "term": "Hash",
    "def": "The hash function takes a variable-length message input and produces a fixed-length hash output. It is commonly in the form of a 128-bit \"fingerprint\" or \"message digest\". Hashes are very useful for cryptography — they insure the integrity of transmitted data, and provide the basis for HMAC, which enables message authentication.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/hash"
  },
  {
    "term": "Grid Row",
    "def": "A grid row is a horizontal track in a CSS Grid Layout, that is the space between two horizontal grid lines. It is defined by the grid-template-rows property or in the shorthand grid or grid-template properties.In addition, rows may be created in the implicit grid when items are placed outside of rows created in the explicit grid. These rows will be auto sized by default, or can have a size specified with the grid-auto-rows property.When working with alignment in CSS Grid Layout, the axis along which rows run is known as the inline, or row, axis.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Grid_Rows"
  },
  {
    "term": "Grid",
    "def": "A CSS grid is defined using the grid value of the display property; you can define columns and rows on your grid using the grid-template-rows and grid-template-columns properties.The grid that you define using these properties is described as an explicit grid.If you place content outside of this explicit grid, or if you are relying on auto-placement and the grid algorithm needs to create additional row or column tracks to hold grid items, then extra tracks will be created in the implicit grid. The implicit grid is the grid created automatically due to content being added outside of the tracks defined.In the example below I have created an explicit grid of three columns and two rows. The third row on the grid is an implicit grid row track, formed due to their being more than the six items which fill the explicit tracks.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Grid"
  },
  {
    "term": "Guard",
    "def": "Guard is a feature of Headers objects (as defined in the Fetch spec, which affects whether methods such as set() and append() can change the header's contents. For example, immutable guard means that headers can't be changed. For more information, read Fetch basic concepts: guard.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Guard"
  },
  {
    "term": "Global object",
    "def": "A global object is an object that always exists in the global scope.In JavaScript, there's always a global object defined. In a web browser, when scripts create global variables defined with the var keyword, they're created as members of the global object. (In Node.js this is not the case.) The global object's interface depends on the execution context in which the script is running. For example:The window object is the Global Object in the Browser. Any Global Variables or Functions can be accessed as properties of the window object.After defining a Global Variable foo, we can access its value directly from the window object, by using the variable name foo as a property name of the Global Object window.foo.The global variable foo was stored in the window object, like this:The example above explains how Global Functions are stored as properties in the window object. We created a Global Function called greeting, then invoked it using the window object.The global function greeting was stored in the window object, like this:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Global_object"
  },
  {
    "term": "Head",
    "def": "The Head is the part of an HTML document that contains metadata about that document, such as author, description, and links to CSS or JavaScript files that should be applied to the HTML.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Head"
  },
  {
    "term": "Houdini",
    "def": "Houdini is a set of low level APIs that give developers the power to extend CSS, providing the ability to hook into the styling and layout process of a browser's rendering engine. Houdini gives developers access to the CSS Object Model (CSSOM), enabling developers to write code the browser can parse as CSS.The benefit of Houdini is that developers can create CSS features without waiting for web standards specifications to define them and without waiting for every browser to fully implement the features.While many of the features Houdini enables can be created with JavaScript, interacting directly with the CSSOM before JavaScript is enabled provides for faster parse times. Browsers create the CSSOM — including layout, paint, and composite processes — before applying any style updates found in scripts: layout, paint, and composite processes are repeated for updated JavaScript styles to be implemented. Houdini code doesn't wait for that first rendering cycle to be complete. Rather, it is included in that first cycle, creating renderable, understandable styles.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Houdini"
  },
  {
    "term": "High-level programming language",
    "def": "A high-level programming language has a significant abstraction from the details of computer operation. It is designed to be easily understood by humans and for this reason they must be translated by another software. Unlike low-level programming languages, it may use natural language elements, or may automate (or even entirely hide) significant areas of computing systems, making the process of developing simpler and more understandable relative to a lower-level language. The amount of abstraction provided defines how \"high-level\" a programming language is.The idea of a language automatically translatable into machine code, but nearer to human logic, was introduced in computer science in the 1950s, especially thanks to the work of John Backus (IBM), to whom it owes the first high-level language to have been widely circulated: Fortran. For this innovation Backus received the Turing prize.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/High-level_programming_language"
  },
  {
    "term": "HMAC",
    "def": "Hash-based message authentication code(HMAC) is a protocol used for cryptographically authenticating messages.It can use any kind of cryptographic functions, and its strength depends on the underlying function (SHA1 or MD5 for instance), and the chosen secret key. With such a combination, the HMAC verification algorithm is then known with a compound name such as HMAC-SHA1.HMAC is used to ensure both integrity and authentication.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/HMAC"
  },
  {
    "term": "HSTS",
    "def": "HTTP Strict Transport Security lets a web site inform the browser that it should never load the site using HTTP and should automatically convert all attempts to access the site using HTTP to HTTPS requests instead. It consists in one HTTP header, Strict-Transport-Security, sent by the server with the resource.In other words, it tells the browser that changing the protocol from HTTP to HTTPS in a URL works (and is more secure) and asks the browser to do it for every request.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/HSTS"
  },
  {
    "term": "HTML5",
    "def": "The term HTML5 is essentially a buzzword that refers to a set of modern web technologies. This includes the HTML Living Standard, along with JavaScript APIs to enhance storage, multimedia, and hardware access.You may sometimes hear about \"new HTML5 elements\", or find HTML5 described as a new version of HTML. HTML5 was the successor to previous HTML versions and introduced new elements and capabilities to the language on top of the previous version, HTML 4.01, as well as improving or removing some existing functionality. However, as a Living Standard HTML now has no version. The up-to-date specification can be found at html.spec.whatwg.org/.Any modern site should use the HTML doctype — this will ensure that you are using the latest version of HTML.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/HTML5"
  },
  {
    "term": "Hotlink",
    "def": "A hotlink (also known as an inline link) is an object (typically an image) directly linked to from another site. For example, an image hosted on site1.com is shown directly on site2.com.The practice is often frowned upon as it can cause unwanted bandwidth usage on the website hosting the linked-to object, and copyright concerns — it is considered stealing when it is done without permission.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Hotlink"
  },
  {
    "term": "Host",
    "def": "A host is a device connected to the Internet (or a local network). Some hosts called servers offer additional services like serving webpages or storing files and emails.The host doesn't need to be a hardware instance. It can be generated by virtual machines. The host generated by virtual machines is called \"Virtual hosting\".",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Host"
  },
  {
    "term": "HPKP",
    "def": "HTTP Public Key Pinning (HPKP) is a security feature that tells a web client to associate a specific cryptographic public key with a certain web server to decrease the risk of MITM attacks with forged certificates.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/HPKP"
  },
  {
    "term": "HTML",
    "def": "HTML (HyperText Markup Language) is a descriptive language that specifies webpage structure.In 1990, as part of his vision of the Web, Tim Berners-Lee defined the concept of hypertext, which Berners-Lee formalized the following year through a markup mainly based on SGML. The IETF began formally specifying HTML in 1993, and after several drafts released version 2.0 in 1995. In 1994 Berners-Lee founded the W3C to develop the Web. In 1996, the W3C took over the HTML work and published the HTML 3.2 recommendation a year later. HTML 4.0 was released in 1999 and became an ISO standard in 2000.At that time, the W3C nearly abandoned HTML in favor of XHTML, prompting the founding of an independent group called WHATWG in 2004. Thanks to WHATWG, work on HTML5 continued: the two organizations released the first draft in 2008 and the final standard in 2014.An HTML document is a plaintext document structured with elements. Elements are surrounded by matching opening and closing tags. Each tag begins and ends with angle brackets (<>). There are a few empty or void tags that cannot enclose any text, for instance <img>.You can extend HTML tags with attributes, which provide additional information affecting how the browser interprets the element:\n  \nAn HTML file is normally saved with an .htm or .html extension, served by a web server, and can be rendered by any Web browser.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/HTML"
  },
  {
    "term": "Hoisting",
    "def": "JavaScript Hoisting refers to the process whereby the interpreter appears to move the declaration of functions, variables or classes to the top of their scope, prior to execution of the code.Hoisting allows functions to be safely used in code before they are declared.\n  Variable and class declarations are also hoisted, so they too can be referenced before they are declared.\n  Note that doing so can lead to unexpected errors, and is not generally recommended.\nOne of the advantages of hoisting is that it lets you use a function before you declare it in your code.Without hoisting you would have to write the same code like this:Hoisting works with variables too, so you can use a variable in code before it is declared and/or initialized.\n  However JavaScript only hoists declarations, not initializations!\n  This means that initialization doesn't happen until the associated line of code is executed, even if the variable was originally initialized then declared, or declared and initialized in the same line.\nUntil that point in the execution is reached the variable has its default initialization (undefined for a variable declared using var, otherwise uninitialized).Below are some examples showing what can happen if you use a variable before it is declared.\n  Here we declare then initialize the value of a var after using it.\n  The default initialization of the var is undefined.\nThe same thing happens if we declare and initialize the variable in the same line.\n  If we forget the declaration altogether (and only initialize the value) the variable isn't hoisted.\n  Trying to read the variable before it is initialized results in ReferenceError exception.\n\n  Note however that initialization also causes declaration (if not already declared).\n  The code snippet below will work, because even though it isn't hoisted, the variable is initialized and effectively declared before it is used.\n\n  Variables declared with let and const are also hoisted but, unlike var, are not initialized with a default value.\n  An exception will be thrown if a variable declared with let or const is read before it is initialized.\n\n  Note that it is the order in which code is executed that matters, not the order in which it is written in the source file.\n  The code will succeed provided the line that initializes the variable is executed before any line that reads it.\nFor information and examples see let > temporal dead zone.\n  Classes defined using a class declaration are hoisted, which means that JavaScript has a reference to the class.\n  However the class is not initialized by default, so any code that uses it before the line in which it is initialized is executed will throw a ReferenceError.\nFunction expressions and class expressions are not hoisted.\n  The expressions evaluate to a function or class (respectively), which are typically assigned to a variable.\n  In this case the variable declaration is hoisted and the expression is its initialization.\n  Therefore the expressions are not evaluated until the relevant line is executed.\n",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Hoisting"
  },
  {
    "term": "HTTP",
    "def": "The HyperText Transfer Protocol (HTTP) is the underlying network protocol that enables transfer of hypermedia documents on the Web, typically between a browser and a server so that humans can read them. The current version of the HTTP specification is called HTTP/2.As part of a URI, the \"http\" within \"http://example.com/\" is called a \"scheme\". Resources using the \"http\" schema are typically transported over unencrypted connections using the HTTP protocol. The \"https\" scheme (as in \"https://developer.mozilla.org\") indicates that a resource is transported using the HTTP protocol, but over a secure TLS channel.HTTP is textual (all communication is done in plain text) and stateless (no communication is aware of previous communications). This property makes it ideal for humans to read documents (web sites) on the world wide web. However, HTTP can also be used as a basis for REST web services from server to server or AJAX requests within web sites to make them more dynamic.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/HTTP"
  },
  {
    "term": "HTTP/2",
    "def": "HTTP/2 is a major revision of the HTTP network protocol.The primary goals for HTTP/2 are to reduce latency by enabling full request and response multiplexing, minimize protocol overhead via efficient compression of HTTP header fields, and add support for request prioritization and server push.HTTP/2 does not modify the application semantics of HTTP in any way. All the core concepts found in HTTP 1.1, such as HTTP methods, status codes, URIs, and header fields, remain in place. Instead, HTTP/2 modifies how the data is formatted (framed) and transported between the client and server, both of which manage the entire process, and hides application complexity within the new framing layer. As a result, all existing applications can be delivered without modification.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/HTTP_2"
  },
  {
    "term": "HTTPS RR",
    "def": "HTTPS RR (HTTPS Resource Records) are a type of DNS record that delivers configuration information and parameters for how to access a service via HTTPS.\n  An HTTPS RR can be used to optimize the process of connecting to a service using HTTPS.\n  Further, the presence of an HTTPS RR signals that all useful HTTP resources on the origin are reachable over HTTPS, which in turn means that a browser can safely upgrade connections to the domain from HTTP to HTTPS.\n",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/https_rr"
  },
  {
    "term": "HTTP header",
    "def": "An HTTP header is a field of an HTTP request or response that passes additional context and metadata about the request or response. For example, a request message can use headers to indicate it's preferred media formats, while a response can use header to indicate the media format of the returned body. Headers are case-insensitive, begin at the start of a line and are immediately followed by a ':' and a header-dependent value. The value finishes at the next CRLF or at the end of the message.The HTTP and Fetch specifications refer to a number of header categories, including:A basic request with one header:Redirects have mandatory headers (Location):A typical set of headers:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/HTTP_header"
  },
  {
    "term": "HTTP/3",
    "def": "HTTP/3 is the upcoming major revision of the HTTP network protocol, succeeding HTTP/2.The major point of HTTP/3 is that it uses a new UDP protocol named QUIC, instead of TCP.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/HTTP_3"
  },
  {
    "term": "IANA",
    "def": "IANA (Internet Assigned Numbers Authority) is a subsidiary of ICANN charged with recording and/or assigning domain names, IP addresses, and other names and numbers used by Internet protocols.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/IANA"
  },
  {
    "term": "Identifier",
    "def": "An identifier is a sequence of characters in the code that identifies a variable, function, or property.In JavaScript, identifiers are case-sensitive and can contain Unicode letters, $, _, and digits (0-9), but may not start with a digit.An identifier differs from a string in that a string is data, while an identifier is part of the code. In JavaScript, there is no way to convert identifiers to strings, but sometimes it is possible to parse strings into identifiers.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Identifier"
  },
  {
    "term": "Hypertext",
    "def": "Hypertext is text that contains links to other texts, as opposed to a single linear flow like in a novel.The term was coined by Ted Nelson around 1965.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Hypertext"
  },
  {
    "term": "IDE",
    "def": "An Integrated Development Environment (IDE) or Interactive Development environment is a software application that provides comprehensive facilities to computer programmers for software development. An IDE normally consists of a source code editor, build automation tools and a debugger.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/IDE"
  },
  {
    "term": "IDL",
    "def": "An IDL (Interface Description Language) is a generic language used to specified objects' interfaces apart from any specific programming language.In HTML, most attributes have two faces: the content attribute and the IDL attribute.The content attribute is the attribute as you set it from the content (the HTML code) and you can set it or get it via element.setAttribute() or element.getAttribute(). The content attribute is always a string even when the expected value should be an integer. For example, to set an <input> element's maxlength to 42 using the content attribute, you have to call setAttribute(\"maxlength\", \"42\") on that element.The IDL attribute is also known as a JavaScript property. These are the attributes you can read or set using JavaScript properties like element.foo. The IDL attribute is always going to use (but might transform) the underlying content attribute to return a value when you get it and is going to save something in the content attribute when you set it. In other words, the IDL attributes, in essence, reflect the content attributes.Most of the time, IDL attributes will return their values as they are really used. For example, the default type for <input> elements is \"text\", so if you set input.type=\"foobar\", the <input> element will be of type text (in the appearance and the behavior) but the \"type\" content attribute's value will be \"foobar\". However, the type IDL attribute will return the string \"text\".IDL attributes are not always strings; for example, input.maxlength is a number (a signed long). When using IDL attributes, you read or set values of the desired type, so input.maxlength is always going to return a number and when you set input.maxlength, it wants a number. If you pass another type, it is automatically converted to a number as specified by the standard JavaScript rules for type conversion.IDL attributes can reflect other types such as unsigned long, URLs, booleans, etc. Unfortunately, there are no clear rules and the way IDL attributes behave in conjunction with their corresponding content attributes depends on the attribute. Most of the time, it will follow the rules laid out in the specification, but sometimes it doesn't. HTML specifications try to make this as developer-friendly as possible, but for various reasons (mostly historical), some attributes behave oddly (select.size, for example) and you should read the specifications to understand how exactly they behave.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/IDL"
  },
  {
    "term": "IETF",
    "def": "The Internet Engineering Task Force (IETF) is a worldwide organization that drafts specifications governing the mechanisms behind the Internet, especially the TCP/IP or Internet Protocol Suite.The IETF is open, run by volunteers, and sponsored by the Internet Society.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/IETF"
  },
  {
    "term": "ICANN",
    "def": "ICANN (Internet Corporation for Assigned Names and Numbers) is an international nonprofit that maintains the domain name system and the record of IP addresses.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/ICANN"
  },
  {
    "term": "ICE",
    "def": "ICE (Interactive Connectivity Establishment) is a framework used by WebRTC (among other technologies) for connecting two peers, regardless of network topology (usually for audio and video chat). This protocol lets two peers find and establish a connection with one another even though they may both be using Network Address Translator (NAT) to share a global IP address with other devices on their respective local networks.The framework algorithm looks for the lowest-latency path for connecting the two peers, trying these options in order:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/ICE"
  },
  {
    "term": "Idempotent",
    "def": "An HTTP method is idempotent if an identical request can be made once or several times in a row with the same effect while leaving the server in the same state. In other words, an idempotent method should not have any side-effects (except for keeping statistics). Implemented correctly, the GET, HEAD, PUT, and DELETE methods are idempotent, but not the POST method. All safe methods are also idempotent.To be idempotent, only the actual back-end state of the server is considered, the status code returned by each request may differ: the first call of a DELETE will likely return a 200, while successive ones will likely return a 404. Another implication of DELETE being idempotent is that developers should not implement RESTful APIs with a delete last entry functionality using the DELETE method.Note that the idempotence of a method is not guaranteed by the server and some applications may incorrectly break the idempotence constraint.GET /pageX HTTP/1.1 is idempotent. Called several times in a row, the client gets the same results:POST /add_row HTTP/1.1 is not idempotent; if it is called several times, it adds several rows:DELETE /idX/delete HTTP/1.1 is idempotent, even if the returned status code may change between requests:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Idempotent"
  },
  {
    "term": "HTTPS",
    "def": "HTTPS (HyperText Transfer Protocol Secure) is an encrypted version of the HTTP protocol. It uses SSL or TLS to encrypt all communication between a client and a server. This secure connection allows clients to safely exchange sensitive data with a server, such as when performing banking activities or online shopping.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/https"
  },
  {
    "term": "Hyperlink",
    "def": "Hyperlinks connect webpages or data items to one another. In HTML, <a> elements define hyperlinks from a spot on a webpage (like a text string or image) to another spot on some other webpage (or even on the same page).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Hyperlink"
  },
  {
    "term": "I18N",
    "def": "i18n (from \"internationalization\", a 20-letter word) is the best practice that enables products or services to be readily adapted to any target culture.Among other things, i18n requires support for multiple",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/I18N"
  },
  {
    "term": "Instance",
    "def": "An object created by a constructor is an instance of that constructor.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Instance"
  },
  {
    "term": "IIFE",
    "def": "\n  An IIFE (Immediately Invoked Function Expression) is a JavaScript function that runs as soon as it is defined.\n  The name IIFE is promoted by Ben Alman in his blog.\nIt is a design pattern which is also known as a Self-Executing Anonymous Function and contains two major parts:\n  Because our application could include many functions and global variables from different source files, it's\n  important to limit the number of global variables. If we have some initiation code that we don't need to use\n  again, we could use the IIFE pattern. As we will not reuse the code again, using IIFE in this case is better than\n  using a function declaration or a function expression.\nAn async IIFE allows you to use await and for-await even in older browsers and JavaScript runtimes that have no top-level await:\n  We would also use IIFE to create private and public variables and methods. For a more sophisticated use of the module\n  pattern and other use of IIFE, you could see the book Learning JavaScript Design Patterns by Addy Osmani.\n\n  We could see the following use of IIFE in some old code, before the introduction of the statements let and const\n  in ES6 and the block scope. With the statement var, we have only function scopes and the global scope.\n  Suppose we want to create 2 buttons with the texts Button 0 and Button 1 and we click\n  them, we would like them to alert 0 and 1. The following code doesn't work:\n\n  When clicked, both Button 0 and Button 1 alert 2 because i is global,\n  with the last value 2. To fix this problem before ES6, we could use the IIFE pattern:\n\n  When clicked, Buttons 0 and 1 alert 0 and 1.\n  The variable i is globally defined.\n  Using the statement let, we could simply do:\nWhen clicked, these buttons alert 0 and 1.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/IIFE"
  },
  {
    "term": "IMAP",
    "def": "IMAP (Internet Message Access Protocol) is a protocol used to retrieve and store emails. More recent than POP, IMAP allows folders and rules on the server.Unlike POP3, IMAP allows multiple simultaneous connections to one mailbox. Clients accessing a mailbox can receive information about state changes made from other clients. IMAP also provides a mode for clients to stay connected and receive information on demand.Mark Crispin initially developed IMAP in 1986 as Interim Mail Access Protocol. IMAP4 revision 1 is the current version, defined by RFC 3501.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/IMAP"
  },
  {
    "term": "IndexedDB",
    "def": "IndexedDB is a Web API for storing large data structures within browsers and indexing them for high-performance searching. Like an SQL-based RDBMS, IndexedDB is a transactional database system. However, it uses JavaScript objects rather than fixed columns tables to store data.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/IndexedDB"
  },
  {
    "term": "Information architecture",
    "def": "Information architecture, as applied to web design and development, is the practice of organizing the information / content / functionality of a web site so that it presents the best user experience it can, with information and services being easily usable and findable.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Information_architecture"
  },
  {
    "term": "IP Address",
    "def": "An IP address is a number assigned to every device connected to a network that uses the Internet protocol.\"IP address\" typically still refers to 32-bit IPv4 addresses until IPv6 is deployed more broadly.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/IP_Address"
  },
  {
    "term": "Internationalization",
    "def": "Internationalization, often shortened to \"i18n\", is the adapting of a web site or web application to different languages, regional differences, and technical requirements for different regions and countries. Internationalization is the process of architecting your web application so that it can be quickly and easily adapted to various languages and regions without much engineering effort when new languages and regions are supported. Also so that a user can browse features to translate or localize the application to access all the content without breaking the layout.Internationalization includes support for multiple character sets (usually via Unicode), units of measure (currency, °C/°F, km/miles, etc.), date and time formats, keyboard layouts, and layout and text directions.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Internationalization_and_localization"
  },
  {
    "term": "IPv6",
    "def": "IPv6 is the current version of the communication protocol underlying the Internet. Slowly IPv6 is replacing IPv4, among other reasons because IPv6 allows for many different IP addresses.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/IPv6"
  },
  {
    "term": "IPv4",
    "def": "IPv4 is the fourth version of the communication protocol underlying the Internet and the first version to be widely deployed.First formalized in 1981, IPv4 traces its roots to the initial development work for ARPAnet. IPv4 is a connectionless protocol to be used on packet-switched Link layer networks (ethernet). IPv6 is gradually replacing IPv4 owing to IPv4's security problems and the limitations of its address field. (Version number 5 was assigned in 1979 to the experimental Internet Stream Protocol, which however has never been called IPv5.)IPv4 on Wikipedia",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/IPv4"
  },
  {
    "term": "Internet",
    "def": "The Internet is a worldwide network of networks that uses the Internet protocol suite (also named TCP/IP from its two most important protocols).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Internet"
  },
  {
    "term": "Input method editor",
    "def": "An input method editor (IME) is a program that provides a specialized user interface for text input. Input method editors are used in many situations:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Input_method_editor"
  },
  {
    "term": "Intrinsic size",
    "def": "In CSS, the intrinsic size of an element is the size it would be based on its content, if no external factors were applied to it. For example, inline elements are sized intrinsically: width, height, and vertical margin and padding have no impact, though horizontal margin and padding do.How intrinsic sizes are calculated is defined in the CSS Intrinsic and Extrinsic Sizing Specification.Intrinsic sizing takes into account the min-content and max-content size of an element. For text the min-content size would be if the text wrapped as small as it can in the inline direction without causing an overflow, doing as much soft-wrapping as possible. For a box containing a string of text, the min-content size would be defined by the longest word. The keyword value of min-content for the width property will size an element according to the min-content size.The max-content size is the opposite — in the case of text, this would have the text display as wide as possible, doing no soft-wrapping, even if an overflow was caused. The keyword value max-content exposes this behavior.For images the intrinsic size has the same meaning — it is the size that an image would be displayed if no CSS was applied to change the rendering. By default images are assumed to have a \"1x\" pixel density (1 device pixel = 1 CSS pixel) and so the intrinsic size is simply the pixel height and width. The intrinsic image size and resolution can be explicitly specified in the EXIF data. The intrinsic pixel density may also be set for images using the srcset attribute (note that if both mechanisms are used, the srcset value is applied \"over\" the EXIF value).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Intrinsic_Size"
  },
  {
    "term": "Inheritance",
    "def": "Inheritance is a major feature of object-oriented programming. Data abstraction can be carried up several levels, that is, classes can have superclasses and subclasses.As an app developer, you can choose which of the superclass's attributes and methods to keep and add your own, making class definition very flexible. Some languages let a class inherit from more than one parent (multiple inheritance).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Inheritance"
  },
  {
    "term": "ISO",
    "def": "ISO (International Organization for Standardization) is a global association that develops uniform criteria coordinating the companies in each major industry.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/ISO"
  },
  {
    "term": "ITU",
    "def": "The International Telecommunication Union (ITU) is the organization authorized by the United Nations to establish standards and rules for telecommunication, including telegraph, radio, telephony and the internet.From defining rules for ensuring transmissions get to where they need to go to and creating the \"SOS\" alert signal used in Morse code, the ITU has long played a key role in how we use technology to exchange information and ideas.In the Internet Age, the ITU's role of establishing standards for video and audio data formats used for streaming, teleconferencing, and other purposes. For example, the ITU and the Moving Picture Experts Group (MPEG) worked together to develop and publish, as well as to maintain, the various MPEG specifications, such as MPEG-2 (ITU H.262), AVC (ITU H.264), and HEVC (ITU H.265).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/ITU"
  },
  {
    "term": "JPEG",
    "def": "JPEG (Joint Photographic Experts Group) is a commonly used method of lossy compression for digital images.JPEG compression is composed of three compression techniques applied in successive layers, including chrominance subsampling, discrete cosine transformation and quantization, and run-length Delta & Huffman encoding. Chroma subsampling involves implementing less resolution for chroma information than for luma information, taking advantage of the human visual system's lower acuity for color differences than for luminance. A discrete cosine transform expresses a finite sequence of data points in terms of a sum of cosine functions oscillating at different frequencies.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/jpeg"
  },
  {
    "term": "JavaScript",
    "def": "JavaScript (or \"JS\") is a programming language used most often for dynamic client-side scripts on webpages, but it is also often used on the server-side, using a runtime such as Node.js.JavaScript should not be confused with the Java programming language. Although \"Java\" and \"JavaScript\" are trademarks (or registered trademarks) of Oracle in the U.S. and other countries, the two programming languages are significantly different in their syntax, semantics, and use cases.JavaScript is primarily used in the browser, enabling developers to manipulate webpage content through the DOM, manipulate data with AJAX and IndexedDB, draw graphics with canvas, interact with the device running the browser through various APIs, and more. JavaScript is one of the world's most commonly-used languages, owing to the recent growth and performance improvement of APIs available in browsers.Conceived as a server-side language by Brendan Eich (then employed by the Netscape Corporation), JavaScript soon came to Netscape Navigator 2.0 in September 1995. JavaScript enjoyed immediate success and Internet Explorer 3.0 introduced JavaScript support under the name JScript in August 1996.In November 1996, Netscape began working with ECMA International to make JavaScript an industry standard. Since then, the standardized JavaScript is called ECMAScript and specified under ECMA-262, whose latest (eleventh, ES2020) edition is available as of June 2020.Recently, JavaScript's popularity has expanded even further through the successful Node.js platform—the most popular cross-platform JavaScript runtime environment outside the browser. Node.js - built using Chrome's V8 JavaScript Engine - allows developers to use JavaScript as a scripting language to automate things on a computer and build fully functional HTTP and WebSockets servers.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/JavaScript"
  },
  {
    "term": "Key",
    "def": "A key is a piece of information used by a cipher for encryption and/or decryption.Encrypted messages should remain secure even if everything about the cryptosystem, except for the key, is public knowledge.In symmetric-key cryptography, the same key is used for both encryption and decryption. In public-key cryptography, there exists a pair of related keys known as the public key and private key. The public key is freely available, whereas the private key is kept secret. The public key is able to encrypt messages that only the corresponding private key is able to decrypt, and vice versa.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Key"
  },
  {
    "term": "Jank",
    "def": "Jank refers to sluggishness in a user interface, usually caused by executing long tasks on the main thread, blocking rendering, or expending too much processor power on background processes.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Jank"
  },
  {
    "term": "ISP",
    "def": "An ISP (Internet Service Provider) sells Internet access, and sometimes email, web hosting, and voice over IP, either by a dial-up connection over a phone line (formerly more common), or through a broadband connection such as a cable modem or DSL service.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/ISP"
  },
  {
    "term": "Keyword",
    "def": "A keyword is a word or phrase that describes content. Online keywords are used as queries for search engines or as words identifying content on websites.When you use a search engine, you use keywords to specify what you are looking for, and the search engine returns relevant webpages. For more accurate results, try more specific keywords, such as \"Blue Mustang GTO\" instead of \"Mustang\". Webpages also use keywords in a meta tag (in the <head> section) to describe page content, so search engines can better identify and organize webpages.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Keyword"
  },
  {
    "term": "IRC",
    "def": "IRC (Internet Relay Chat) is a worldwide chat system requiring an Internet connection and an IRC client, which sends and receives messages via the IRC server.Designed in the late 1980s by Jarrko Oikarinen, IRC uses TCP and is an open protocol. The IRC server broadcasts messages to everyone connected to one of many IRC channels (each with their own ID).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/IRC"
  },
  {
    "term": "Immutable",
    "def": "\n  An immutable object is one whose content cannot be changed.\n  An object can be immutable for various reasons, for example:\n",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Immutable"
  },
  {
    "term": "JSON",
    "def": "JavaScript Object Notation (JSON) is a data-interchange format. Although not a strict subset, JSON closely resembles a subset of JavaScript syntax. Though many programming languages support JSON, it is especially useful for JavaScript-based apps, including websites and browser extensions.JSON can represent numbers, booleans, strings, null, arrays (ordered sequences of values), and objects (string-value mappings) made up of these values (or of other arrays and objects). JSON does not natively represent more complex data types like functions, regular expressions, dates, and so on. (Date objects by default serialize to a string containing the date in ISO format, so the information isn't completely lost.) If you need JSON to represent additional data types, transform values as they are serialized or before they are deserialized.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/JSON"
  },
  {
    "term": "Java",
    "def": "Java is a compiled, object-oriented, highly portable programming language.Java is statically typed and features a similar syntax to C. It comes with a large library of readily usable functions, the Java Software Development Kit (SDK).Programs are compiled only once ahead of time into a proprietary byte code and package format that runs inside the Java Virtual Machine (JVM). The JVM is available across many platforms, which allows Java programs to run almost everywhere without the need to be compiled or packaged again. This makes it a preferred language in many large enterprises with heterogenous landscapes, but may be perceived \"heavy\".",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Java"
  },
  {
    "term": "jQuery",
    "def": "jQuery is a JavaScript Library that focuses on simplifying DOM manipulation, AJAX calls, and Event handling.jQuery uses a format, $(selector).action() to assign an element(s) to an event. To explain it in detail, $(selector) will call jQuery to select selector element(s), and assign it to an event API called .action().The above code carries out the same function as the following code:Or:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/jQuery"
  },
  {
    "term": "The Khronos Group",
    "def": "The Khronos Group is an open, non-profit, member-driven consortium of over 150 industry-leading companies. Their purpose is to create advanced, royalty-free interoperability standards for 3D graphics, augmented and virtual reality, parallel programming, vision acceleration, and machine learning.The organization maintains standards such as OpenGL and the WebGL API.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Khronos"
  },
  {
    "term": "Layout viewport",
    "def": "The layout viewport is the viewport into which the browser draws a web page. Essentially, it represents what is available to be seen, while the visual viewport represents what is currently visible on the user's display device.This becomes important, for example, on mobile devices, where a pinching gesture can usually be used to zoom in and out on a site's contents. The rendered document doesn't change in any way, so the layout viewport remains the same as the user adjusts the zoom level. Instead, the visual viewport is updated to indicate the area of the page that they can see.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Layout_viewport"
  },
  {
    "term": "Lazy load",
    "def": "Lazy loading is a strategy that delays the loading of some assets (e.g., images) until they are needed by the user based on the user's activity and navigation pattern; typically, these assets are only loaded when they are scrolled into view.If correctly implemented, this delay in asset loading is seamless to the user experience and might help improve initial load performance, including time to interactive, as fewer assets are required for the page to start working.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Lazy_load"
  },
  {
    "term": "Latency",
    "def": "Latency is the network time it takes for a requested resource to reach its destination. Low latency is good, meaning there is little or no delay. High latency is bad, meaning it takes a long time for the requested resource to reach its destination.Latency can be a factor in any kind of data flow, but is most commonly discussed in terms of network latency (the time it takes for a packet of data to travel from source to destination) and media codec latency (the time it takes for the source data to be encoded or decoded and reach the consumer of the resulting data).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Latency"
  },
  {
    "term": "LGPL",
    "def": "LGPL (GNU Lesser General Public License) is a free software license published by the Free Software Foundation. The LGPL provides a more permissive alternative for the strictly copyleft GPL. While any derivative work using a GPL-licensed program must be released under the same terms (free to use, share, study, and modify), the LGPL only requires the LGPL-licensed component of the derivative program to continue using the LGPL, not the whole program. LGPL is usually used to license shared components such as libraries (.dll, .so, .jar, etc.).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/LGPL"
  },
  {
    "term": "Ligature",
    "def": "A ligature is a joining of two characters into one shape. For example, in French \"œ\" is a ligature of \"oe\".You can implement ligatures in your webpage with font-variant-ligatures.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Ligature"
  },
  {
    "term": "Local scope",
    "def": "Local scope is a characteristic of variables that makes them local (i.e., the variable name is only bound to its value within a scope which is not the global scope).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Local_scope"
  },
  {
    "term": "Localization",
    "def": "Localization (l10n) is the process of adapting a software user interface to a specific culture.The following are common factors to consider:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Localization"
  },
  {
    "term": "Local variable",
    "def": "A variable whose name is bound to its value only within a local scope.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Local_variable"
  },
  {
    "term": "lossy compression",
    "def": "Lossy compression, or irreversible compression, is a data-compression method that uses inexact approximations and partial-data discarding to represent content. In simpler terms: lossy compression causes data from the initial file to be lost, possibly causing degradation in quality. The process of such compression is irreversible; once lossy compression of the content has been performed, the content cannot be restored to its original state. Therefore, content that has undergone lossy compression should generally not be further edited.Lossy compression is widely used in image formats.\n  \nAlthough there is no obvious difference quality between the two images above, the size of the second image has been significantly reduced, using lossy compression.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/lossy_compression"
  },
  {
    "term": "LTR (Left To Right)",
    "def": "LTR (Left To Right) is a locale property indicating that text is written from left to right. For example, the en-US locale (for US English) specifies left-to-right.Most Western languages, as well as many others around the world, are written LTR.The opposite of LTR, RTL (Right To Left) is used in other common languages, including Arabic (ar) and Hebrew (he).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/ltr"
  },
  {
    "term": "Locale",
    "def": "Locale is a set of language- or country-based preferences for a user interface.A program draws its locale settings from the language of the host system. Among other things, locales represent paper format, currency, date format, and numbers according to the protocols in the given region.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Locale"
  },
  {
    "term": "Microsoft Edge",
    "def": "Microsoft Edge is a free-of-cost graphical Web browser bundled with Windows 10 and developed by Microsoft since 2014. Initially known as Spartan, Edge replaced the longstanding browser Internet Explorer.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Microsoft_Edge"
  },
  {
    "term": "Lossless compression",
    "def": "Lossless compression is a class of data compression algorithms that allows the original data to be perfectly reconstructed from the compressed data. Lossless compression methods are reversible. Examples of lossless compression include GZIP, Brotli, WebP, and PNG,Lossy compression, on the other hand, uses inexact approximations by discarding some data from the original file, making it an irreversible compression method.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Lossless_compression"
  },
  {
    "term": "Main Axis",
    "def": "The main axis in flexbox is defined by the direction set by the flex-direction property. There are four possible values for flex-direction. These are:Should you choose row or row-reverse then your main axis will run along the row in the inline direction.\n  \nChoose column or column-reverse and your main axis will run top to bottom of the page in the block direction.\n  \nOn the main axis you can control the sizing of flex items by adding any available space to the items themselves, by way of flex properties on the items. Or, you can control the space between and around items by using the justify-content property.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Main_Axis"
  },
  {
    "term": "MathML",
    "def": "MathML (an XML application) is an open standard for representing mathematical expressions in webpages. In 1998 the W3C first recommended MathML for representing mathematical expressions in the browser. MathML has other applications also including scientific content and voice synthesis.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/MathML"
  },
  {
    "term": "markup",
    "def": "A markup language is one that is designed for defining and presenting text. HTML (HyperText Markup Language), is an example of a markup language.Within a text file such as an HTML file, elements are marked up using tags which explain the purpose of that part of the content.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/markup"
  },
  {
    "term": "Literal",
    "def": "Literals represent values in JavaScript. These are fixed values—not variables—that you literally provide in your script.A string literal is zero or more characters enclosed in double (\") or single quotation marks ('). A string must be delimited by quotation marks of the same type (that is, either both single quotation marks, or both double quotation marks).The following are examples of string literals:An object literal is a list of zero or more pairs of property names and associated values of an object, enclosed in curly braces ({}).The following is an example of an object literal. The first element of the car object defines a property, myCar, and assigns to it a new string, \"Toyota\"; the second element, the getCar property, is immediately assigned the result of invoking the function carTypes('Honda'); the third element, the special property, uses an existing variable (sales).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Literal"
  },
  {
    "term": "Loop",
    "def": "A loop is a sequence of instructions that is continually repeated until a certain condition is met in computer programming. An example would be the process of getting an item of data and changing it, and then making sure some condition is checked such as, if a counter has reached a prescribed number.For the above example, the syntax is as follows:For the above example, the syntax is as follows:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/loop"
  },
  {
    "term": "MDN Web Docs Glossary",
    "def": "Web technologies contain long lists of jargon and abbreviations that are used in documentation and coding. This glossary provides definitions of words and abbreviations you need to know to successfully understand and build for the web.Glossary terms can be selected from the sidebar (or listed below on mobile devices and other narrow width screens).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary"
  },
  {
    "term": "404",
    "def": "A 404 is a Standard Response Code meaning that the server cannot find the requested resource.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/404"
  },
  {
    "term": "502",
    "def": "An HTTP error code meaning \"Bad Gateway\".A server can act as a gateway or proxy (go-between) between a client (like your Web browser) and another, upstream server. When you request to access a URL, the gateway server can relay your request to the upstream server. \"502\" means that the upstream server has returned an invalid response.Normally the upstream server is not down (i.e. furnishes no response to the gateway/proxy), but does not understand the same data-exchange protocol as the gateway/proxy. Internet protocols are quite explicit, and so a 502 usually means that one or both machines were incorrectly or incompletely programmed.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/502"
  },
  {
    "term": "accent",
    "def": "An accent is a typically bright color that contrasts with the more utilitarian background and foreground colors within a color scheme. These are present in the visual style of many platforms (though not all).On the web, an accent is sometimes used in <input> elements for the active portion of the control, for instance the background of a checked checkbox.You can set the color of the accent for a given element by setting the element's CSS accent-color property to the appropriate <color> value.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/accent"
  },
  {
    "term": "Accessibility",
    "def": "Web Accessibility (A11Y) refers to best practices for keeping a website usable despite physical and technical restrictions. Web accessibility is formally defined and discussed at the W3C through the Web Accessibility Initiative (WAI).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Accessibility"
  },
  {
    "term": "Advance measure",
    "def": "The advance measure of a glyph is its advance width or advance height, whichever is in the inline axis of the element.\n  This term is used in the definition of a number of CSS <length> units.\n  For example, ch is the advance measure of the \"0\" character in the given typeface.\n  For a horizontal inline axis, this will be the width of the character.\n",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/advance_measure"
  },
  {
    "term": "Alignment container",
    "def": "The alignment container is the rectangle that the alignment subject is aligned within. This is defined by the layout mode; it is usually the alignment subject's containing block, and assumes the writing mode of the box establishing the containing block.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Alignment_Container"
  },
  {
    "term": "Abstraction",
    "def": "Abstraction in computer programming is a way to reduce complexity and allow efficient design and implementation in complex software systems. It hides the technical complexity of systems behind simpler APIs.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Abstraction"
  },
  {
    "term": "Ajax",
    "def": "Ajax, which initially stood for Asynchronous JavaScript And XML, is a programming practice of building complex, dynamic webpages using a technology known as XMLHttpRequest.Ajax allows you to update parts of the DOM of an HTML page without the need for a full page refresh. Ajax also lets you work asynchronously, meaning your code continues to run while the targeted part of your web page is trying to reload (compared to synchronously, which blocks your code from running until that part of your page is done reloading).With interactive websites and modern web standards, Ajax is gradually being replaced by functions within JavaScript frameworks and the official Fetch API Standard.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/AJAX"
  },
  {
    "term": "Accessibility tree",
    "def": "The accessibility tree contains accessibility-related information for most HTML elements.Browsers convert markup into an internal representation called the DOM tree. The DOM tree contains objects representing all the markup's elements, attributes, and text nodes. Browsers then create an accessibility tree based on the DOM tree, which is used by platform-specific Accessibility APIs to provide a representation that can be understood by assistive technologies, such as screen readers.There are four things in an accessibility tree object:Additionally, the accessibility tree often contains information on what can be done with an element: a link can be followed, a text input can be typed into, etc.While still in draft form within the Web Incubator Community Group, the Accessibility Object Model (AOM) intends to incubate APIs that make it easier to express accessibility semantics and potentially allow read access to the computed accessibility tree.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Accessibility_tree"
  },
  {
    "term": "Algorithm",
    "def": "An algorithm is a self-contained series of instructions to perform a function.In other words, an algorithm is a means of describing a way to solve a problem so that it can be solved repeatedly, by humans or machines. Computer scientists compare the efficiency of algorithms through the concept of \"Algorithmic Complexity\" or \"Big O\" notation.For example:Common algorithms are Pathfinding algorithms such as the Traveling Salesman Problem, Tree Traversal algorithms and so on.There are also Machine Learning algorithms such as Linear Regression, Logistic Regression, Decision Tree, Random Forest, Support Vector Machine, Recurrent Neural Network (RNN), Long Short Term Memory (LSTM) Neural Network, Convolutional Neural Network (CNN), Deep Convolutional Neural Network and so on.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Algorithm"
  },
  {
    "term": "Alignment subject",
    "def": "In CSS Box Alignment the alignment subject is the thing (or things) being aligned by the property.For justify-self and align-self, the alignment subject is the margin box of the box the property is set on, using the writing mode of that box.For justify-content and align-content, the writing mode of the box is also used. The definition of the alignment subject depends on the layout mode being used.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Alignment_Subject"
  },
  {
    "term": "Apple Safari",
    "def": "Safari is a Web browser developed by Apple and bundled with both macOS and iOS. It's based on the open source WebKit engine.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Apple_Safari"
  },
  {
    "term": "ALPN",
    "def": "Application-Layer Protocol Negotiation (ALPN) is a TLS extension which indicates what application layer protocol is negotiating the encrypted connection without requiring additional round trips.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/ALPN"
  },
  {
    "term": "API",
    "def": "An API (Application Programming Interface) is a set of features and rules that exist inside a software program (the application) enabling interaction with it through software - as opposed to a human user interface. The API can be seen as a simple contract (the interface) between the application offering it and other items, such as third party software or hardware.In Web development, an API is generally a set of code features (e.g. methods, properties, events, and URLs) that a developer can use in their apps for interacting with components of a user's web browser, or other software/hardware on the user's computer, or third party websites and services.For example:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/API"
  },
  {
    "term": "Application Context",
    "def": "An application context is a top-level browsing context that has a manifest applied to it.If an application context is created as a result of the user agent being asked to navigate to a deep link, the user agent must immediately navigate to the deep link with replacement enabled. Otherwise, when the application context is created, the user agent must immediately navigate to the start URL with replacement enabled.Please note that the start URL is not necessarily the value of the start_url member: the user or user agent could have changed it when the application was added to home-screen or otherwise bookmarked.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/application_context"
  },
  {
    "term": "ARIA",
    "def": "ARIA (Accessible Rich Internet Applications) is a W3C specification for adding semantics and other metadata to HTML to cater to users of assistive technology.For example, you could add the attribute role=\"alert\" to a <p> tag to notify a sight-challenged user that the information is important and time-sensitive (which you might otherwise convey through text color).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/ARIA"
  },
  {
    "term": "Alpha (alpha channel)",
    "def": "Colors are represented in digital form as a collection of numbers, each representing the strength or intensity level of a given component of the color. Each of these components is called a channel. In a typical image file, the color channels describe how much red, green, and blue are used to make up the final color. To represent a color through which the background can be seen to some extent, a fourth channel is added to the color: the alpha channel. The alpha channel specifies how opaque the color is.For example, the color #8921F2 (also described as rgb(137, 33, 242) or hsl(270, 89%, 54)) is a nice shade of purple. Below you see a small box of that color in the top-left corner and a box of the same color but with an alpha channel set at 0.5 (50% opacity). The two boxes are drawn on top of a paragraph of text.\n  \nAs you can see, the color without an alpha channel completely blocks the background text, while the box with the alpha channel leaves it visible through the purple background color.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Alpha"
  },
  {
    "term": "Adobe Flash",
    "def": "Flash is an obsolete technology developed by Adobe for viewing expressive web applications, multimedia content, and streaming media.As of 2021, Flash is no longer supported by Adobe or any major web browsers.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Adobe_Flash"
  },
  {
    "term": "Array",
    "def": "An array is an ordered collection of data (either primitive or object depending upon the language). Arrays are used to store multiple values in a single variable. This is compared to a variable that can store only one value.Each item in an array has a number attached to it, called a numeric index, that allows you to access it. In JavaScript, arrays start at index zero and can be manipulated with various methods.What an array in JavaScript looks like:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/array"
  },
  {
    "term": "ASCII",
    "def": "ASCII (American Standard Code for Information Interchange) is one of the most popular coding method used by computers for converting letters, numbers, punctuation and control codes into digital form. Since 2007, UTF-8 superseded it on the Web.ASCII on Wikipedia",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/ASCII"
  },
  {
    "term": "ARPANET",
    "def": "The ARPANET (Advanced Research Projects Agency NETwork) was an early computer network, constructed in 1969 as a robust medium to transmit sensitive military data and to connect leading research groups throughout the United States. ARPANET first ran NCP (Network Control Protocol) and subsequently the first version of the Internet protocol or TCP/IP suite, making ARPANET a prominent part of the nascent Internet. ARPANET was closed in early 1990.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Arpanet"
  },
  {
    "term": "Asynchronous",
    "def": "The term asynchronous refers to two or more objects or events not existing or happening at the same time (or multiple related things happening without waiting for the previous one to complete). In computing, the word \"asynchronous\" is used in two major contexts.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Asynchronous"
  },
  {
    "term": "ARPA",
    "def": ".arpa (address and routing parameter area) is a top-level domain used for Internet infrastructure purposes, especially reverse DNS lookup (i.e., find the domain name for a given IP address).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/ARPA"
  },
  {
    "term": "ATAG",
    "def": "ATAG (Authoring Tool Accessibility Guidelines) is a W3C recommendation for building accessible-authoring tools that produce accessible contents.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/ATAG"
  },
  {
    "term": "Argument",
    "def": "An argument is a value (primitive or object) passed as input to a function.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Argument"
  },
  {
    "term": "Base64",
    "def": "Base64 is a group of similar binary-to-text encoding schemes that represent binary data in an ASCII string format by translating it into a radix-64 representation. The term Base64 originates from a specific MIME content transfer encoding.Base64 encoding schemes are commonly used when there is a need to encode binary data that needs to be stored and transferred over media that are designed to deal with ASCII. This is to ensure that the data remain intact without modification during transport. Base64 is commonly used in a number of applications including email via MIME, and storing complex data in XML.One common application of Base64 encoding on the web is to encode binary data so it can be included in a data: URL.In JavaScript there are two functions respectively for decoding and encoding Base64 strings:The algorithm used by atob() and btoa() is specified in RFC 4648, section 4.Note that btoa() expects to be passed binary data, and will throw an exception if the given string contains any characters whose UTF-16 representation occupies more than one byte. For more details, see the documentation for btoa().Each Base64 digit represents exactly 6 bits of data. So, three 8-bits bytes of the input string/binary file (3×8 bits = 24 bits) can be represented by four 6-bit Base64 digits (4×6 = 24 bits).This means that the Base64 version of a string or file will be at least 133% the size of its source (a ~33% increase). The increase may be larger if the encoded data is small. For example, the string \"a\" with length === 1 gets encoded to \"YQ==\" with length === 4 — a 300% increase.Since DOMStrings are 16-bit-encoded strings, in most browsers calling window.btoa on a Unicode string will cause a Character Out Of Range exception if a character exceeds the range of a 8-bit ASCII-encoded character. There are two possible methods to solve this problem:Here are the two possible methods.This solution has been proposed by Johan Sundström.Another possible solution without utilizing the now deprecated 'unescape' and 'escape' functions.These function let us to create also uint8Arrays or arrayBuffers from Base64-encoded strings:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Base64"
  },
  {
    "term": "Attribute",
    "def": "An attribute extends an HTML or XML element, changing its behavior or providing metadata.An attribute always has the form name=\"value\" (the attribute's identifier followed by its associated value).You may see attributes without the equals sign or a value. That is a shorthand for providing the empty string in HTML, or the attribute's name in XML.\n  Attributes may be reflected into a particular property of the specific interface.\n  It means that the value of the attribute can be read by accessing the property,\n  and can be modified by setting the property to a different value.\nFor example, the placeholder below is reflected into HTMLInputElement.placeholder.Considering the following HTML:We can check the reflection between HTMLInputElement.placeholder and the attribute using:and",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Attribute"
  },
  {
    "term": "Baseline",
    "def": "The baseline is a term used in European and West Asian typography meaning an imaginary line upon which the characters of a font rest.The descenders of characters like g and p extend below this line. Glyphs with rounded lower and upper extents like C or 3 slightly extend below it.East Asian scripts have no baseline. Their glyphs are placed in a square box without ascenders or descenders.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/baseline"
  },
  {
    "term": "Bandwidth",
    "def": "Bandwidth is the measure of how much information can pass through a data connection in a given amount of time. It is usually measured in multiples of bits-per-second (bps), for example megabits-per-second (Mbps) or gigabits-per-second (Gbps).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Bandwidth"
  },
  {
    "term": "Bézier curve",
    "def": "A Bézier curve (pronounced [bezje]) is a mathematically described curve used in computer graphics and animation. In vector images, they are used to model smooth curves that can be scaled indefinitely.The curve is defined by a set of control points with a minimum of two. Web related graphics and animations use Cubic Béziers, which are curves with four control points P0, P1, P2, and P3.To draw the curve, two imaginary lines are drawn, one from P0 to P1 and the other from P1 to P2. The end points of the lines are then steadily moved to the next point. A third imaginary line is drawn with its starting point moving steadily on the first helper line and the end point on the second helper line. On this imaginary line a point is drawn from its starting point moving steadily to its end point. The curve this point describes is the Bézier curve. Here's an animated illustration demonstrating the creation of the curve:\n  \n",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Bézier_curve"
  },
  {
    "term": "Blink",
    "def": "Blink is an open-source browser layout engine developed by Google as part of Chromium (and therefore part of Chrome as well). Specifically, Blink began as a fork of the WebCore library in WebKit, which handles layout, rendering, and DOM, but now stands on its own as a separate rendering engine.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Blink"
  },
  {
    "term": "BigInt",
    "def": "In JavaScript, BigInt is a numeric data type that can represent integers in the arbitrary precision format. In other programming languages different numeric types can exist, for examples: Integers, Floats, Doubles, or Bignums.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/BigInt"
  },
  {
    "term": "beacon",
    "def": "A web beacon is a small object, such as a 1 pixel gif, embedded in markup, used to communicate information back to the web server or to 3rd party servers. Beacons are generally included to provide information about the user for statistical purposes. Beacons are often included within third party scripts for collecting user data, performance metrics and error reporting.There is a W3C Draft Beacon Specification to standardize the beacon as an interface to asynchronously transfer HTTP data from User Agent to a web server prior to page load without negative performance impact.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/beacon"
  },
  {
    "term": "Block cipher mode of operation",
    "def": "A block cipher mode of operation, usually just called a \"mode\" in context, specifies how a block cipher should be used to encrypt or decrypt messages that are longer than the block size.Most symmetric-key algorithms currently in use are block ciphers: this means that they encrypt data a block at a time. The size of each block is fixed and determined by the algorithm: for example AES uses 16-byte blocks. Block ciphers are always used with a mode, which specifies how to securely encrypt messages that are longer than the block size. For example, AES is a cipher, while CTR, CBC, and GCM are all modes. Using an inappropriate mode, or using a mode incorrectly, can completely undermine the security provided by the underlying cipher.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Block_cipher_mode_of_operation"
  },
  {
    "term": "BiDi",
    "def": "BiDi (BiDirectional) refers to a document containing both right-to-left and left-to-right text. Even when both directionalities occur in the same paragraph, the text in each language must appear in its proper directionality.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/BiDi"
  },
  {
    "term": "Block",
    "def": "The term block can have several meanings depending on the context. It may refer to:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Block"
  },
  {
    "term": "Boolean",
    "def": "In computer science, a Boolean is a logical data type that can have only the values true or false.For example, in JavaScript, Boolean conditionals are often used to decide which sections of code to execute (such as in if statements) or repeat (such as in for loops).Below is some JavaScript pseudocode (it's not truly executable code) demonstrating this concept.The Boolean value is named after English mathematician George Boole, who pioneered the field of mathematical logic.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Boolean"
  },
  {
    "term": "Boot2Gecko",
    "def": "Boot2Gecko (B2G) is the engineering codename for Firefox OS and refers to builds that haven't yet received official Firefox OS branding. (Firefox OS was also often called Boot2Gecko before the project had an official name.)",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Boot2Gecko"
  },
  {
    "term": "Breadcrumb",
    "def": "A breadcrumb, or breadcrumb trail, is a navigational aid that is typically placed between a site's header and the main content, displaying either a hierarchy of the current page in relation to the site's structure, from top level to current page, or a list of the links the user followed to get to the current page, in the order visited.A location breadcrumb for this document might look something like this:MDN > Glossary > BreadcrumbBreadcrumb trails enable users to be aware of their location within a website. This type of navigation, if done correctly, helps users know where they are in a site and how they got there. They can also help a user get back to where they were before and can reduce the number of clicks needed to get to a higher-level page.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Breadcrumb"
  },
  {
    "term": "Bootstrap",
    "def": "Bootstrap is a free, open source HTML, CSS, and JavaScript framework for quickly building responsive websites.Initially, Bootstrap was called Twitter Blueprint and was developed by a team working at Twitter. It supports responsive design and features predefined design templates that you can use out of the box, or customize for your needs with your code. You don't need to worry about compatibility with other browsers either, as Bootstrap is compatible with all modern browsers and newer versions of Internet Explorer.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Bootstrap"
  },
  {
    "term": "buffer",
    "def": "A buffer is a storage in physical memory used to temporarily store data while it is being transferred from one place to another.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/buffer"
  },
  {
    "term": "Bounding Box",
    "def": "The bounding box of an element is the smallest possible rectangle (aligned with the axes of that element's user coordinate system) that entirely encloses it and its descendants.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/bounding_box"
  },
  {
    "term": "Canonical order",
    "def": "In CSS, canonical order is used to refer to the order in which separate values need to be specified (or parsed) or are to be serialized as part of a CSS property value. It is defined by the formal syntax of the property and normally refers to the order in which longhand values should be specified as part of a single shorthand value.For example, background shorthand property values are made up of several background-* longhand properties. The canonical order of those longhand values is defined asFurthermore, its syntax defines, that if a value for the background-size is given, it must be specified after the value for the background-position, separated by a slash. Other values may appear in any order.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Canonical_order"
  },
  {
    "term": "Cache",
    "def": "A cache (web cache or HTTP cache) is a component that stores HTTP responses temporarily so that it can be used for subsequent HTTP requests as long as it meets certain conditions.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Cache"
  },
  {
    "term": "CalDAV",
    "def": "CalDAV (Calendaring extensions to WebDAV) is a protocol standardized by the IETF and used to remotely access calendar data from a server.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/CalDAV"
  },
  {
    "term": "Browsing context",
    "def": "A browsing context is the environment in which a browser displays a Document. In modern browsers, it usually is a tab, but can be a window or even only parts of a page, like a frame or an iframe.Each browsing context has a specific origin, the origin of the active document and a history that memorize all the displayed documents, in order.Communication between browsing context is severely constrained. Between browsing context of the same origin, a BroadcastChannel can be opened and used.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Browsing_context"
  },
  {
    "term": "Call stack",
    "def": "A call stack is a mechanism for an interpreter (like the JavaScript interpreter in a web browser) to keep track of its place in a script that calls multiple functions — what function is currently being run and what functions are called from within that function, etc.The code above would be executed like this:In summary, then, we start with an empty Call Stack. Whenever we invoke a function, it is automatically added to the Call Stack. Once the function has executed all of its code, it is automatically removed from the Call Stack. Ultimately, the Stack is empty again.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Call_stack"
  },
  {
    "term": "Canvas",
    "def": "The canvas element is part of HTML5 and allows for dynamic, scriptable rendering of 2D and 3D shapes and bitmap images.It is a low level, procedural model that updates a bitmap and does not have a built-in scene graph. It provides an empty graphic zone on which specific JavaScript APIs can draw (such as Canvas 2D or WebGL).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Canvas"
  },
  {
    "term": "Browser",
    "def": "A Web browser or browser is a program that retrieves and displays pages from the Web, and lets users access further pages through hyperlinks. A browser is the most familiar type of user agent.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Browser"
  },
  {
    "term": "Cacheable",
    "def": "A cacheable response is an HTTP response that can be cached, that is stored to be retrieved and used later, saving a new request to the server. Not all HTTP responses can be cached, these are the following constraints for an HTTP response to be cached:Note that some non-cacheable requests/responses to a specific URI may invalidate previously cached responses on the same URI. For example, a PUT to pageX.html will invalidate all cached GET or HEAD requests to the same URI.When both, the method of the request and the status of the response, are cacheable, the response to the request can be cached:A PUT request cannot be cached. Moreover, it invalidates cached data for request to the same URI done via HEAD or GET:A specific Cache-Control header in the response can prevent caching:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/cacheable"
  },
  {
    "term": "Brotli",
    "def": "Brotli is a general-purpose lossless compression algorithm.It compresses data using a combination of a modern variant of the LZ77 algorithm, Huffman coding, and second-order context modeling, providing a compression ratio comparable to the best currently available general-purpose compression methods. Brotli provides better compression ratios than gzip and deflate speeds are comparable, but brotli compressing is a slower process than Gzip compression, so gzip may be a better option for the compression of non-cacheable content.Brotli is compatible with most modern browsers, but you may want to consider a fallback.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/brotli_compression"
  },
  {
    "term": "Callback function",
    "def": "A callback function is a function passed into another function as an argument, which is then invoked inside the outer function to complete some kind of routine or action.Here is a quick example:The above example is a synchronous callback, as it is executed immediately.Note, however, that callbacks are often used to continue code execution after an asynchronous operation has completed — these are called asynchronous callbacks. A good example is the callback functions executed inside a .then() block chained onto the end of a promise after that promise fulfills or rejects. This structure is used in many modern web APIs, such as fetch().",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Callback_function"
  },
  {
    "term": "CardDAV",
    "def": "CardDAV (vCard Extension to WebDAV) is a protocol standardized by the IETF and used to remote-access or share contact information over a server.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/CardDAV"
  },
  {
    "term": "caret",
    "def": "A caret (sometimes called a \"text cursor\") is an indicator displayed on the screen to indicate where text input will be inserted.Most user interfaces represent the caret using a thin vertical line or a character-sized box that flashes, but this can vary. This point in the text is called the insertion point. The word \"caret\" differentiates the text insertion point from the mouse cursor.On the web, a caret is used to represent the insertion point in <input> and <textarea> elements, as well as any elements whose contenteditable attribute is set, thereby allowing the contents of the element to be edited by the user.You can set the color of the caret for a given element's editable content by setting the element's CSS caret-color property to the appropriate <color> value.These elements provide text entry fields or boxes and therefore make use of the caret.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/caret"
  },
  {
    "term": "Certificate authority",
    "def": "A certificate authority (CA) is an organization that signs digital certificates and their associated public keys, thereby asserting that the contained information and keys are correct.For a website digital certificate, this information minimally includes the name of the organization that requested the digital certificate (e.g., Mozilla Corporation), the site that it is for (e.g., mozilla.org), and the certificate authority.Certificate authorities are the part of the Internet public key infrastructure that allows browsers to verify website identity and securely connect over SSL (and HTTPS).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Certificate_authority"
  },
  {
    "term": "Character set",
    "def": "A character set is an encoding system to let computers know how to recognize Character, including letters, numbers, punctuation marks, and whitespace.In earlier times, countries developed their own character sets due to their different languages used, such as Kanji JIS codes (e.g. Shift-JIS, EUC-JP, etc.) for Japanese, Big5 for traditional Chinese, and KOI8-R for Russian. However, Unicode gradually became most acceptable character set for its universal language support.If a character set is used incorrectly (For example, Unicode for an article encoded in Big5), you may see nothing but broken characters, which are called Mojibake.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/character_set"
  },
  {
    "term": "Certified",
    "def": "Certified means that an application, content or data transmission has successfully undergone evaluation by professionals with expertise in the relevant field, thereby indicating completeness, security and trustworthiness.For details on certification in Cryptography, please refer to Digital Certificate.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Certified"
  },
  {
    "term": "Card sorting",
    "def": "Card sorting is a simple technique used in Information architecture whereby people involved in the design of a website (or other type of product) are invited to write down the content / services / features they feel the product should contain, and then organize those features into categories or groupings. This can be used for example to work out what should go on each page of a website. The name comes from the fact that often card sorting is carried out by literally writing the items to sort onto cards, and then arranging the cards into piles.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Card_sorting"
  },
  {
    "term": "Challenge-response authentication",
    "def": "In security protocols, a challenge is some data sent to the client by the server in order to generate a different response each time. Challenge-response protocols are one way to fight against replay attacks where an attacker listens to the previous messages and resends them at a later time to get the same credentials as the original message.The HTTP authentication protocol is challenge-response based, though the \"Basic\" protocol isn't using a real challenge (the realm is always the same).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/challenge"
  },
  {
    "term": "CDN",
    "def": "A CDN (Content Delivery Network) is a group of servers spread out over many locations. These servers store duplicate copies of data so that servers can fulfill data requests based on which servers are closest to the respective end-users. CDNs make for fast service less affected by high traffic.CDNs are used widely for delivering stylesheets and Javascript files (static assets) of libraries like Bootstrap, jQuery etc. Using CDN for those library files is preferable for a number of reasons:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/CDN"
  },
  {
    "term": "Chrome",
    "def": "In a browser, the chrome is any visible aspect of a browser aside from the webpages themselves (e.g., toolbars, menu bar, tabs). This is not to be confused with the Google Chrome browser.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Chrome"
  },
  {
    "term": "Character encoding",
    "def": "An encoding defines a mapping between bytes and text. A sequence of bytes allows for different textual interpretations. By specifying a particular encoding (such as UTF-8), we specify how the sequence of bytes is to be interpreted.For example, in HTML we normally declare a character encoding of UTF-8, using the following line:This ensures that you can use characters from just about any human language in your HTML document, and they will display reliably.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/character_encoding"
  },
  {
    "term": "Cipher suite",
    "def": "A cipher suite is a combination of a key exchange algorithm, authentication method, bulk encryption cipher, and message authentication code.In a cryptosystem like TLS, the client and server must agree on a cipher suite before they can begin communicating securely. A typical cipher suite looks like ECDHE_RSA_WITH_AES_128_GCM_SHA256 or ECDHE-RSA-AES128-GCM-SHA256, indicating:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Cipher_suite"
  },
  {
    "term": "Character",
    "def": "A character is either a symbol (letters, numbers, punctuation) or non-printing \"control\" (e.g., carriage return or soft hyphen). UTF-8 is the most common character set and includes the graphemes of the most popular human languages.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Character"
  },
  {
    "term": "Cipher",
    "def": "In cryptography, a cipher is an algorithm that can encode Plaintext to make it unreadable, and to decode it back.Ciphers were common long before the information age (e.g., substitution ciphers, transposition ciphers, and permutation ciphers), but none of them were cryptographically secure except for the one-time pad.Modern ciphers are designed to withstand attacks discovered by a cryptanalyst. There is no guarantee that all attack methods have been discovered, but each algorithm is judged against known classes of attacks.Ciphers operate two ways, either as block ciphers on successive blocks, or buffers, of data, or as stream ciphers on a continuous data flow (often of sound or video).They also are classified according to how their keys are handled:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Cipher"
  },
  {
    "term": "CIA",
    "def": "CIA (Confidentiality, Integrity, Availability) (also called the CIA triad or AIC triad) is a model that guides an organization's policies for information security.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/CIA"
  },
  {
    "term": "Class",
    "def": "In object-oriented programming, a class defines an object's characteristics. Class is a template definition of an object's properties and methods, the \"blueprint\" from which other more specific instances of the object are drawn.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Class"
  },
  {
    "term": "Ciphertext",
    "def": "In cryptography, a ciphertext is a scrambled message that conveys information but is not legible unless decrypted with the right cipher and the right secret (usually a key), reproducing the original Plaintext. A ciphertext's security, and therefore the secrecy of the contained information, depends on using a secure cipher and keeping the key secret.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Ciphertext"
  },
  {
    "term": "CMS",
    "def": "A CMS (Content Management System) is software that allows users to publish, organize, change, or remove various kinds of content, not only text but also embedded images, video, audio, and interactive code.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/CMS"
  },
  {
    "term": "Closure",
    "def": "The binding which defines the scope of execution. In JavaScript, functions create a closure context.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Closure"
  },
  {
    "term": "Code point",
    "def": "A code point is a number assigned to represent an abstract character in a system for representing text (such as Unicode). In Unicode, a code point is expressed in the form \"U+1234\" where \"1234\" is the assigned number. For example, the character \"A\" is assigned a code point of U+0041.Character encoding forms, such as UTF-8 and UTF-16, determine how a Unicode code point should be encoded as a sequence of bytes. Different encoding forms may encode the same code point as different byte sequences: for example, the Cyrillic character \"Ф\", whose code point is U+0424, is encoded as 0xd0a4 in UTF-8 and as 0x0424 in UTF-16.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Code_point"
  },
  {
    "term": "Clickjacking",
    "def": "Clickjacking is an interface-based attack that tricks website users into unwittingly clicking on malicious links. In clickjacking, the attackers embed their malicious links into buttons or legitimate pages in a website. In an infected Site, whenever a user clicks on a legitimate link, the attacker gets the confidential information of that user, which ultimately compromises the user's privacy on the Internet.Clickjacking can be prevented by implementing a Content Security Policy (frame-ancestors) and implementing Set-Cookie attributes.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Clickjacking"
  },
  {
    "term": "Code splitting",
    "def": "Code splitting is the splitting of code into various bundles or components which can then be loaded on demand or in parallel.As an application grows in complexity or is maintained, CSS and JavaScripts files or bundles grow in byte size, especially as the number and size of included third-party libraries increases. To prevent the requirement of downloading ginormous files, scripts can be split into multiple smaller files. Then features required at page load can be downloaded immediately with additional scripts being lazy loaded after the page or application is interactive, thus improving performance. While the total amount of code is the same (and perhaps even a few bytes larger), the amount of code needed during initial load can be reduced.Code splitting is a feature supported by bundlers like Webpack and Browserify which can create multiple bundles that can be dynamically loaded at runtime.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Code_splitting"
  },
  {
    "term": "Compile",
    "def": "Compiling is the process of transforming a computer program written in a given language into a set of instructions in another format or language. A compiler is a computer program to execute that task.Typically, a compiler transforms code written in a higher-level language such as C++ or Rust or Java into executable (runnable) code — so-called binary code or machine code. WebAssembly, for example, is a form of executable binary code that can be compiled from code written in C++, Rust, C#, Go, Swift, and several other languages and that can then be run on any web page, in any browser.Most compilers perform either ahead-of-time (AOT) compilation or just-in-time (JIT) compilation.The GNU gcc compiler is one well-known example of an AOT compiler. AOT compilers are typically invoked from the command line in a shell environment (from within a terminal or console) or within an IDE.JIT compilers are typically not invoked directly but are instead built into software runtimes internally, for the purpose of improving performance. For example, all major browsers now use JavaScript engines that have built-in JIT compilers.Compilers may also translate among higher-level languages — for example, from TypeScript to JavaScript — in which case, they are often sometimes referred to as transpilers.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Compile"
  },
  {
    "term": "Computer Programming",
    "def": "Computer programming is a process of composing and organizing a collection of instructions. These tell a computer/software program what to do in a language which the computer understands. These instructions come in the form of many different languages such as C++, Java, JavaScript, HTML, Python, Ruby, and Rust.Using an appropriate language, you can program/create all sorts of software. For example, a program that helps scientists with complex calculations, a database that stores huge amounts of data, a web site that allows people to download music, or animation software that allows people to create animated movies.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Computer_Programming"
  },
  {
    "term": "Code unit",
    "def": "A code unit is the basic component used by a character encoding system (such as UTF-8 or UTF-16). A character encoding system uses one or more code units to encode a Unicode code point.In UTF-16 (the encoding system used for JavaScript strings) code units are 16-bit values. This means that operations such as indexing into a string or getting the length of a string operate on these 16-bit units. These units do not always map 1-1 onto what we might consider characters.For example, sometimes characters with diacritics such as accents are represented using two Unicode code points:Also, since not all of the code points defined by Unicode fit into 16 bits, many Unicode code points are encoded as a pair of UTF-16 code units, which is called a surrogate pair:The codePointAt() method of the JavaScript String object enables you to retrieve the Unicode code point from its encoded form:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Code_unit"
  },
  {
    "term": "Crawler",
    "def": "A web crawler is a program, often called a bot or robot, which systematically browses the Web to collect data from webpages. Typically search engines (e.g. Google, Bing, etc.) use crawlers to build indexes.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Crawler"
  },
  {
    "term": "Constructor",
    "def": "A constructor belongs to a particular class object that is instantiated. The constructor initializes this object and can provide access to its private information. The concept of a constructor can be applied to most object-oriented programming languages. Essentially, a constructor in JavaScript is usually declared at the instance of a class.To call the constructor of the class in JavaScript, use a new operator to assign a new object reference to a variable.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Constructor"
  },
  {
    "term": "Continuous Media",
    "def": "Continuous media is data where there is a timing relationship between source and destination. The most common examples of continuous media are audio and motion video. Continuous media can be real-time (interactive), where there is a \"tight\" timing relationship between source and sink, or streaming (playback), where the relationship is less strict.CSS can be used in a variety of contexts, including print media. And some CSS, particularly those that are used for layout, behave differently depending on the context they are in.Continuous Media, therefore, identifies a context where the content is not broken up. It flows continuously. Web content displayed on a screen is continuous media, as is spoken content.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Continuous_Media"
  },
  {
    "term": "Conditional",
    "def": "A condition is a set of rules that can interrupt normal code execution or change it, depending on whether the condition is completed or not.An instruction or a set of instructions is executed if a specific condition is fulfilled. Otherwise, another instruction is executed. It is also possible to repeat the execution of an instruction, or set of instructions, while a condition is not yet fulfilled.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Conditional"
  },
  {
    "term": "Compile time",
    "def": "The compile time is the time from when the program is first loaded until the program is parsed.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Compile_time"
  },
  {
    "term": "Codec",
    "def": "A codec (a blend word derived from \"**coder-dec**oder\") is a program, algorithm, or device that encodes or decodes a data stream. A given codec knows how to handle a specific encoding or compression technology.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Codec"
  },
  {
    "term": "Constant",
    "def": "A constant is a value that the programmer cannot change, for example numbers (1, 2, 42). With variables, on the other hand, the programmer can assign a new value to a variable name already in use.Like variables, some constants are bound to identifiers. For example, the identifier pi could be bound to the value 3.14... .",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Constant"
  },
  {
    "term": "CSP",
    "def": "A CSP (Content Security Policy) is used to detect and mitigate certain types of website related attacks like Cross-site_scripting, clickjacking and data injections.The implementation is based on an HTTP header called Content-Security-Policy.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/CSP"
  },
  {
    "term": "Falsy",
    "def": "A falsy (sometimes written falsey) value is a value that is considered false when encountered in a Boolean context.JavaScript uses type conversion to coerce any value to a Boolean in contexts that require it, such as conditionals and loops.The following table provides a complete list of JavaScript falsy values:Examples of falsy values in JavaScript (which are coerced to false in Boolean contexts, and thus bypass the if block):If the first object is falsy, it returns that object",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Falsy"
  },
  {
    "term": "Index",
    "def": "Found 545 pages:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Index"
  },
  {
    "term": "XHTML",
    "def": "XHTML is a term that was historically used to describe HTML documents written to conform with XML syntax rules.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/XHTML"
  },
  {
    "term": "XML",
    "def": "eXtensible Markup Language (XML) is a generic markup language specified by the W3C. The information technology (IT) industry uses many languages based on XML as data-description languages.XML tags resemble HTML tags, but XML is much more flexible because it lets users define their own tags. In this way XML acts like a meta-language—that is, it can be used to define other languages, such as RSS. Moreover, HTML is a presentation language, whereas XML is a data-description language. This means that XML has far broader applications than just the Web. For example, Web services can use XML to exchange requests and responses.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/XML"
  },
  {
    "term": "XLink",
    "def": "XLink is a W3C standard which is used to describe links between XML and XML or other documents. Some its behaviors are left to the implementation to determine how to handle.Simple XLinks are \"supported\" in Firefox (at least in SVG and MathML), though they do not work as links if one loads a plain XML document with XLinks and attempts to click on the relevant points in the XML tree.For those who may have found XLink 1.0 cumbersome for regular links, XLink 1.1 drops the need to specify xlink:type=\"simple\" for simple links.XLink is used in SVG, MathML, and other important standards.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/XLink"
  },
  {
    "term": "XQuery",
    "def": "XQuery is a computer language for updating, retrieving, and calculating data in XML databases.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/XQuery"
  },
  {
    "term": "XSLT",
    "def": "eXtensible Stylesheet Language Transformations (XSLT) is a declarative language used to convert XML documents into other XML documents, HTML, PDF, plain text, and so on.XSLT has its own processor that accepts XML input, or any format convertible to an XQuery and XPath Data Model. The XSLT processor produces a new document based on the XML document and an XSLT stylesheet, making no changes to the original files in the process.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/XSLT"
  },
  {
    "term": "WebSockets",
    "def": "WebSocket is a protocol that allows for a persistent TCP connection between server and client so they can exchange data at any time.Any client or server application can use WebSocket, but principally web browsers and web servers. Through WebSocket, servers can pass data to a client without prior client request, allowing for dynamic content updates.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/WebSockets"
  },
  {
    "term": "World Wide Web",
    "def": "The World Wide Web—commonly referred to as WWW, W3, or the Web—is an interconnected system of public webpages accessible through the Internet. The Web is not the same as the Internet: the Web is one of many applications built on top of the Internet.Tim Berners-Lee proposed the architecture of what became known as the World Wide Web. He created the first web server, web browser, and webpage on his computer at the CERN physics research lab in 1990. In 1991, he announced his creation on the alt.hypertext newsgroup, marking the moment the Web was first made public.The system we know today as \"the Web\" consists of several components:Linking, or connecting resources through hyperlinks, is a defining concept of the Web, aiding its identity as a collection of connected documents.Soon after inventing the Web, Tim Berners-Lee founded the W3C (World Wide Web Consortium) to standardize and develop the Web further. This consortium consists of core Web interest groups, such as web browser developers, government entities, researchers, and universities. Its mission includes education and outreach.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/World_Wide_Web"
  },
  {
    "term": "Specification",
    "def": "A specification is a document that lays out in detail what functionality or attributes a product must include before delivery. In the context of describing the Web, the term \"specification\" (often shortened to \"spec\") generally means a document describing a language, technology, or API which makes up the complete set of open Web technologies.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Specification"
  },
  {
    "term": "WebAssembly",
    "def": "WebAssembly (abbr. Wasm) is an open binary programming format that can be run in modern web browsers in order to gain performance and/or provide new features for web pages.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/WebAssembly"
  },
  {
    "term": "Copyleft",
    "def": "Copyleft is a term, usually referring to a license, used to indicate that such license requires that redistribution of said work is subject to the same license as the original. Examples of copyleft licenses are the GNU GPL (for software) and the Creative Commons SA (Share Alike) licenses (for works of art).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Copyleft"
  },
  {
    "term": "CORS-safelisted response header",
    "def": "A CORS-safelisted response header is an HTTP header in a CORS response that it is considered safe to expose to client scripts. Only safelisted response headers are made available to web pages.By default, the safelist includes the following response headers:Additional headers can be added to the safelist using Access-Control-Expose-Headers.You can extend the list of CORS-safelisted response headers by using the Access-Control-Expose-Headers header:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/CORS-safelisted_response_header"
  },
  {
    "term": "Cryptographic hash function",
    "def": "A cryptographic hash function, also sometimes called a digest function, is a cryptographic primitive transforming a message of arbitrary size into a message of fixed size, called a digest. Cryptographic hash functions are used for authentication, digital signatures, and message authentication codes.To be used for cryptography, a hash function must have these qualities:Cryptographic hash functions such as MD5 and SHA-1 are considered broken, as attacks have been found that significantly reduce their collision resistance.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Cryptographic_hash_function"
  },
  {
    "term": "Database",
    "def": "A database is a storing system that collects organized data, to make some works easier like searching, structure, and extend.In web development, most databases use the relational database management system (RDBMS) to organize data and programming in SQL. Some databases, however, don't follow the former mechanism to organized data, which called NoSQL.Some famous server-side RDBMS are MySQL(or MariaDB which is a fork of it), SQL Server, and Oracle Database. On the other hand, some famous NoSQL examples are MongoDB, Cassandra, and Redis.Browsers also have their own database system called IndexedDB.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Database"
  },
  {
    "term": "Cross Axis",
    "def": "The cross axis in flexbox runs perpendicular to the main axis, therefore if your flex-direction is either row or row-reverse then the cross axis runs down the columns.\n  \nIf your main axis is column or column-reverse then the cross axis runs along the rows.\n  \nAlignment of items on the cross axis is achieved with the align-items property on the flex container or align-self property on individual items. In the case of a multi-line flex container, with additional space on the cross axis, you can use align-content to control the spacing of the rows.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Cross_Axis"
  },
  {
    "term": "CRLF",
    "def": "CR and LF are control characters or bytecode that can be used to mark a line break in a text file.A CR immediately followed by a LF (CRLF, \\r\\n, or 0x0D0A) moves the cursor down to the next line and then to the beginning of the line.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/CRLF"
  },
  {
    "term": "Control flow",
    "def": "The control flow is the order in which the computer executes statements in a script.Code is run in order from the first line in the file to the last line, unless the computer runs across the (extremely frequent) structures that change the control flow, such as conditionals and loops.For example, imagine a script used to validate user data from a webpage form. The script submits validated data, but if the user, say, leaves a required field empty, the script prompts them to fill it in. To do this, the script uses a conditional structure or if...else, so that different code executes depending on whether the form is complete or not:A typical script in JavaScript or PHP (and the like) includes many control structures, including conditionals, loops and functions. Parts of a script may also be set to execute when events occur.For example, the above excerpt might be inside a function that runs when the user clicks the Submit button for the form. The function could also include a loop, which iterates through all of the fields in the form, checking each one in turn. Looking back at the code in the if and else sections, the lines promptUser and submitForm could also be calls to other functions in the script. As you can see, control structures can dictate complex flows of processing even with only a few lines of code.Control flow means that when you read a script, you must not only read from start to finish but also look at program structure and how it affects order of execution.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Control_flow"
  },
  {
    "term": "CORS",
    "def": "CORS (Cross-Origin Resource Sharing) is a system, consisting of transmitting HTTP headers, that determines whether browsers block frontend JavaScript code from accessing responses for cross-origin requests.The same-origin security policy forbids cross-origin access to resources. But CORS gives web servers the ability to say they want to opt into allowing cross-origin access to their resources.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/CORS"
  },
  {
    "term": "Cross-site scripting",
    "def": "Cross-site scripting (XSS) is a security exploit which allows an attacker to inject into a website malicious client-side code. This code is executed by the victims and lets the attackers bypass access controls and impersonate users. According to the Open Web Application Security Project, XSS was the seventh most common Web app vulnerability in 2017.These attacks succeed if the Web app does not employ enough validation or encoding. The user's browser cannot detect the malicious script is untrustworthy, and so gives it access to any cookies, session tokens, or other sensitive site-specific information, or lets the malicious script rewrite the HTML content.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Cross-site_scripting"
  },
  {
    "term": "CORS-safelisted request header",
    "def": "A CORS-safelisted request header is one of the following HTTP headers:When containing only these headers (and values that meet the additional requirements laid out below), a requests doesn't need to send a preflight request in the context of CORS.You can safelist more headers using the Access-Control-Allow-Headers header and also list the above headers there to circumvent the following additional restrictions:CORS-safelisted headers must also fulfill the following requirements in order to be a CORS-safelisted request header:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/CORS-safelisted_request_header"
  },
  {
    "term": "Cookie",
    "def": "A cookie is a small piece of information left on a visitor's computer by a website, via a web browser.Cookies are used to personalize a user's web experience with a website. It may contain the user's preferences or inputs when accessing that website. A user can customize their web browser to accept, reject, or delete cookies.Cookies can be set and modified at the server level using the Set-Cookie HTTP header, or with JavaScript using document.cookie.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Cookie"
  },
  {
    "term": "Cryptanalysis",
    "def": "Cryptanalysis is the branch of cryptography that studies how to break codes and cryptosystems. Cryptanalysis creates techniques to break ciphers, in particular by methods more efficient than a brute-force search. In addition to traditional methods like frequency analysis and index of coincidence, cryptanalysis includes more recent methods, like linear cryptanalysis or differential cryptanalysis, that can break more advanced ciphers.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Cryptanalysis"
  },
  {
    "term": "Metadata",
    "def": "Metadata is — in its very simplest definition — data that describes data. For example, an HTML document is data, but HTML can also contain metadata in its <head> element that describes the document — for example who wrote it, and its summary.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Metadata"
  },
  {
    "term": "Method",
    "def": "A method is a function which is a property of an object. There are two kind of methods: Instance Methods which are built-in tasks performed by an object instance, or Static Methods which are tasks that are called directly on an object constructor.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Method"
  },
  {
    "term": "Long task",
    "def": "A long task is a task that takes more than 50ms to complete.It is an uninterrupted period where the main UI thread is busy for 50 ms or longer. Common examples include long running event handlers, expensive reflows and other re-renders, and work the browser does between different turns of the event loop that exceeds 50 ms.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Long_task"
  },
  {
    "term": "Main thread",
    "def": "The main thread is where a browser processes user events and paints. By default, the browser uses a single thread to run all the JavaScript in your page, as well as to perform layout, reflows, and garbage collection. This means that long-running JavaScript functions can block the thread, leading to an unresponsive page and a bad user experience.Unless intentionally using a web worker, such as a service worker, JavaScript runs on the main thread, so it's easy for a script to cause delays in event processing or painting. The less work required of the main thread, the more that thread can respond to user events, paint, and generally be responsive to the user.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Main_thread"
  },
  {
    "term": "Media",
    "def": "The term media is an overloaded one when talking about the web; it takes on different meanings depending on the context.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Media"
  },
  {
    "term": "Mutable",
    "def": "Mutable is a type of variable that can be changed. In JavaScript, only objects and arrays are mutable, not primitive values.(You can make a variable name point to a new value, but the previous value is still held in memory. Hence the need for garbage collection.)A mutable object is an object whose state can be modified after it is created.Immutables are the objects whose state cannot be changed once the object is created.Strings and Numbers are Immutable. Lets understand this with an example:On appending the \"immutableString\" with a string value, following events occur:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Mutable"
  },
  {
    "term": "Microsoft Internet Explorer",
    "def": "Internet Explorer (or IE) is a free graphical browser maintained by Microsoft for legacy enterprise uses. Microsoft Edge is currently the default Windows browser.Microsoft first bundled IE with Windows in 1995 as part of the package called \"Microsoft Plus!\". By around 2002, Internet Explorer had become the most used browser in the world, but has since lost ground to Chrome, Firefox, Edge, and Safari.IE has gone through many releases and currently stands at version 11.0.12, with desktop, mobile, and Xbox Console versions available. Formerly available on Mac and UNIX, Microsoft discontinued those versions in 2003 and 2001 respectively.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Microsoft_Internet_Explorer"
  },
  {
    "term": "mime",
    "def": "MIME \"Multipurpose internet mail extensions\" is a standard to describe documents in other forms beside ASCII text, e.g. audio, video and images. Initially used for E-Mail attachments, it has become the de facto standard to define types of documents anywhere.See also MIME-Type",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/mime"
  },
  {
    "term": "minification",
    "def": "Minification is the process of removing unnecessary or redundant data without affecting how a resource is processed by the browser.Minification can include the removal of code comments, white space, and unused code, as well as the shortening of variable and function names. Minification is used to improve web performance by reducing file size. It is generally an automated step that occurs at build time.As minification makes code less legible to humans, developer tools have 'prettification' features that can add white space back into the code to make it a bit more legible.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/minification"
  },
  {
    "term": "Modularity",
    "def": "The term Modularity refers to the degree to which a system's components may be separated and recombined, it is also division of a software package into logical units. The advantage of a modular system is that one can reason the parts independently",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/modularity"
  },
  {
    "term": "CRUD",
    "def": "CRUD (Create, Read, Update, Delete) is an acronym for ways one can operate on stored data. It is a mnemonic for the four basic functions of persistent storage. CRUD typically refers to operations performed in a database or datastore, but it can also apply to higher level functions of an application such as soft deletes where data is not actually deleted but marked as deleted via a status.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/CRUD"
  },
  {
    "term": "MitM",
    "def": "A manipulator-in-the-middle attack (MitM) intercepts a communication between two systems. For example, a Wi-Fi router can be compromised.Comparing this to physical mail: If you're writing letters to each other, the mail carrier can intercept each letter you mail. They open it, read it, eventually modify it, and then repackage the letter and only then send it to whom you intended to sent the letter for. The original recipient would then mail you a letter back, and the mail carrier would again open the letter, read it, eventually modify it, repackage it, and give it to you. You wouldn't know there's a manipulator in the middle in your communication channel – the mail carrier is invisible to you and to your recipient.In physical mail and in online communication, MITM attacks are tough to defend. A few tips:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/MitM"
  },
  {
    "term": "Modem",
    "def": "A modem (\"modulator-demodulator\") is a device that converts digital information to analog signals and vice-versa, for sending data through networks.Different kinds are used for different networks: DSL modems for telephone wires, WiFi modems for short-range wireless radio signals, 3G modems for cellular data towers, and so on.Modems are different from routers, but many companies sell modems combined with routers.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Modem"
  },
  {
    "term": "Middleware",
    "def": "Middleware is a (loosely defined) term for any software or service that enables the parts of a system to communicate and manage data. It is the software that handles communication between components and input/output, so developers can focus on the specific purpose of their application.In server-side web application frameworks, the term is often more specifically used to refer to pre-built software components that can be added to the framework's request/response processing pipeline, to handle tasks such as database access.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Middleware"
  },
  {
    "term": "MIME type",
    "def": "A MIME type (now properly called \"media type\", but also sometimes \"content type\") is a string sent along with a file indicating the type of the file (describing the content format, for example, a sound file might be labeled audio/ogg, or an image file image/png).It serves the same purpose as filename extensions traditionally do on Windows. The name originates from the MIME standard originally used in E-Mail.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/MIME_type"
  },
  {
    "term": "Mobile First",
    "def": "Mobile first, a form of progressive enhancement, is a web-development and web-design approach that focuses on prioritizing design and development for mobile screen sizes over design and development for desktop screen sizes. The rationale behind the mobile-first approach is to provide users with good user experiences at all screen sizes—by starting with creating a user experience that works well on small screens, and then building on top of that to further enrich the user experience as the screen size increases. The mobile-first approach contrasts with the older approach of designing for desktop screen sizes first, and then only later adding some support for small screen sizes.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Mobile_First"
  },
  {
    "term": "Mozilla Firefox",
    "def": "Mozilla Firefox is a free open-source browser whose development is overseen by the Mozilla Corporation. Firefox runs on Windows, OS X, Linux, and Android.First released in November 2004, Firefox is completely customizable with themes, plug-ins, and add-ons. Firefox uses Gecko to render webpages, and implements both current and upcoming Web standards.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Mozilla_Firefox"
  },
  {
    "term": "Mixin",
    "def": "A mixin is a class (interface, in WebAPI spec terms) in which some or all of its methods and/or properties are unimplemented, requiring that another class or interface provide the missing implementations.The new class or interface then includes both the properties and methods from the mixin as well as those it defines itself. All of the methods and properties are used exactly the same regardless of whether they're implemented in the mixin or the interface or class that implements the mixin.The advantage of mixins is that they can be used to simplify the design of APIs in which multiple interfaces need to include the same methods and properties.For example, the WindowOrWorkerGlobalScope mixin is used to provide methods and properties that need to be available on both the Window and WorkerGlobalScope interfaces. The mixin is implemented by both of those interfaces.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Mixin"
  },
  {
    "term": "Netscape Navigator",
    "def": "Netscape Navigator or Netscape was a leading browser in the 1990s. Netscape was based on Mosaic and the Netscape team was led by Marc Andreessen, a programmer who also wrote code for Mosaic.Netscape helped make the Web graphical rather than a text-only experience. Many browsing features became standard after Netscape introduced them. Netscape could display a webpage while loading, used JavaScript for forms and interactive content, and stored session information in cookies. Despite Netscape's technical advantages and initial dominance, by the late 1990s Internet Explorer swiftly overtook Netscape in market share.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Netscape_Navigator"
  },
  {
    "term": "NaN",
    "def": "NaN (Not a Number) is a numeric data type that means an undefined value or value that cannot be represented, especially results of floating-point calculations.For example, NaNs can represent infinity, result of division by zero, missing value, or the square root of a negative (which is imaginary, whereas a floating-point number is real).Practically speaking, if I divide two variables in a JavaScript program, the result may be NaN, which is predefined in JavaScript as \"undefined\". Hence this division may break the program. Now, if this computation was a small part of a much larger algorithm, it would be really painful to figure out where the error actually occurs. Fortunately, since the result will be NaN and I know my divisor may turn out to be 0, I can set up testing conditions that prevent any such computations in the first place or notify me of where they happen.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/NaN"
  },
  {
    "term": "MVC",
    "def": "MVC (Model-View-Controller) is a pattern in software design commonly used to implement user interfaces, data, and controlling logic. It emphasizes a separation between the software's business logic and display. This \"separation of concerns\" provides for a better division of labor and improved maintenance. Some other design patterns are based on MVC, such as MVVM (Model-View-Viewmodel), MVP (Model-View-Presenter), and MVW (Model-View-Whatever).The three parts of the MVC software-design pattern can be described as follows:Imagine a simple shopping list app. All we want is a list of the name, quantity and price of each item we need to buy this week. Below we'll describe how we could implement some of this functionality using MVC.\n  \nThe model defines what data the app should contain. If the state of this data changes, then the model will usually notify the view (so the display can change as needed) and sometimes the controller (if different logic is needed to control the updated view).Going back to our shopping list app, the model would specify what data the list items should contain — item, price, etc. — and what list items are already present.The view defines how the app's data should be displayed.In our shopping list app, the view would define how the list is presented to the user, and receive the data to display from the model.The controller contains logic that updates the model and/or view in response to input from the users of the app.So for example, our shopping list could have input forms and buttons that allow us to add or delete items. These actions require the model to be updated, so the input is sent to the controller, which then manipulates the model as appropriate, which then sends updated data to the view.You might however also want to just update the view to display the data in a different format, e.g., change the item order to alphabetical, or lowest to highest price. In this case the controller could handle this directly without needing to update the model.As a web developer, this pattern will probably be quite familiar even if you've never consciously used it before. Your data model is probably contained in some kind of database (be it a traditional server-side database like MySQL, or a client-side solution such as IndexedDB [en-US].) Your app's controlling code is probably written in HTML/JavaScript, and your user interface is probably written using HTML/CSS/whatever else you like. This sounds very much like MVC, but MVC makes these components follow a more rigid pattern.In the early days of the Web, MVC architecture was mostly implemented on the server-side, with the client requesting updates via forms or links, and receiving updated views back to display in the browser. However, these days, more of the logic is pushed to the client with the advent of client-side data stores, and XMLHttpRequest allowing partial page updates as required.Web frameworks such as AngularJS and Ember.js all implement an MVC architecture, albeit in slightly different ways.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/MVC"
  },
  {
    "term": "Node",
    "def": "The term node can have several meanings depending on the context. It may refer to:Another use of the word is when talking about Node.js",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Node"
  },
  {
    "term": "NAT",
    "def": "NAT (Network Address Translation) is a technique for letting multiple computers share an IP address. NAT assigns unique addresses to each computer on the local network and adjusts incoming/outgoing network traffic to send data to the right place.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/NAT"
  },
  {
    "term": "Namespace",
    "def": "Namespace is a context for identifiers, a logical grouping of names used in a program. Within the same context and same scope, an identifier must uniquely identify an entity.In an operating system a directory is a namespace. Each file or subdirectory has a unique name, but one file may use the same name multiple times.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Namespace"
  },
  {
    "term": "NNTP",
    "def": "NNTP (Network News Transfer Protocol) is a protocol used to transfer Usenet messages from client to server or between servers.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/NNTP"
  },
  {
    "term": "Network throttling",
    "def": "Network throttling is an intentional slowing down of internet speed. In web performance, network throttling, or network condition emulation, it is used to emulate low bandwidth conditions experienced by likely a large segment of a site's target user base.It's important not to overlook network conditions users experience on mobile. The internet speeds for developers creating web applications in a corporate office building on a powerful computer are generally very fast. As a developer, tech writer, or designer, this is likely your experience. The network speeds of a mobile user accessing that web application, possibly while traveling or in a remote area with poor data plan coverage, will likely be very slow, if they are able to get online at all. Network throttling enables a developer to emulate an experience of a user. Most browser developer tools, such as the browser inspector, provide a function to emulate different network conditions. By emulating your user's experience via network throttling, you can more readily identify and fix load time issues.Browser developer tools generally have network throttling options, to allow you to test your app under slow network conditions. Firefox's developer tools for example have a drop-down menu available in both the Network Monitor and Responsive Design Mode containing network speed options (e.g. wifi, good 3G, 2G...)",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Network_throttling"
  },
  {
    "term": "Navigation directive",
    "def": "CSP navigation directives are used in a Content-Security-Policy header and govern to which location a user can navigate to or submit a form to, for example.Navigation directives don't fall back to the default-src directive.See Navigation directives for a complete list.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Navigation_directive"
  },
  {
    "term": "Native",
    "def": "A native application has been compiled to run on the hardware/software environment that comprises the targeted architecture.An example of a native Android app would be a mobile application written in Java using the Android toolchain.On the other hand, a Web App that runs inside a browser is not native — it is run in the web browser, which sits on top of the native environment, not the native environment itself.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Native"
  },
  {
    "term": "Number",
    "def": "In JavaScript, Number is a numeric data type in the double-precision 64-bit floating point format (IEEE 754). In other programming languages different numeric types exist; for example, Integers, Floats, Doubles, or Bignums.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Number"
  },
  {
    "term": "Object",
    "def": "In JavaScript, objects can be seen as a collection of properties. With the object literal syntax, a limited set of properties are initialized; then properties can be added and removed. Property values can be values of any type, including other objects, which enables building complex data structures. Properties are identified using key values. A key value is either a String value or a Symbol value.There are two types of object properties: The data property and the accessor property.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Object"
  },
  {
    "term": "Object reference",
    "def": "A link to an object. Object references can be used exactly like the linked objects.The concept of object references becomes clear when assigning the same object to more than one property. Rather than holding a copy of the object, each assigned property holds object references that link to the same object, so that when the object changes all properties referring to the object reflect the change.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Object_reference"
  },
  {
    "term": "non-normative",
    "def": "Software specifications often contains information marked as non-normative or informative, which means that those are provided there for the purpose of helping the readers to understand the specification better or to show an example or a best practice, and not needed to be followed as a rule. Sections that contain official part of the specification that must be followed are often marked as normative.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/non-normative"
  },
  {
    "term": "Node.js",
    "def": "Node.js is a cross-platform JavaScript runtime environment that allows developers to build server-side and network applications with JavaScript.npm is bundled with Node.js. It runs on the command line as the command npm. It is a package manager that downloads packages into a node_modules folder. You call the downloaded packages through const libraryModule = require(\"libraryname\").",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Node.js"
  },
  {
    "term": "Opera Browser",
    "def": "Opera is the fifth most used web browser, publicly released in 1996 and initially running on Windows only. Opera uses Blink as its layout engine since 2013 (before that, Presto). Opera also exists in mobile and tablet versions.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Opera_Browser"
  },
  {
    "term": "Nullish value",
    "def": "In JavaScript, a nullish value is the value which is either null or undefined. Nullish values are always falsy.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Nullish"
  },
  {
    "term": "OpenGL",
    "def": "OpenGL (Open Graphics Library) is a cross-language, multi-platform application programming interface (API) for rendering 2D and 3D vector graphics. The API is typically used to interact with a graphics processing unit (GPU), to achieve hardware-accelerated rendering.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/OpenGL"
  },
  {
    "term": "Normative",
    "def": "Normative is a word commonly used in software specifications to denote sections that are standardized and must be followed as a rule. Specifications might also contain sections that are marked as non-normative or informative, which means those are provided there for the purpose of helping the reader understand the specifications better or to showcase an example or best practice, which need not be followed as a rule.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Normative"
  },
  {
    "term": "OOP",
    "def": "OOP (Object-Oriented Programming) is an approach in programming in which data is encapsulated within objects and the object itself is operated on, rather than its component parts.JavaScript is heavily object-oriented. It follows a prototype-based model (as opposed to class-based).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/OOP"
  },
  {
    "term": "Operand",
    "def": "An operand is the part of an instruction representing the data manipulated by the operator. For example, when you add two numbers, the numbers are the operand and \"+\" is the operator.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Operand"
  },
  {
    "term": "Null",
    "def": "In computer science, a null value represents a reference that points, generally intentionally, to a nonexistent or invalid object or address. The meaning of a null reference varies among language implementations.In JavaScript, null is marked as one of the primitive values, because its behavior is seemingly primitive.But in certain cases, null is not as \"primitive\" as it first seems! Every Object is derived from null value, and therefore typeof operator returns object for it:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Null"
  },
  {
    "term": "OpenSSL",
    "def": "OpenSSL is an open-source implementation of SSL and TLS.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/OpenSSL"
  },
  {
    "term": "OTA",
    "def": "Over The Air (OTA) refers to automatic updating of software on connected devices from a central server. All device owners receiving a given set of updates are on the same \"channel\", and each device often can access several channels (e.g. for production or engineering builds).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/OTA"
  },
  {
    "term": "Origin",
    "def": "Web content's origin is defined by the scheme (protocol), hostname (domain), and port of the URL used to access it. Two objects have the same origin only when the scheme, hostname, and port all match.Some operations are restricted to same-origin content, and this restriction can be lifted using CORS.These are same origin because they have the same scheme (http) and hostname (example.com), and the different file path does not matter:These are same origin because a server delivers HTTP content through port 80 by default:These are not same origin because they use different schemes:These are not same origin because they use different hostnames:These are not same origin because they use different ports:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Origin"
  },
  {
    "term": "Parameter",
    "def": "A parameter is a named variable passed into a function. Parameter variables are used to import arguments into functions.For example:Note the difference between parameters and arguments:Two kinds of parameters:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Parameter"
  },
  {
    "term": "Operator",
    "def": "Reserved syntax consisting of punctuation or alphanumeric characters that carries out built-in functionality. For example, in JavaScript the addition operator (\"+\") adds numbers together and concatenates strings, whereas the \"not\" operator (\"!\") negates an expression — for example making a true statement return false.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Operator"
  },
  {
    "term": "Page load time",
    "def": "Page load time is the time it takes for a page to load, measured from navigation start to the start of the load event.While page load time 'sounds' like the perfect web performance metric, it isn't. Load times can vary greatly between users depending on device capabilities, network conditions, and, to a lesser extent, distance from the server. The development environment, where page load time is measured, is likely an optimal experience, not reflective of your users' reality. In addition, web performance isn't just about when the load event happens. It's also about perceived performance, responsiveness, jank and jitter.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Page_load_time"
  },
  {
    "term": "PAC",
    "def": "A Proxy Auto-Configuration file (PAC file) is a file which contains a function, FindProxyForURL(), which is used by the browser to determine whether requests (including HTTP, HTTPS, and FTP) should go directly to the destination or if they need to be forwarded through a web proxy server.See Proxy Auto-Configuration (PAC) file for details about how these are used and how to create new ones.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/PAC"
  },
  {
    "term": "P2P",
    "def": "P2P (Peer-to-peer) is a computer networking architecture in which all participating nodes (peers) have equal privileges and share the workload. P2P differs from a client-server network architecture, where multiple client nodes connect to centralized servers for services. P2P is commonly found in Blockchain Applications.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/P2P"
  },
  {
    "term": "Parse",
    "def": "Parsing means analyzing and converting a program into an internal format that a runtime environment can actually run, for example the JavaScript engine inside browsers.The browser parses HTML into a DOM tree. HTML parsing involves tokenization and tree construction. HTML tokens include start and end tags, as well as attribute names and values. If the document is well-formed, parsing it is straightforward and faster. The parser parses tokenized input into the document, building up the document tree.When the HTML parser finds non-blocking resources, such as an image, the browser will request those resources and continue parsing. Parsing can continue when a CSS file is encountered, but <script> tags—particularly those without an async or defer attribute—blocks rendering, and pauses parsing of HTML.When the browser encounters CSS styles, it parses the text into the CSS Object Model (or CSSOM), a data structure it then uses for styling layouts and painting. The browser then creates a render tree from both these structures to be able to paint the content to the screen. JavaScript is also downloaded, parsed, and then executed.JavaScript parsing is done during compile time or whenever the parser is invoked, such as during a call to a method.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Parse"
  },
  {
    "term": "Perceived performance",
    "def": "Perceived performance is a measure of how fast, responsive, and reliable a website feels to its users. The perception of how well a site is performing can have more impact on the user experience than the actual load and response times.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Perceived_performance"
  },
  {
    "term": "Parser",
    "def": "A parser is the module of a compiler or interpreter that parses a source code file.More generally, it's a piece of software that parses text and transforms its content to another representation.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Parser"
  },
  {
    "term": "Packet",
    "def": "A packet, or network packet, is a formatted chunk of data sent over a network. The main components of a network packet are the user data and control information. The user data is known as the payload. The control information is the information for delivering the payload. It consists of network addresses for the source and destination, sequencing information, and error detection codes and is generally found in packet headers and footer.A hop occurs when a packet is passed from one network to the next network. It is a field that is decreases by one each time a packet goes through, once it reaches 0 it has failed and the packet is discarded.Over time the number packets can cause traversing within closed circuits, the number of packets circulating would build up and then ultimately lead to the networking in failing.Error detection and correction are codes that are used to detect and apply corrections to the errors that occur when data is transmitted to the receiver. There are two types of error corrections backward and forward error correction. Backward error correction is when the receiver requests the sender to retransmit the entire data unit. Forward error correction is when the receiver uses the error-correcting code which automatically corrects the errorsAt the transmitter, the calculation is performed before the packet is sent. When received at the destination, the checksum is recalculated, and compared with the one in the packet.This field indicates which packet should have higher priority over the others. The high priority queue is emptied more quickly than lower priority queues when the network is congested.When routing network packets it requires two network addresses the source address of the sending host, and the destination address of the receiving host.Payload is the data that is carried on behalf of an application. It is usually of variable length, up to a maximum that is set by the network protocol and sometimes the equipment on the route.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Packet"
  },
  {
    "term": "Page prediction",
    "def": "Page Prediction is a browser feature or script which, when enabled, tells the browser to download resources the user is likely to visit before the user requests the content. Page prediction improves performance by enabling almost instant loading of predicted content. However, page prediction may also download content a user does not seek.Some web applications include a prediction feature completing search text and address bar URLs based on browsing history and related searches. For example, as the user types in the address bar, the browser might send the current text in the address bar to the search engine before the user submits the request.Although browser page prediction and prediction services enable faster page loads, they consume additional bandwidth. Also, pre-loaded websites and embedded content can set and read their cookies as if they were visited even if they weren't.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Page_prediction"
  },
  {
    "term": "Payload body",
    "def": "The HTTP message payload body is the information (\"payload\") part of the data that is sent in the HTTP Message Body (if any), prior to transfer encoding being applied. If transfer encoding is not used, the payload body and message body are the same thing!For example, in this response the message body contains only the payload body: \"Mozilla Developer Network\":By contrast, the below response uses transfer encoding to encode the payload body into chunks. The payload body (information) sent is still \"Mozilla Developer Network\", but the message body includes additional data to separate the chunks:For more information see RFC 7230, section 3.3: Message Body and RFC 7230, section 3.3.1: Transfer-Encoding.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Payload_body"
  },
  {
    "term": "Pixel",
    "def": "A pixel is the smallest building block of a graphical display like a computer screen.Display resolution is expressed in the unit of pixels. eg: A \"800 x 600\" pixel resolution means that 800 pixels can be displayed in width and 600 pixels in height.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Pixel"
  },
  {
    "term": "PHP",
    "def": "PHP (a recursive initialism for PHP: Hypertext Preprocessor) is an open-source server-side scripting language that can be embedded into HTML to build web applications and dynamic websites.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/PHP"
  },
  {
    "term": "Percent-encoding",
    "def": "Percent-encoding is a mechanism to encode 8-bit characters that have specific meaning in the context of URLs. It is sometimes called URL encoding. The encoding consists of substitution: A '%' followed by the hexadecimal representation of the ASCII value of the replace character.Special characters needing encoding are: ':', '/', '?', '#', '[', ']', '@', '!', '$', '&', \"'\", '(', ')', '*', '+', ',', ';', '=', as well as '%' itself. Other characters don't need to be encoded, though they could.Depending on the context, the character ' ' is translated to a '+' (like in the percent-encoding version used in an application/x-www-form-urlencoded message), or in '%20' like on URLs.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/percent-encoding"
  },
  {
    "term": "Payload header",
    "def": "A payload header is an HTTP header that describes the payload information related to safe transport and reconstruction of the original resource representation, from one or more messages. This includes information like the length of the message payload, which part of the resource is carried in this payload (for a multi-part message), any encoding applied for transport, message integrity checks, etc.Payload headers may be present in both HTTP request and response messages (i.e. in any message that is carrying payload data).The payload headers include: Content-Length, Content-Range, Trailer, and Transfer-Encoding.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Payload_header"
  },
  {
    "term": "Parent object",
    "def": "The object to which a given property or method belongs.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Parent_object"
  },
  {
    "term": "PDF",
    "def": "PDF (Portable Document Format) is a file format used to share documentation without depending on any particular software implementation, hardware platform, or operating system. PDF provides a digital image of a printed document, and keeps the same appearance when printed.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/PDF"
  },
  {
    "term": "PNG",
    "def": "PNG (Portable Network Graphics) is a graphics file format that supports lossless data compression.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/PNG"
  },
  {
    "term": "Placeholder names",
    "def": "Placeholder names are commonly used in cryptography to indicate the participants in a conversation, without resorting to terminology such as \"Party A,\" \"eavesdropper,\" and \"malicious attacker.\"The most commonly used names are:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Placeholder_names"
  },
  {
    "term": "Preflight request",
    "def": "A CORS preflight request is a CORS request that checks to see if the CORS protocol is understood and a server is aware using specific methods and headers.It is an OPTIONS request, using three HTTP request headers: Access-Control-Request-Method, Access-Control-Request-Headers, and the Origin header.A preflight request is automatically issued by a browser and in normal cases, front-end developers don't need to craft such requests themselves. It appears when request is qualified as \"to be preflighted\" and omitted for simple requests.For example, a client might be asking a server if it would allow a DELETE request, before sending a DELETE request, by using a preflight request:If the server allows it, then it will respond to the preflight request with an Access-Control-Allow-Methods response header, which lists DELETE:The preflight response can be optionally cached for the requests created in the same URL using Access-Control-Max-Age header like in the above example.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Preflight_request"
  },
  {
    "term": "Polyfill",
    "def": "A polyfill is a piece of code (usually JavaScript on the Web) used to provide modern functionality on older browsers that do not natively support it.For example, a polyfill could be used to mimic the functionality of a text-shadow in IE7 using proprietary IE filters, or mimic rem units or media queries by using JavaScript to dynamically adjust the styling as appropriate, or whatever else you require.The reason why polyfills are not used exclusively is for better functionality and better performance. Native implementations of APIs can do more and are faster than polyfills. For example, the Object.create polyfill only contains the functionalities that are possible in a non-native implementation of Object.create.Other times, polyfills are used to address issues where browsers implement the same features in different ways. The polyfill uses non-standard features in a certain browser to give JavaScript a standards-compliant way to access the feature. Although this reason for polyfilling is very rare today, it was especially prevalent back in the days of IE6 and Netscape where each browser implemented JavaScript very differently. The 1st version of JQuery was an early example of a polyfill. It was essentially a compilation of browser-specific workarounds to provide JavaScript developers with a single common API that worked in all browsers. At the time, JavaScript developers were having major problems trying to get their website to work across all devices because there was such a discrepancy between browsers that the website might have to be programmed radically differently and have a much different user interface based upon the user's browser. Thus, the JavaScript developer had access to only a very tiny handful of JavaScript APIs that worked more-or-less consistently across all browsers. Using a polyfill to handle browser-specific implementations is less common today because modern browsers mostly implement a broad set of APIs according to standard semantics.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Polyfill"
  },
  {
    "term": "Prerender",
    "def": "With prerendering, the content is prefetched and then rendered in the background by the browser as if the content had been rendered into an invisible separate tab. When the user navigates to the prerendered content, the current content is replaced by the prerendered content instantly.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/prerender"
  },
  {
    "term": "POP3",
    "def": "POP3 (Post Office Protocol) is a very common protocol for getting emails from a mail server over a TCP connection. POP3 does not support folders, unlike the more recent IMAP, which is harder to implement because of its more complex structure.Clients usually retrieve all messages and then delete them from the server, but POP3 does allow retaining a copy on the server. Nearly all email servers and clients currently support POP3.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/POP"
  },
  {
    "term": "Plugin",
    "def": "A browser plugin is a software component that users can install to handle content that the browser can't support natively. Browser plugins are usually written using the NPAPI (Netscape Plugin Application Programming Interface) architecture.The most well-known and widely used plugin was the Adobe Flash player, which enabled browsers to run Adobe Flash content.As browsers have become more powerful, plugins have become less useful. Plugins also have a history of causing security and performance problems for web users.Between 2016 and 2021 browser vendors worked on a deprecation roadmap for plugins and in particular for Adobe Flash, and today plugins are no longer supported by any major browsers.Plugins should not be confused with browser extensions, which unlike plugins are distributed as source code rather than binaries, and which are still supported by browsers, notably using the WebExtensions system.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Plugin"
  },
  {
    "term": "OWASP",
    "def": "OWASP (Open Web Application Security Project) is a non-profit organization and worldwide network that works for security in Free Software, especially on the Web.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/OWASP"
  },
  {
    "term": "Port",
    "def": "For a computer connected to a network with an IP address, a port is a communication endpoint. Ports are designated by numbers, and below 1024 each port is associated by default with a specific protocol.For example, the default port for the HTTP protocol is 80 and the default port for the HTTPS protocol is 443, so a HTTP server waits for requests on those ports. Each Internet protocol is associated with a default port: SMTP (25), POP (110), IMAP (143), IRC (194), and so on.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Port"
  },
  {
    "term": "Plaintext",
    "def": "Plaintext refers to information that is being used as an input to an encryption algorithm, or to ciphertext that has been decrypted.It is frequently used interchangeably with the term cleartext, which more loosely refers to any information, such as a text document, image, etc., that has not been encrypted and can be read by a human or computer without additional processing.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Plaintext"
  },
  {
    "term": "Polymorphism",
    "def": "Polymorphism is the presentation of one interface for multiple data types.For example, integers, floats, and doubles are implicitly polymorphic: regardless of their different types, they can all be added, subtracted, multiplied, and so on.In the case of OOP, by making the class responsible for its code as well as its own data, polymorphism can be achieved in that each class has its own function that (once called) behaves properly for any object.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Polymorphism"
  },
  {
    "term": "Prefetch",
    "def": "Prefetching is when content is downloaded in the background, this is based on the assumption that the content will likely be requested, enabling the content to load instantly if and when the user requests it. The content is downloaded and cached for anticipated future use without the user making an explicit request for it.Domain lookups can be slow, especially with network latency on mobile phones. They are most relevant when there are a plethora of links to external websites that may be clicked on, like search engine results, DNS prefetching resolves domain names in advance thereby speeding up load times by reducing the time associated with domain lookup at request time.Link prefetching is a performance optimization technique that works by assuming which links the user is likely to click, then downloading the content of those links. If the user decides to click on one of the links, then the page will be rendered instantly as the content has already been downloaded.The prefetch hints are sent in HTTP headers:Browsers will prefetch content when the prefetch <link> tag directs it to, giving the developer control over what resources should be prefetched.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Prefetch"
  },
  {
    "term": "Presto",
    "def": "Presto was the proprietary browser layout engine used to power the Opera browser until version 15. Since then, the Opera browser is based on Chromium, which uses the Blink layout engine.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Presto"
  },
  {
    "term": "Primitive",
    "def": "In JavaScript, a primitive (primitive value, primitive data type) is data that is not an object and has no methods. There are 7 primitive data types: string, number, bigint, boolean, undefined, symbol, and null.Most of the time, a primitive value is represented directly at the lowest level of the language implementation.All primitives are immutable, i.e., they cannot be altered. It is important not to confuse a primitive itself with a variable assigned a primitive value. The variable may be reassigned a new value, but the existing value can not be changed in the ways that objects, arrays, and functions can be altered.This example will help you understand that primitive values are immutable.A primitive can be replaced, but it can't be directly altered.Except for null and undefined, all primitive values have object equivalents that wrap around the primitive values:The wrapper's valueOf() method returns the primitive value.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Primitive"
  },
  {
    "term": "Privileged",
    "def": "Users are said to be privileged when they are granted additional rights to a system, or given ultimate access to content in a higher priority level when compared to normal users.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Privileged"
  },
  {
    "term": "Property",
    "def": "The term property can have several meanings depending on the context. It may refer to:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/property"
  },
  {
    "term": "Prototype",
    "def": "A prototype is a model that displays the appearance and behavior of an application or product early in the development lifecycle.See Inheritance and the prototype chain",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Prototype"
  },
  {
    "term": "privileged code",
    "def": "Privileged code - Javascript code of your extension. For example, code in content scripts.Non-privileged - Javascript on web-page.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/privileged_code"
  },
  {
    "term": "Progressive web apps",
    "def": "Progressive web apps is a term used to describe the modern state of web app development. This involves taking standard web sites/apps that enjoy all the best parts of the Web — such as discoverability via search engines, being linkable via URLs, and working across multiple form factors — and supercharging them with modern APIs (such as Service Workers and Push) and features that confer other benefits more commonly attributed to native apps.These features include being installable, working offline, and being easy to sync with and re-engage the user from the server.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Progressive_web_apps"
  },
  {
    "term": "Protocol",
    "def": "A protocol is a system of rules that define how data is exchanged within or between computers. Communications between devices require that the devices agree on the format of the data that is being exchanged. The set of rules that defines a format is called a protocol.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Protocol"
  },
  {
    "term": "Prototype-based programming",
    "def": "Prototype-based programming is a style of object-oriented programming in which classes are not explicitly defined, but rather derived by adding properties and methods to an instance of another class or, less frequently, adding them to an empty object.In simple words: this type of style allows the creation of an object without first defining its class.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Prototype-based_programming"
  },
  {
    "term": "Public-key cryptography",
    "def": "Public-key cryptography — or asymmetric cryptography — is a cryptographic system in which keys come in pairs. The transformation performed by one of the keys can only be undone with the other key. One key (the private key) is kept secret while the other is made public.When used for digital signatures, the private key is used to sign and the public key to verify. This means that anyone can verify a signature, but only the owner of the corresponding private key could have generated it.When used for encryption, the public key is used to encrypt and the private key is used to decrypt. This gives public-key encryption systems an advantage over symmetric encryption systems in that the encryption key can be made public. Anyone could encrypt a message to the owner of the private key, but only the owner of the private key could decrypt it. However, they are typically much slower than symmetric algorithms and the size of message they can encrypt is proportional to the size of the key, so they do not scale well for long messages.As a result, it's common for an encryption system to use a symmetric algorithm to encrypt the message, then a public-key system to encrypt the symmetric key. This arrangement can confer the benefits of both systems.Commonly used public-key cryptosystems are RSA (for both signing and encryption), DSA (for signing) and Diffie-Hellman (for key agreement).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Public-key_cryptography"
  },
  {
    "term": "Pseudo-class",
    "def": "In CSS, a pseudo-class selector targets elements depending on their state rather than on information from the document tree. For example, the selector a:visited applies styles only to links that the user has already followed.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Pseudo-class"
  },
  {
    "term": "Python",
    "def": "Python is a high level general-purpose programming language. It uses a multi-paradigm approach, meaning it supports procedural, object-oriented, and some functional programming constructs.It was created by Guido van Rossum as a successor to another language (called ABC) between 1985 and 1990, and is currently used on a large array of domains like web development, desktop applications, data science, DevOps, and automation/productivity.Python is developed under an OSI-approved open source license, making it freely usable and distributable, even for commercial use. Python's license is administered by the Python Software Foundation.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Python"
  },
  {
    "term": "Promise",
    "def": "A Promise is an object that's returned by a function that has not yet completed its work. The promise literally represents a promise made by the function that it will eventually return a result through the promise object.When the called function finishes its work asynchronously, a function on the promise object called a resolution (or fulfillment, or completion) handler is called to let the original caller know that the task is complete.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Promise"
  },
  {
    "term": "Pseudocode",
    "def": "Pseudocode refers to code-like syntax that is generally used to indicate to humans how some code syntax works, or illustrate the design of an item of code architecture. It won't work if you try to run it as code.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Pseudocode"
  },
  {
    "term": "QUIC",
    "def": "Quick UDP Internet Connection, or QUIC, is an experimental multiplexed transport protocol implemented on UDP. It was developed by Google as a way to experiment with ways to improve TCP and web application delivery.As TCP is built into the kernel of many operating systems being able to experiment with changes, test them and implement modifications is an extremely slow process. The creation of QUIC allows developers to conduct experiments and try new things faster.QUIC was designed to support the semantics of HTTP/2. It provides multiplexing, flow control, security and congestion control.Key features of QUIC include:There is limited browser and server support for QUIC today.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/QUIC"
  },
  {
    "term": "Raster image",
    "def": "A raster image is an image file defined as a grid of pixels. They're also referred to as bitmaps. Common raster image formats on the Web are JPEG, PNG, GIF, and ICO.Raster image files usually contain one set of dimensions, but the ICO and CUR formats, used for favicons and CSS cursor images, can contain multiple sizes.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Raster_image"
  },
  {
    "term": "Proxy server",
    "def": "A proxy server is an intermediate program or computer used when navigating through different networks of the Internet. They facilitate access to content on the World Wide Web. A proxy intercepts requests and serves back responses; it may forward the requests, or not (for example in the case of a cache), and it may modify it (for example changing its headers, at the boundary between two networks).A proxy can be on the user's local computer, or anywhere between the user's computer and a destination server on the Internet. In general there are two main types of proxy servers:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Proxy_server"
  },
  {
    "term": "RAIL",
    "def": "RAIL, an acronym for Response, Animation, Idle, and Load, is a performance model originated by the Google Chrome team in 2015, focused on user experience and performance within the browser. The performance mantra of RAIL is \"Focus on the user; the end goal isn't to make your site perform fast on any specific device, it's to make users happy.\" There are 4 stages of interaction: page load, idle, response to input, and scrolling and animation. In acronym order, the main tenets are:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/RAIL"
  },
  {
    "term": "Recursion",
    "def": "The act of a function calling itself, recursion is used to solve problems that contain smaller sub-problems. A recursive function can receive two inputs: a base case (ends recursion) or a recursive case (resumes recursion).The following Python code defines a function that takes a number, prints it, and then calls itself again with the number's value -1. It keeps going until the number is equal to 0, in which case it stops.The output will look like this:\n  10\n  9\n  8\n  7\n  6\n  5\n  4\n  3\n  2\n  1\nThe following code defines a function that returns the maximum size of the call stack available in the JavaScript runtime in which the code is run.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Recursion"
  },
  {
    "term": "Pseudo-element",
    "def": "In CSS, a pseudo-element selector applies styles to parts of your document content in scenarios where there isn't a specific HTML element to select. For example, rather than putting the first letter of each paragraph in its own element, you can style them all with p::first-letter.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Pseudo-element"
  },
  {
    "term": "RSS",
    "def": "RSS (Really Simple Syndication) refers to several XML document formats designed for publishing site updates. When you subscribe to a website's RSS feed, the website sends information and updates to your RSS reader in an RSS document called a feed, so you don't need to check all your favorite websites manually.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/RSS"
  },
  {
    "term": "Rsync",
    "def": "Rsync is an open-source file synchronizing tool that provides incremental file transfer It can be used over insecure and secure transports (like SSH). It is available on most Unix-based systems (such as macOS and Linux) and Windows. There are also GUI-based tools that use rsync, for example, Acrosync.A basic command looks like this:You can also make a connection over SSH using the -e option as shown:There are numerous examples on the Internet, including those at the official website, and at the Wikipedia entry for rsync.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Rsync"
  },
  {
    "term": "Reflow",
    "def": "Reflow happens when a browser must process and draw part or all of a webpage again, such as after an update on an interactive site.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Reflow"
  },
  {
    "term": "Quality values",
    "def": "Quality values, or q-values and q-factors, are used to describe the order of priority of values in a comma-separated list. It is a special syntax allowed in some HTTP headers and in HTML.The importance of a value is marked by the suffix ';q=' immediately followed by a value between 0 and 1 included, with up to three decimal digits, the highest value denoting the highest priority. When not present, the default value is 1.The following syntaxindicates the order of priority:If there is no priority defined for the first two values, the order in the list is irrelevant. Nevertheless, with the same quality, more specific values have priority over less specific ones:Some syntax, like the one of Accept, allow additional specifiers like text/html;level=1. These increase the specificity of the value. Their use is extremely rare.Starting with Firefox 18, the quality factor values are clamped to 2 decimal places. They used to be clamped to only 1 decimal place in earlier versions (bug 672448).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Quality_values"
  },
  {
    "term": "Script-supporting element",
    "def": "In an HTML document, script-supporting elements are those elements that don't directly contribute to the appearance or layout of the page; instead, they're either scripts or contain information that's only used by scripts.These elements may be important, but do not affect the displayed page unless the page's scripts explicitly cause them to do so.There are only two script-supporting elements: <script> and <template>.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Script-supporting_element"
  },
  {
    "term": "Rendering engine",
    "def": "A rendering engine is software that draws text and images on the screen. The engine draws structured text from a document (often HTML), and formats it properly based on the given style declarations (often given in CSS). Examples of layout engines: Blink, Gecko, EdgeHTML, WebKit.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Rendering_engine"
  },
  {
    "term": "Repo",
    "def": "In a revision control system like Git or SVN, a repo (i.e. \"repository\") is a place that hosts an application's code source, together with various metadata.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Repo"
  },
  {
    "term": "Reporting directive",
    "def": "CSP reporting directives are used in a Content-Security-Policy header and control the reporting process of CSP violations.See Reporting directives for a complete list.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Reporting_directive"
  },
  {
    "term": "REST",
    "def": "REST (Representational State Transfer) refers to a group of software architecture design constraints that bring about efficient, reliable and scalable distributed systems.The basic idea of REST is that a resource, e.g. a document, is transferred via well-recognized, language-agnostic, and reliably standardized client/server interactions. Services are deemed RESTful when they adhere to these constraints.HTTP APIs in general are sometimes colloquially referred to as RESTful APIs, RESTful services, or REST services, although they don't necessarily adhere to all REST constraints. Beginners can assume a REST API means an HTTP service that can be called using standard web libraries and tools.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/REST"
  },
  {
    "term": "Progressive Enhancement",
    "def": "Progressive enhancement is a design philosophy that provides a baseline of essential content and functionality to as many users as possible, while delivering the best possible experience only to users of the most modern browsers that can run all the required code.The word progressive in progressive enhancement means creating a design that achieves a simpler-but-still-usable experience for users of older browsers and devices with limited capabilities, while at the same time being a design that progresses the user experience up to a more-compelling, fully-featured experience for users of newer browsers and devices with richer capabilities.Feature detection is generally used to determine whether browsers can handle more modern functionality, while polyfills are often used to add missing features with JavaScript.Special notice should be taken of accessibility. Acceptable alternatives should be provided where possible.Progressive enhancement is a useful technique that allows web developers to focus on developing the best possible websites while making those websites work on multiple unknown user agents. Graceful degradation is related but is not the same thing and is often seen as going in the opposite direction to progressive enhancement. In reality both approaches are valid and can often complement one another.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Progressive_Enhancement"
  },
  {
    "term": "RDF",
    "def": "RDF (Resource Description Framework) is a language developed by W3C for representing information on the World Wide Web, such as Webpages. RDF provides a standard way of encoding resource information so that it can be exchanged in a fully automated way between applications.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/RDF"
  },
  {
    "term": "Resource Timing",
    "def": "Diagnosing performance issues requires performance data at the granularity of the resource. The Resource Timing API is a JavaScript API that is able to capture timing information for each individual resource that is fetched when a page is loaded.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Resource_Timing"
  },
  {
    "term": "Scrollport",
    "def": "The scrollport is the visual viewport of a scroll container in a document. A scroll container is created by applying overflow: scroll to a container, or overflow: auto when there is enough content to cause overflow. The scrollport coincides with the padding box of that container and represents the content that can be seen as the box is scrolled.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Scrollport"
  },
  {
    "term": "Quaternion",
    "def": "A quaternion is the quotient of two 3D vectors and is used in 3D graphics and in accelerometer-based sensors to represent orientation or rotational data.While mathematical quaternions are more involved than this, the unit quaternions (or rotational quaternions) used to represent rotation while using WebGL or WebXR, for example, are represented using the same syntax as a 3D point. As such, the type DOMPoint (or DOMPointReadOnly) is used to store quaternions.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Quaternion"
  },
  {
    "term": "Request header",
    "def": "A request header is an HTTP header that can be used in an HTTP request to provide information about the request context, so that the server can tailor the response. For example, the Accept-* headers indicate the allowed and preferred formats of the response. Other headers can be used to supply authentication credentials (e.g. Authorization), to control caching, or to get information about the user agent or referrer, etc.Not all headers that can appear in a request are referred to as request headers by the specification. For example, the Content-Type header is referred to as a representation header.In addition, CORS defines a subset of request headers as simple headers, request headers that are always considered authorized and are not explicitly listed in responses to preflight requests.The HTTP message below shows a few request headers after a GET request:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Request_header"
  },
  {
    "term": "RGB",
    "def": "Red Green Blue (RGB) is a color model that represents colors as mixtures of three underlying components (or channels), namely, red, green, and blue. Each color is described by a sequence of three numbers (typically between 0.0 and 1.0, or between 0 and 255) that represent the different intensities (or contributions) of red, green, and blue, in determining the final color.There are many ways to describe the RGB components of a color. In CSS they can be represented as a single 24-bit integer in hexadecimal notation (for example, #add8e6 is light blue), or in functional notation as three separate 8-bit integers (for example, rgb(46, 139, 87) is sea green). In OpenGL, WebGL, and GLSL the red-green-blue components are fractions (floating-point numbers between 0.0 and 1.0), although in the actual color buffer they are typically stored as 8-bit integers. Graphically, a color can be represented as a point in a three-dimensional grid or cube, where each dimension (or axis) corresponds to a different channel.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/RGB"
  },
  {
    "term": "Response header",
    "def": "A response header is an HTTP header that can be used in an HTTP response and that doesn't relate to the content of the message. Response headers, like Age, Location or Server are used to give a more detailed context of the response.Not all headers appearing in a response are categorized as response headers by the specification. For example, the Content-Type header is a representation header indicating the original type of data in the body of the response message (prior to the encoding in the Content-Encoding representation header being applied). However, \"conversationally\" all headers are usually referred to as response headers in a response message.The following shows a few response and representation headers after a GET request.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Response_header"
  },
  {
    "term": "Reference",
    "def": "In the context of objects, this is an object reference. On MDN, we could be talking about the JavaScript reference itself.In computing, a reference is a value that indirectly accesses data to retrieve a variable or a record in a computer's memory or other storage device.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Reference"
  },
  {
    "term": "Robots.txt",
    "def": "Robots.txt is a file which is usually placed in the root of any website. It decides whether crawlers are permitted or forbidden access to the web site.For example, the site admin can forbid crawlers to visit a certain folder (and all the files therein contained) or to crawl a specific file, usually to prevent those files being indexed by other search engines.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Robots.txt"
  },
  {
    "term": "Representation header",
    "def": "A representation header is an HTTP header that describes the particular representation of the resource sent in an HTTP message body.\n  Representations are different forms of a particular resource.\n  For example, the same data might be formatted as a particular media type such as XML or JSON, localized to a particular written language or geographical region, and/or compressed or otherwise encoded for transmission.\n  The underlying resource is the same in each case, but its representation is different.\nClients specify the formats that they prefer to be sent during content negotiation (using Accept-* headers), and the representation headers tell the client the format of the selected representation they actually received.\n  Representation headers may be present in both HTTP request and response messages.\n  If sent as a response to a HEAD request, they describe the body content that would be selected if the resource was actually requested.\nRepresentation headers include: Content-Type, Content-Encoding, Content-Language, and Content-Location.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Representation_header"
  },
  {
    "term": "RTSP: Real-time streaming protocol",
    "def": "Real-time streaming protocol (RTSP) is a network protocol that controls how the streaming of a media should occur between a server and a client. Basically, RTSP is the protocol that describes what happens when you click \"Pause\"/\"Play\" when streaming a video. If your computer were a remote control and the streaming server a television, RTSP would describe how the instruction of the remote control affects the TV.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/RTSP"
  },
  {
    "term": "RIL",
    "def": "RIL (Radio Interface Layer) is a mobile operating system component which communicates between the device's software and the device's phone, radio, or modem hardware.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/RIL"
  },
  {
    "term": "Round Trip Time (RTT)",
    "def": "Round Trip Time (RTT) is the length time it takes for a data packet to be sent to a destination plus the time it takes for an acknowledgment of that packet to be received back at the origin. The RTT between a network and server can be determined by using the ping command.In the above example, the average round trip time is shown on the final line as 26.8ms.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Round_Trip_Time_(RTT)"
  },
  {
    "term": "RTL (Right to Left)",
    "def": "RTL (Right To Left) is a locale property indicating that text is written from right to left.For example, the he locale (for Hebrew) specifies right-to-left. Arabic (ar) is another common language written RTL.The opposite of RTL, LTR (Left To Right) is used in other languages, including English (en, en-US, en-GB, etc.), Spanish (es), and French (fr).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/rtl"
  },
  {
    "term": "Secure Context",
    "def": "A secure context is a Window or Worker in which certain minimum standards of authentication and confidentiality are met. Many Web APIs and features are only accessible in secure contexts, reducing the opportunity for misuse by malicious code.For more information see: Web > Security > Secure Contexts.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Secure_Context"
  },
  {
    "term": "RTP (Real-time Transport Protocol) and SRTP (Secure RTP)",
    "def": "The Real-time Transport Protocol (RTP) is a network protocol which described how to transmit various media (audio, video) from one endpoint to another in a real-time fashion. RTP is suitable for video-streaming application, telephony over IP like Skype and conference technologies.The secure version of RTP, SRTP, is used by WebRTC, and uses encryption and authentication to minimize the risk of denial-of-service attacks and security breaches.RTP is rarely used alone; instead, it is used in conjunction with other protocols like RTSP and SDP.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/RTP"
  },
  {
    "term": "Routers",
    "def": "There are three definitions for routers on the web:For network layer context:For SPA in application layer context, most of the popular SPA frameworks has its routing library:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/routers"
  },
  {
    "term": "Real User Monitoring (RUM)",
    "def": "Real User Monitoring or RUM measures the performance of a page from real users' machines. Generally, a third party script injects a script on each page to measure and report page load data for every request made. This technique monitors an application's actual user interactions. In RUM, the third party script collects performance metrics from the real users' browsers. RUM helps identify how an application is being used, including the geographic distribution of users and the impact of that distribution on the end user experience.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Real_User_Monitoring"
  },
  {
    "term": "Search engine",
    "def": "A search engine is a software system that collects information from the World Wide Web and presents it to users who are looking for specific information.A search engine conducts the following processes:The most popular search engine is Google. Other top search engines include Yahoo!, Bing, Baidu, and AOL.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Search_engine"
  },
  {
    "term": "RTCP (RTP Control Protocol)",
    "def": "The RTP Control Protocol (RTCP) is a partner to the RTP protocol. RTCP is used to provide control and statistical information about an RTP media streaming session.This lets control and statistics packets be separated logically and functionally from the media streaming while using the underlying packet delivery layer to transmit the RTCP signals as well as the RTP and media contents.RTCP periodically transmits control packets to all of an RTP session's participants, using the same mechanism that is being used to transmit the data packets. That underlying protocol handles the multiplexing of the data and control packets and may use separate network ports for each type of packet.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/RTCP"
  },
  {
    "term": "Random Number Generator",
    "def": "A PRNG (pseudorandom number generator) is an algorithm that outputs numbers in a complex, seemingly unpredictable pattern. Truly random numbers (say, from a radioactive source) are utterly unpredictable, whereas all algorithms are predictable, and a PRNG returns the same numbers when passed the same starting parameters or seed.PRNGs can be used for a variety of applications, such as games.A cryptographically secure PRNG is a PRNG with certain extra properties making it suitable for use in cryptography. These include:Most PRNGs are not cryptographically secure.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/RNG"
  },
  {
    "term": "Scope",
    "def": "The current context of execution. The context in which values and expressions are \"visible\" or can be referenced. If a variable or other expression is not \"in the current scope,\" then it is unavailable for use. Scopes can also be layered in a hierarchy, so that child scopes have access to parent scopes, but not vice versa.A function serves as a closure in JavaScript, and thus creates a scope, so that (for example) a variable defined exclusively within the function cannot be accessed from outside the function or within other functions. For instance, the following is invalid:However, the following code is valid due to the variable being declared outside the function, making it global:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Scope"
  },
  {
    "term": "SMTP",
    "def": "SMTP (Simple Mail Transfer Protocol) is a protocol used to send a new email. Like POP and NNTP, it is a state machine-driven protocol.The protocol is relatively straightforward. Primary complications include supporting various authentication mechanisms (GSSAPI, CRAM-MD5, NTLM, MSN, AUTH LOGIN, AUTH PLAIN, etc.), handling error responses, and falling back when authentication mechanisms fail (e.g., the server claims to support a mechanism, but doesn't).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/SMTP"
  },
  {
    "term": "Simple response header",
    "def": "Old term for CORS-safelisted response header.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Simple_response_header"
  },
  {
    "term": "Ruby",
    "def": "Ruby is an open-source programming language. In a Web context, Ruby is often used server-side with the Ruby On Rails (ROR) framework to produce websites/apps.Ruby is also a method for annotating east Asian text in HTML documents to provide pronunciation information; see the <ruby> element.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Ruby"
  },
  {
    "term": "Shadow tree",
    "def": "A shadow tree is a tree of DOM nodes whose topmost node is a shadow root; that is, the topmost node within a shadow DOM. A shadow tree is a hidden set of standard DOM nodes which is attached to a standard DOM node that serves as a host. The hidden nodes are not directly visible using regular DOM functionality, but require the use of a special Shadow DOM API to access.Nodes within the shadow tree are not affected by anything applied outside the shadow tree, and vice versa. This provides a way to encapsulate implementation details, which is especially useful for custom elements and other advanced design paradigms.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Shadow_tree"
  },
  {
    "term": "SCTP",
    "def": "SCTP (Stream Control Transmission Protocol) is an IETF standard for a transport protocol which enables the reliable, in-order transmission of messages while offering congestion control, multi-homing, and other features to improve reliability and stability of the connection. It's used for sending traditional telephone calls over the Internet, but is also used for WebRTC data.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/SCTP"
  },
  {
    "term": "Same-origin policy",
    "def": "The same-origin policy is a critical security mechanism that restricts how a document or script loaded from one origin can interact with a resource from another origin.It helps isolate potentially malicious documents, reducing possible attack vectors.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Same-origin_policy"
  },
  {
    "term": "Screen reader",
    "def": "Screen readers are software applications that attempt to convey what is seen on a screen display in a non-visual way, usually as text to speech, but also into braille or sound icons. Screen readers are essential to people who are blind, as well as useful to people who are visually impaired, illiterate, or have a learning disability. There are some browser extension screen readers, but most screen readers operate system-wide for all user applications, not just the browser.In terms of web accessibility, most user agents provide an accessibility object model and screen readers interact with dedicated accessibility APIs, using various operating system features and employing hooking techniques.macOS comes with VoiceOver, a built-in screen reader. To access VoiceOver, go to System Preferences > Accessibility > VoiceOver. You can also toggle VoiceOver on and off with fn+command + F5. VoiceOver both reads aloud and displays content. The content read aloud is displayed in a dark grey box.Desktop/laptop screen reader users navigate websites with a keyboard or other non-pointing device. The best way to emulate use is to do the same.Just like keyboard navigation without VoiceOver, you can navigate through interactive elements using the tab key and the arrow keys:Navigating through the content of a page is done with the tab key and a series of other keys along with Control + Option keys",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Screen_reader"
  },
  {
    "term": "Speculative parsing",
    "def": "Traditionally in browsers the HTML parser ran on the main thread and was blocked after a </script> tag until the script has been retrieved from the network and executed. Some HTML parser, such as Firefox since Firefox 4, support speculative parsing off of the main thread. It parses ahead while scripts are being downloaded and executed. The HTML parser starts speculative loads for scripts, style sheets and images it finds ahead in the stream and runs the HTML tree construction algorithm speculatively. The upside is that when a speculation succeeds, there's no need to reparse the part of the incoming file that was already scanned for scripts, style sheets and images. The downside is that there's more work lost when the speculation fails.This document helps you avoid the kind of things that make speculation fail and slow down the loading of your page.To make speculative loads of linked scripts, style sheets and images successful, avoid document.write. If you use a <base> element to override the base URI of your page, put the element in the non-scripted part of the document. Don't add it via document.write() or document.createElement.Speculative tree building fails when document.write() changes the tree builder state such that the speculative state after the </script> tag no longer holds when all the content inserted by document.write() has been parsed. However, only unusual uses of document.write() cause trouble. Here are the things to avoid:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/speculative_parsing"
  },
  {
    "term": "SCM",
    "def": "SCM (Source Control Management) is a system for managing source code. Usually it refers to the use of software to handle versioning of source files. A programmer can modify source code files without being afraid of editing out useful stuff, because a SCM keeps track of how the source code has changed and who made the changes.Some SCM systems include CVS, SVN, GIT.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/SCM"
  },
  {
    "term": "Sloppy mode",
    "def": "ECMAScript 5 and later let scripts opt in to a new strict mode, which alters the semantics of JavaScript in several ways to improve its resiliency and which make it easier to understand what's going on when there are problems.The normal, non-strict mode of JavaScript is sometimes referred to as sloppy mode. This isn't an official designation, but you are likely to come across it if you spend time doing serious JavaScript code.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Sloppy_mode"
  },
  {
    "term": "SOAP",
    "def": "SOAP (Simple Object Access Protocol) is a protocol for transmitting data in XML format.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/SOAP"
  },
  {
    "term": "Serialization",
    "def": "The process whereby an object or data structure is translated into a format suitable for transferral over a network, or storage (e.g. in an array buffer or file format).In JavaScript, for example, you can serialize an object to a JSON string by calling the function JSON.stringify().CSS values are serialized by calling the function CSSStyleDeclaration.getPropertyValue().",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Serialization"
  },
  {
    "term": "Static typing",
    "def": "A statically-typed language is a language (such as Java, C, or C++) where variable types are known at compile time. In most of these languages, types must be expressly indicated by the programmer; in other cases (such as OCaml), type inference allows the programmer to not indicate their variable types.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Static_typing"
  },
  {
    "term": "State machine",
    "def": "A state machine is a mathematical abstraction used to design algorithms. A state machine reads a set of inputs and changes to a different state based on those inputs.A state is a description of the status of a system waiting to execute a transition. A transition is a set of actions to execute when a condition is fulfilled or an event received. In a state diagram, circles represent each possible state and arrows represent transitions between states.Looking at the final state, you can discern something about the series of inputs leading to that state.There are two types of basic state machines:Figure 1: Deterministic Finite State Machine\n  \nIn Figure 1, the state begins in State 1; the state changes to State 2 given input 'X', or to State 3 given input 'Y'.Figure 2: Non-Deterministic Finite State MachineIn Figure 2, given input 'X', the state can persist or change to State 2.Note that any regular expression can be represented by a state machine.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/State_machine"
  },
  {
    "term": "Responsive web design",
    "def": "Responsive Web Design (RWD) is a Web development concept focusing on making sites look and behave optimally on all personal computing devices, from desktop to mobile.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Responsive_web_design"
  },
  {
    "term": "Scroll container",
    "def": "A scroll container is created by applying overflow: scroll to a container, or overflow: auto when there is enough content to cause overflow.The scroll container allows the user to scroll through parts of the overflow region that would otherwise be clipped and hidden from view. The visible part of the scroll container is referred to as the scrollport.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Scroll_container"
  },
  {
    "term": "Secure Sockets Layer (SSL)",
    "def": "Secure Sockets Layer, or SSL, was the old standard security technology for creating an encrypted network link between a server and client, ensuring all data passed is private and secure. The current version of SSL is version 3.0, released by Netscape in 1996, and has been superseded by the Transport Layer Security (TLS) protocol.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/SSL"
  },
  {
    "term": "Self-Executing Anonymous Function",
    "def": "A JavaScript function that runs as soon as it is defined. Also known as an IIFE (Immediately Invoked Function Expression).See the IIFE glossary page linked above for more information.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Self-Executing_Anonymous_Function"
  },
  {
    "term": "SQL Injection",
    "def": "SQL injection takes advantage of Web apps that fail to validate user input. Hackers can maliciously pass SQL commands through the Web app for execution by a backend database.SQL injection can gain unauthorized access to a database or to retrieve information directly from the database. Many data breaches are due to SQL injection.\n  \nAfter entering username and password, behind the GUI the SQL queries work as follows:Now suppose User enters the Username: admin and Password: passwd123, so after clicking on the Log in button, SQL query will run as follows:If the credentials are correct, then the user is allowed to log in, so it's a very simple (and therefore insecure) mechanism. Hackers use this insecurity to gain unauthorized access.Hackers use a simple string called a Magical String, for example:Username: adminPassword: anything 'or'1'='1After clicking on the login button, the SQL query will work as follows:Just take a closer look at the above query's password section.The password is not 'anything', hence password=anything results in FALSE, but '1'='1' is a TRUE statement and hence returns a TRUE value. Finally, due to the OR operator, the value ( FALSE OR TRUE ) is TRUE, so authentication bypasses successfully. Just due to a simple string (Magical String) the entire database is compromised.Before executing the queries for the user credentials, make some changes like the following:So due to (1) each single quote (') in the input string is replaced with double quotes (\"), and due to (2) before every (') it adds (/). The revised magical string fails to bypass the authentication, and your database stays secure.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/SQL_Injection"
  },
  {
    "term": "RTF",
    "def": "RTF (Rich Text Format) is a plain-text-based file format with support for formatting instructions (like bold or italic).Three programmers in the Microsoft Word team created RTF in the 1980s, and Microsoft continued to develop the format until 2008. However, many word-processing programs can still read and write RTF.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/RTF"
  },
  {
    "term": "Statement",
    "def": "In a computer programming language, a statement is a line of code commanding a task. Every program consists of a sequence of statements.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Statement"
  },
  {
    "term": "STUN",
    "def": "STUN (Session Traversal Utilities for NAT) is an auxiliary protocol for transmitting data around a NAT (Network Address Translator). STUN returns the IP address, port, and connectivity status of a networked computer behind a NAT.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/STUN"
  },
  {
    "term": "SPA (Single-page application)",
    "def": "An SPA (Single-page application) is a web app implementation that loads only a single web document, and then updates the body content of that single document via JavaScript APIs such as XMLHttpRequest and Fetch when different content is to be shown.This therefore allows users to use websites without loading whole new pages from the server, which can result in performance gains and a more dynamic experience, with some tradeoff disadvantages such as SEO, more effort required to maintain state, implement navigation, and do meaningful performance monitoring.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/SPA"
  },
  {
    "term": "Texel",
    "def": "A Texel is a single-pixel within a texture map, which is an image that gets used (in whole or in part) as the image presented on a polygon's surface within a 3D rendered image. It is not to be confused with pixel which is the unit of screen space. This is one of the main differences between Texel's and pixels, pixels are image data. Texel components are made up of subjective data, therefore they can be an image as well as a depth map.The process of mapping the appropriate Texel's to their corresponding points on a polygon is called texture mapping, which is a stage of the process of rendering a 3D image for display. Texture mapping is typically done prior to lighting the scene; however, in WebGL, lighting is performed as part of the texture mapping process.Textures are characterized by collections of Texel's, as how images are characterized by collections of pixels. When texture mapping occurs the renderer maps Texel's to the appropriate pixels.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Texel"
  },
  {
    "term": "Slug",
    "def": "A Slug is the unique identifying part of a web address, typically at the end of the URL. In the context of MDN, it is the portion of the URL following \"<locale>/docs/\".It may also just be the final component when a new document is created under a parent document; for example, this page's slug is Glossary/Slug .",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Slug"
  },
  {
    "term": "SEO",
    "def": "SEO (Search Engine Optimization) is the process of making a website more visible in search results, also termed improving search rankings.Search engines crawl the web, following links from page to page, and index the content found. When you search, the search engine displays the indexed content. Crawlers follow rules. If you follow those rules closely when doing SEO for a website, you give the site the best chances of showing up among the first results, increasing traffic and possibly revenue (for ecommerce and ads).Search engines give some guidelines for SEO, but big search engines keep result ranking as a trade secret. SEO combines official search engine guidelines, empirical knowledge, and theoretical knowledge from science papers or patents.SEO methods fall into three broad classes:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/SEO"
  },
  {
    "term": "Server",
    "def": "A server is a software or hardware offering a service to a user, usually referred to as client. A hardware server is a shared computer on a network, usually powerful and housed in a data center. A software server (often running on a hardware server) is a program that provides services to client programs or a user interface to human clients.Services are provided generally over local area networks or wide area networks such as the internet. A client program and server program traditionally connect by passing messages encoded using a protocol over an API.For example:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Server"
  },
  {
    "term": "Smoke Test",
    "def": "A smoke test consists of functional or unit tests of critical software functionality. Smoke testing comes before further, in-depth testing.Smoke testing answers questions likeIf this basic functionality fails, there is no point investing time in more detailed QA work at this stage.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Smoke_Test"
  },
  {
    "term": "SLD",
    "def": "An SLD (Second Level Domain) is the part of the domain name that is located right before a Top Level Domain (TLD). For example, in mozilla.org the SLD is mozilla and the TLD is org.See Second Level Domain for more information.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/SLD"
  },
  {
    "term": "Session Hijacking",
    "def": "Session hijacking occurs when an attacker takes over a valid session between two computers. The attacker steals a valid session ID in order to break into the system and snoop data.Most authentication occurs only at the start of a TCP session. In TCP session hijacking, an attacker gains access by taking over a TCP session between two machines in mid session.\n  \n",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Session_Hijacking"
  },
  {
    "term": "Symmetric-key cryptography",
    "def": "Symmetric-key cryptography is a term used for cryptographic algorithms that use the same key for encryption and for decryption. The key is usually called a \"symmetric key\" or a \"secret key\".This is usually contrasted with public-key cryptography, in which keys are generated in pairs and the transformation made by one key can only be reversed using the other key.Symmetric-key algorithms should be secure when used properly and are highly efficient, so they can be used to encrypt large amounts of data without having a negative effect on performance.Most symmetric-key algorithms currently in use are block ciphers: this means that they encrypt data one block at a time. The size of each block is fixed and determined by the algorithm: for example AES uses 16-byte blocks. Block ciphers are always used with a mode, which specifies how to securely encrypt messages that are longer than the block size. For example, AES is a cipher, while CTR, CBC, and GCM are all modes. Using an inappropriate mode, or using a mode incorrectly, can completely undermine the security provided by the underlying cipher.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Symmetric-key_cryptography"
  },
  {
    "term": "Signature",
    "def": "The term signature can have several meanings depending on the context. It may refer to:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Signature"
  },
  {
    "term": "Speed index",
    "def": "Speed Index (SI) is a page load performance metric that shows you how quickly the contents of a page are visibly populated. It is the average time at which visible parts of the page are displayed. Expressed in milliseconds, and dependent on the size of the viewport, the lower the score, the better.\n  \nThe calculation calculates what percent of the page is visually complete at every 100ms interval until the page is visually complete. The overall score, the above the fold metric, is a sum of the individual 10 times per second intervals of the percent of the screen that is not-visually complete**.**",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Speed_index"
  },
  {
    "term": "Stringifier",
    "def": "An object's stringifier is any attribute or method that is defined to provide a textual representation of the object for use in situations where a string is expected.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Stringifier"
  },
  {
    "term": "Strict mode",
    "def": "JavaScript's strict mode is a way to opt in to a restricted variant of JavaScript, thereby implicitly opting-out of \"sloppy mode\". Strict mode isn't just a subset: it intentionally has different semantics from normal code.Strict mode for an entire script is invoked by including the statement \"use strict\"; before any other statements.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/strict_mode"
  },
  {
    "term": "Simple header",
    "def": "Old term for CORS-safelisted request header.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Simple_header"
  },
  {
    "term": "Synchronous",
    "def": "Synchronous refers to real-time communication where each party receives (and if necessary, processes and replies to) messages instantly (or as near to instantly as possible).A human example is the telephone — during a telephone call you tend to respond to another person immediately.Many programming commands are also synchronous — for example when you type in a calculation, the environment will return the result to you instantly, unless you program it not to.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Synchronous"
  },
  {
    "term": "SQL",
    "def": "SQL (Structured Query Language) is a descriptive computer language designed for updating, retrieving, and calculating data in table-based databases.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/SQL"
  },
  {
    "term": "SIMD",
    "def": "SIMD (pronounced \"sim-dee\") is short for Single Instruction/Multiple Data which is one classification of computer architectures. SIMD allows one same operation to be performed on multiple data points resulting in data level parallelism and thus performance gains — for example, for 3D graphics and video processing, physics simulations or cryptography, and other domains.See also SISD for a sequential architecture with no parallelism in either the instructions or the data sets.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/SIMD"
  },
  {
    "term": "SGML",
    "def": "The Standard Generalized Markup Language (SGML) is an ISO specification for defining declarative markup languages.On the web, HTML 4, XHTML, and XML are popular SGML-based languages. It is worth noting that since its fifth edition, HTML is no longer SGML-based and has its own parsing rules.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/SGML"
  },
  {
    "term": "Site",
    "def": "The site of a piece of web content is determined by the registrable domain of the host within the origin. This is computed by consulting a Public Suffix List to find the portion of the host which is counted as the public suffix (e.g. com, org or co.uk).The concept of a site is used in SameSite cookies, as well as a web application's Cross-Origin Resource Policy.These are the same site because the registrable domain of mozilla.org is the same (different host and files path don't matter):These are the same site because scheme and port are not relevant:These are not same site because the registrable domain of the two URLs differs:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Site"
  },
  {
    "term": "Site map",
    "def": "A site map or sitemap is a list of pages of a web site.Structured listings of a site's page help with search engine optimization, providing a link for web crawlers such as search engines to follow. Site maps also help users with site navigation by providing an overview of a site's content in a single glance.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Site_map"
  },
  {
    "term": "Style origin",
    "def": "In CSS, there are three categories of sources for style changes. These categories are called style origins. They are the user agent origin, user origin, and the author origin.The style origins are used to determine where to stop rolling back (or backtracking through) the cascade of styles that have been applied to an element when removing styles, such as when using the unset or revert keywords.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Style_origin"
  },
  {
    "term": "Snap positions",
    "def": "A scroll container may set snap positions — points that the scrollport will stop moving at after a scrolling operation is completed. This allows a scrolling experience that gives the effect of paging through content rather than needing to drag content into view.Defining Snap positions on the scroll container was introduced in the CSS Scroll Snap specification.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Snap_positions"
  },
  {
    "term": "SVN",
    "def": "Apache Subversion (SVN) is a free source control management (SCM) system. It allows developers to keep a history of text and code modifications. Although SVN can also handle binary files, we do not recommend that you use it for such files.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/SVN"
  },
  {
    "term": "Shallow copy",
    "def": "A shallow copy of an object is a copy whose properties share the same references (point to the same underlying values) as those of the source object from which the copy was made. As a result, when you change either the source or the copy, you may also cause the other object to change too — and so, you may end up unintentionally causing changes to the source or copy that you don't expect. That behavior contrasts with the behavior of a deep copy, in which the source and copy are completely independent.For shallow copies, it's important to understand that selectively changing the value of a shared property of an existing element in an object is different from assigning a completely new value to an existing element.For example, if in a shallow copy named copy of an array object, the value of the copy[0] element is {\"list\":[\"butter\",\"flour\"]}, and you do copy[0].list = [\"oil\",\"flour\"], then the corresponding element in the source object will change, too — because you selectively changed a property of an object shared by both the source object and the shallow copy.However, if instead you do copy[0] = {\"list\":[\"oil\",\"flour\"]}, then the corresponding element in the source object will not change — because in that case, you're not just selectively changing a property of an existing array element that the shallow copy shares with the source object; instead you're actually assigning a completely new value to that copy[0] array element, just in the shallow copy.In JavaScript, all standard built-in object-copy operations (spread syntax, Array.prototype.concat(), Array.prototype.slice(), Array.from(), Object.assign(), and Object.create()) create shallow copies rather than deep copies.Consider the following example, in which an ingredients_list array object is created, and then an ingredients_list_copy object is created by copying that ingredients_list object.Changing the value of the list property in ingredients_list_copy will also cause the list property to change in the ingredients_list source object.Assigning a completely new value to the first element in ingredients_list_copy will not cause any change to the first element in the ingredients_list source object.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Shallow_copy"
  },
  {
    "term": "SVG",
    "def": "Scalable Vector Graphics (SVG) is a 2D vector image format based on an XML syntax.The W3C began work on SVG in the late 1990s, but SVG only became popular when Internet Explorer 9 came out with SVG support. All major browsers now support SVG.Based on an XML syntax, SVG can be styled with CSS and made interactive using JavaScript. HTML5 now allows direct embedding of SVG tags in an HTML document.As a vector image format, SVG graphics can scale infinitely, making them invaluable in responsive design, since you can create interface elements and graphics that scale to any screen size. SVG also provides a useful set of tools, such as clipping, masking, filters, and animations.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/SVG"
  },
  {
    "term": "Regular expression",
    "def": "Regular expressions (or regex) are rules that govern which sequences of characters come up in a search.Regular expressions are implemented in various languages, but the best-known implementation is the Perl Implementation, which has given rise to its own ecosystem of implementations called PCRE (Perl Compatible Regular Expression). On the Web, JavaScript provides another regex implementation through the RegExp object.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Regular_expression"
  },
  {
    "term": "Second-level Domain",
    "def": "A Second Level Domain (SLD) is the part of the domain name that is located right before a Top Level Domain (TLD).For example, in mozilla.org the SLD is mozilla and the TLD is org.A domain name is not limited to a TLD and an SLD. Additional subdomains can be created in order to provide additional information about various functions of a server or to delimit areas under the same domain. For example, www is a commonly used subdomain to indicate the domain points to a web server.As another example, in developer.mozilla.org, the developer subdomain is used to specify that the subdomain contains the developer section of the Mozilla website.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Second-level_Domain"
  },
  {
    "term": "Syntax",
    "def": "Syntax specifies the required combination and sequence of characters making up correctly structured code. Syntax generally includes grammar and the rules that apply to writing it, such as indentation requirements in Python.Syntax varies from language to language (e.g., syntax is different in HTML and JavaScript). Although languages can share few similarities in terms of their syntaxes for example \"operand operator operand\" rule in javaScript and python. This does not mean the two languages share similarities with syntax.Syntax applies both to programming languages (commands to the computer) and markup languages (document structure information) alike.Syntax only governs ordering and structure; the instructions must also be meaningful, which is the province of semantics.Code must have correct syntax in order to compile correctly, otherwise a syntax error occurs. Even small errors, like a missing parenthesis, can stop source code from compiling successfully.Frameworks are said to have a \"clean\" syntax if they produce simple, readable, concise results. If a codebase uses \"a lot of syntax\", it requires more characters to achieve the same functionality.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Syntax"
  },
  {
    "term": "SDP",
    "def": "SDP (Session Description Protocol) is the standard describing a peer-to-peer connection. SDP contains the codec, source address, and timing information of audio and video.Here is a typical SDP message:SDP is never used alone, but by protocols like RTP and RTSP. SDP is also as component of WebRTC, which uses SDP as a way of describing a session.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/SDP"
  },
  {
    "term": "SISD",
    "def": "SISD is short for Single Instruction/Single Data which is one classification of computer architectures. In SISD architecture, a single processor executes a single instruction and operates on a single data point in memory.See also SIMD for a parallel architecture that allows one same operation to be performed on multiple data points.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/SISD"
  },
  {
    "term": "TCP handshake",
    "def": "TCP (Transmission Control Protocol) uses a three-way handshake (aka TCP-handshake, three message handshake, and/or SYN-SYN-ACK) to set up a TCP/IP connection over an IP based network.The three messages transmitted by TCP to negotiate and start a TCP session are nicknamed SYN, SYN-ACK, and ACK for SYNchronize, SYNchronize-ACKnowledgement, and ACKnowledge respectively. The three message mechanism is designed so that two computers that want to pass information back and forth to each other can negotiate the parameters of the connection before transmitting data such as HTTP browser requests.The host, generally the browser, sends a TCP SYNchronize packet to the server. The server receives the SYN and sends back a SYNchronize-ACKnowledgement. The host receives the server's SYN-ACK and sends an ACKnowledge. The server receives ACK and the TCP socket connection is established.This handshake step happens after a DNS lookup and before the TLS handshake, when creating a secure connection. The connection can be terminated independently by each side of the connection via a four-way handshake.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/TCP_handshake"
  },
  {
    "term": "Table Grid Box",
    "def": "The Table Grid Box is a block level box which contains all of the table internal boxes, excluding the caption. The box which includes the caption is referred to as the Table Wrapper Box.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Table_Grid_Box"
  },
  {
    "term": "Thread",
    "def": "Thread in computer science is the execution of running multiple tasks or programs at the same time. Each unit capable of executing code is called a thread.The main thread is the one used by the browser to handle user events, render and paint the display, and to run the majority of the code that comprises a typical web page or app. Because these things are all happening in one thread, a slow website or app script slows down the entire browser; worse, if a site or app script enters an infinite loop, the entire browser will hang. This results in a frustrating, sluggish (or worse) user experience.However, modern JavaScript offers ways to create additional threads, each executing independently while possibly communicating between one another. This is done using technologies such as web workers, which can be used to spin off a sub-program which runs concurrently with the main thread in a thread of its own. This allows slow, complex, or long-running tasks to be executed independently of the main thread, preserving the overall performance of the site or app—as well as that of the browser overall. This also allows individuals to take advantage of modern multi-core processors.A special type of worker, called a service worker, can be created which can be left behind by a site—with the user's permission—to run even when the user isn't currently using that site. This is used to create sites capable of notifying the user when things happen while they're not actively engaged with a site. Such as notifying a user they have received new email even though they're not currently logged into their mail service.Overall it can be observed these threads within our operating system are extremely helpful. They help minimize the context switching time, enables more efficient communication and allows further use of the multiprocessor architecture.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Thread"
  },
  {
    "term": "Transport Layer Security (TLS)",
    "def": "Transport Layer Security (TLS), formerly known as Secure Sockets Layer (SSL), is a protocol used by applications to communicate securely across a network, preventing tampering with and eavesdropping on email, web browsing, messaging, and other protocols. Both SSL and TLS are client / server protocols that ensure communication privacy by using cryptographic protocols to provide security over a network. When a server and client communicate using TLS, it ensures that no third party can eavesdrop or tamper with any message.All modern browsers support the TLS protocol, requiring the server to provide a valid digital certificate confirming its identity in order to establish a secure connection. It is possible for both the client and server to mutually authenticate each other, if both parties provide their own individual digital certificates.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/TLS"
  },
  {
    "term": "WindowProxy",
    "def": "A WindowProxy object is a wrapper for a Window object. A WindowProxy object exists in every browsing context. All operations performed on a WindowProxy object will also be applied to the underlying Window object it currently wraps. Therefore, interacting with a WindowProxy object is almost identical to directly interacting with a Window object. When a browsing context is navigated, the Window object its WindowProxy wraps is changed.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/WindowProxy"
  },
  {
    "term": "Visual Viewport",
    "def": "The portion of the viewport that is currently visible is called the visual viewport. This can be smaller than the layout viewport, such as when the user has pinched-zoomed. The visual viewport is the visual portion of a screen excluding on-screen keyboards, areas outside of a pinch-zoom area, or any other on-screen artifact that doesn't scale with the dimensions of a page.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Visual_Viewport"
  },
  {
    "term": "SRI",
    "def": "Subresource Integrity (SRI) is a security feature that enables browsers to verify that files they fetch (for example, from a CDN) are delivered without unexpected manipulation. It works by allowing you to provide a cryptographic hash that a fetched file must match.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/SRI"
  },
  {
    "term": "Whitespace",
    "def": "Whitespace refers to characters which are used to provide horizontal or vertical space between other characters. Whitespace is often used to separate tokens in HTML, CSS, JavaScript, and other computer languages.Whitespace characters and their usage vary among languages.The Infra Living Standard defines five characters as \"ASCII whitespace\": U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, and U+0020 SPACE.The ECMAScript Language Specification defines several Unicode codepoints as \"white space\": U+0009 CHARACTER TABULATION <TAB>, U+000B LINE TABULATION <VT>, U+000C FORM FEED <FF>, U+0020 SPACE <SP>, U+00A0 NO-BREAK SPACE <NBSP>, U+FEFF ZERO WIDTH NO-BREAK SPACE <ZWNBSP>, and any other Unicode \"Space_Separator\" code points <USP>.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Whitespace"
  },
  {
    "term": "Stylesheet",
    "def": "A stylesheet is a set of CSS rules used to control the layout and design of a webpage or document. Internal stylesheets are placed inside a <style> element inside the <head> of a web document, and external stylesheets are placed inside a separate .css file, which is applied to a document by referencing the file inside a <link> element in the document's head.External stylesheets are generally preferred because they allow you to control the styling of multiple pages from a single place, rather than having to repeat the CSS across each page.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Stylesheet"
  },
  {
    "term": "Symbol",
    "def": "In JavaScript, Symbol is a primitive value.A value having the data type Symbol can be referred to as a \"Symbol value\". In a JavaScript runtime environment, a symbol value is created by invoking the function Symbol, which dynamically produces an anonymous, unique value. A symbol may be used as an object property.Symbol can have an optional description, but for debugging purposes only.A Symbol value represents a unique identifier. For example:Symbol type is a new feature in ECMAScript 2015. There is no ECMAScript 5 equivalent for Symbol.In some programming languages, the symbol data type is referred to as an \"atom.\"Most values in JavaScript support implicit conversion to a string. For instance, we can alert almost any value, and it will work. Symbols are special. They don't auto-convert.For example:That's a \"language guard\" against messing up, because strings and symbols are fundamentally different, and should not occasionally convert one into another.If you really want to show a symbol, we need to call .toString() on it.Or you can use the symbol.description property to get its description:The Symbol class has constants for so-called well-known symbols. These symbols let you configure how JS treats an object, by using them as property keys.Examples of well-known symbols are: Symbol.iterator for array-like objects, or Symbol.search for string objects.They are listed in the specification in the Well-known symbols table:There is a global symbol registry holding all available symbols. The methods that access the registry are Symbol.for() and Symbol.keyFor(); these mediate between the global symbol table (or \"registry\") and the run-time environment. The global symbol registry is mostly built by JavaScript's compiler infrastructure, and the global symbol registry's content is not available to JavaScript's run-time infrastructure, except through these reflective methods.The method Symbol.for(tokenString) returns a symbol value from the registry, and Symbol.keyFor(symbolValue) returns a token string from the registry; each is the other's inverse, so the following is true:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Symbol"
  },
  {
    "term": "Syntax error",
    "def": "An exception caused by the incorrect use of a pre-defined syntax. Syntax errors are detected while compiling or parsing source code.For example, if you leave off a closing brace (}) when defining a JavaScript function, you trigger a syntax error. Browser development tools display JavaScript and CSS syntax errors in the console.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Syntax_error"
  },
  {
    "term": "Shim",
    "def": "A shim is a piece of code used to correct the behavior of code that already exists, usually by adding new API that works around the problem. This differs from a polyfill, which implements a new API that is not supported by the stock browser as shipped.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Shim"
  },
  {
    "term": "WHATWG",
    "def": "The WHATWG (Web Hypertext Application Technology Working Group) is a community that maintains and develops web standards, including DOM, Fetch, and HTML. Employees of Apple, Mozilla, and Opera established WHATWG in 2004.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/WHATWG"
  },
  {
    "term": "String",
    "def": "In any computer programming language, a string is a sequence of characters used to represent text.In JavaScript, a String is one of the primitive values and the String object is a wrapper around a String primitive.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/String"
  },
  {
    "term": "Semantics",
    "def": "In programming, Semantics refers to the meaning of a piece of code — for example \"what effect does running that line of JavaScript have?\", or \"what purpose or role does that HTML element have\" (rather than \"what does it look like?\".)In JavaScript, consider a function that takes a string parameter, and returns an <li> element with that string as its textContent. Would you need to look at the code to understand what the function did if it was called build('Peach'), or createLiWithContent('Peach')?In CSS, consider styling a list with li elements representing different types of fruits. Would you know what part of the DOM is being selected with div > ul > li, or .fruits__item?In HTML, for example, the <h1> element is a semantic element, which gives the text it wraps around the role (or meaning) of \"a top level heading on your page.\"By default, most browser's user agent stylesheet will style an <h1> with a large font size to make it look like a heading (although you could style it to look like anything you wanted).On the other hand, you could make any element look like a top level heading. Consider the following:This will render it to look like a top level heading, but it has no semantic value, so it will not get any extra benefits as described above. It is therefore a good idea to use the right HTML element for the right job.HTML should be coded to represent the data that will be populated and not based on its default presentation styling. Presentation (how it should look), is the sole responsibility of CSS.Some of the benefits from writing semantic markup are as follows:When approaching which markup to use, ask yourself, \"What element(s) best describe/represent the data that I'm going to populate?\" For example, is it a list of data?; ordered, unordered?; is it an article with sections and an aside of related information?; does it list out definitions?; is it a figure or image that needs a caption?; should it have a header and a footer in addition to the global site-wide header and footer?; etc.These are some of the roughly 100 semantic elements available:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Semantics"
  },
  {
    "term": "Static method",
    "def": "A static method (or static function) is a method defined as a member of an object but is accessible directly from an API object's constructor, rather than from an object instance created via the constructor.In a Web API, a static method is one which is defined by an interface but can be called without instantiating an object of that type first.Methods called on object instances are called instance methods.In the Notifications API, the Notification.requestPermission() method is called on the actual Notification constructor itself — it is a static method:The Notification.close() method on the other hand, is an instance method — it is called on an specific notification object instance to close the system notification it represents:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Static_method"
  },
  {
    "term": "Stacking context",
    "def": "Stacking context refers to how elements on a webpage appear to sit on top of other elements, just as you can arrange index cards on your desk to lie side-by-side or overlap each other.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Stacking_context"
  },
  {
    "term": "SMPTE (Society of Motion Picture and Television Engineers)",
    "def": "The Society of Motion Picture and Television Engineers (SMPTE) is the professional association of engineers and scientists that develop and define standards and technologies used to create, broadcast, store, and present entertainment media.For example, SMPTE defines the standards used for digital cinema used by modern digital movie theaters.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/SMPTE"
  },
  {
    "term": "Trident",
    "def": "Trident (or MSHTML) was a layout engine that powered Internet Explorer. A Trident fork called EdgeHTML replaced Trident in Internet Explorer's successor, Edge.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Trident"
  },
  {
    "term": "XForms",
    "def": "XForms is a convention for building Web forms and processing form data in the XML format.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/XForms"
  },
  {
    "term": "TURN",
    "def": "TURN (Traversal Using Relays around NAT) is a protocol enabling a computer to receive and send data from behind a Network Address Translator (NAT) or firewall. TURN is used by WebRTC to allow any two devices on the Internet to enter a peer-to-peer connection.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/TURN"
  },
  {
    "term": "Type coercion",
    "def": "Type coercion is the automatic or implicit conversion of values from one data type to another (such as strings to numbers). Type conversion is similar to type coercion because they both convert values from one data type to another with one key difference — type coercion is implicit whereas type conversion can be either implicit or explicit.In the above example, JavaScript has coerced the 9 from a number into a string and then concatenated the two values together, resulting in a string of 59. JavaScript had a choice between a string or a number and decided to use a string.The compiler could have coerced the 5 into a number and returned a sum of 14, but it did not. To return this result, you'd have to explicitly convert the 5 to a number using the Number() method:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Type_coercion"
  },
  {
    "term": "TTL",
    "def": "Time To Live (TTL) can refer to either the lifetime of a packet in a network, or the expiry time of cached data.In networking, the TTL, embedded in the packet, is a usually defined as a number of hops or as an expiration timestamp after which the packet is dropped. It provides a way to avoids network congestion, but releasing packets after they roamed the network too long.In the context of caching, TTL (as an unsigned 32-bit integer) being a part of the HTTP response header or the DNS query, indicates the amount of time in seconds during which the resource can be cached by the requester.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/TTL"
  },
  {
    "term": "Time to first byte",
    "def": "Time to First Byte (TTFB) refers to the time between the browser requesting a page and when it receives the first byte of information from the server. This time includes DNS lookup and establishing the connection using a TCP handshake and SSL handshake if the request is made over https.TTFB is the time it takes between the start of the request and the start of the response, in milliseconds:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/time_to_first_byte"
  },
  {
    "term": "Wrapper",
    "def": "In programming languages such as JavaScript, a wrapper is a function that is intended to call one or more other functions, sometimes purely for convenience, and sometimes adapting them to do a slightly different task in the process.For example, SDK Libraries for AWS are examples of wrappers.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Wrapper"
  },
  {
    "term": "UTF-8",
    "def": "UTF-8 (UCS Transformation Format 8) is the World Wide Web's most common character encoding. Each character is represented by one to four bytes. UTF-8 is backward-compatible with ASCII and can represent any standard Unicode character.The first 128 UTF-8 characters precisely match the first 128 ASCII characters (numbered 0-127), meaning that existing ASCII text is already valid UTF-8. All other characters use two to four bytes. Each byte has some bits reserved for encoding purposes. Since non-ASCII characters require more than one byte for storage, they run the risk of being corrupted if the bytes are separated and not recombined.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/UTF-8"
  },
  {
    "term": "User agent",
    "def": "A user agent is a computer program representing a person, for example, a browser in a Web context.Besides a browser, a user agent could be a bot scraping webpages, a download manager, or another app accessing the Web. Along with each request they make to the server, browsers include a self-identifying User-Agent HTTP header called a user agent (UA) string. This string often identifies the browser, its version number, and its host operating system.Spam bots, download managers, and some browsers often send a fake UA string to announce themselves as a different client. This is known as user agent spoofing.The user agent string can be accessed with JavaScript on the client side using the NavigatorID.userAgent property.A typical user agent string looks like this: \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:35.0) Gecko/20100101 Firefox/35.0\".",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/User_agent"
  },
  {
    "term": "UX",
    "def": "UX is an acronym that stands for User eXperience. It is the study of the interaction between users and a system. Its goal is to make a system easy to interact with from the user's point of view.The system can be any kind of product or application that an end user is meant to interact with. UX studies undertaken on a web page for example can demonstrate whether it is easy for users to understand the page, navigate to different areas, and complete common tasks, and where such processes could have less friction.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/UX"
  },
  {
    "term": "Telnet",
    "def": "Telnet is a command line tool and an underlying TCP/IP protocol for accessing remote computers.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Telnet"
  },
  {
    "term": "Type",
    "def": "Type is a characteristic of a value affecting what kind of data it can store, and the structure that the data will adhere to. For example, a boolean Data Type can hold only a true or false value at any given time, whereas a string has the ability to hold a string or a sequence of characters, a number can hold numerical values of any kind, and so on.A value's data type also affects the operations that are valid on that value. For example, a value of type number can be multiplied by another number, but not by a string - even if that string contains only a number, such as the string \"2\".Types also provides us with useful knowledge about the comparison between different values. Comparison between structured types is not always an easy assumption, as even if the previous data structure is the same, there could be inherited structures inside of the Prototype Chain.If you are unsure of the type of a value, you can use the typeof operator.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Type"
  },
  {
    "term": "TOFU",
    "def": "Trust On First Use (TOFU) is a security model in which a client needs to create a trust relationship with an unknown server. To do that, clients will look for identifiers (for example public keys) stored locally. If an identifier is found, the client can establish the connection. If no identifier is found, the client can prompt the user to determine if the client should trust the identifier.TOFU is used in the SSH protocol, in HTTP Public Key Pinning (HPKP) where the browsers will accept the first public key returned by the server, and in Strict-Transport-Security (HSTS) where a browser will obey the redirection rule.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/TOFU"
  },
  {
    "term": "Three js",
    "def": "three.js is a JavaScript-based WebGL engine that can run GPU-powered games and other graphics-powered apps straight from the browser. The three.js library provides many features and APIs for drawing 3D scenes in your browser.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Three_js"
  },
  {
    "term": "TCP",
    "def": "TCP (Transmission Control Protocol) is an important network protocol that lets two hosts connect and exchange data streams. TCP guarantees the delivery of data and packets in the same order as they were sent. Vint Cerf and Bob Kahn, who were DARPA scientists at the time, designed TCP in the 1970s.TCP's role is to ensure the packets are reliably delivered, error free. TCP has concurrence control, which means the initial requests start small, increasing in size to the levels of bandwidth the computers, servers, and network can support.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/TCP"
  },
  {
    "term": "undefined",
    "def": "undefined is a primitive value automatically assigned to variables that have just been declared, or to formal arguments for which there are no actual arguments.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/undefined"
  },
  {
    "term": "WebKit",
    "def": "WebKit is a framework that displays properly-formatted webpages based on their markup. Apple Safari depends on WebKit, and so do many mobile browsers (since WebKit is highly portable and customizable).WebKit began life as a fork of KDE's KHTML and KJS libraries, but many individuals and companies have since contributed (including KDE, Apple, Google, and Nokia).WebKit is an Apple trademark, and the framework is distributed under a BSD-form license. However, two important components fall under the LGPL: the WebCore rendering library and the JavaScriptCore engine.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/WebKit"
  },
  {
    "term": "XInclude",
    "def": "XML Inclusions (XInclude) is a W3C Recommendation to allow inclusion of XML more different sources in a more convenient fashion than XML external entities. When used in conjunction with XPointer (Firefox supports a subset of it, and is used in the code sample below), XInclude can also target just specific portions of a document for inclusion. Firefox does not support it natively, but the following function aims to allow its use with documents passed into it.The following code aims to let <xi:include> and <xi:fallback> tags (the two elements in the language) with all of the attributes of <xi:include> be included in an XML document so as to be resolvable into a single XML document.(Note that this has not been thoroughly tested for all circumstances and may not necessarily reflect the standard behavior completely.)Note also that if you wish to allow xml:base, you will need the xml:base function, and the line beginning var href = ... should become:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/XInclude"
  },
  {
    "term": "XPath",
    "def": "XPath is a query language that can access sections and content in an XML document.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/XPath"
  },
  {
    "term": "Transferable objects",
    "def": "\n  Transferable objects are objects that own resources that can be transferred from one context to another, ensuring that the resources are only available in one context at a time.\n  Following a transfer, the original object is no longer usable; it no longer points to the transferred resource, and any attempt to read or write the object will throw an exception.\n\n  Transferrable objects are commonly use to share resources that can only be safely exposed to a single JavaScript thread at a time.\n  For example, an ArrayBuffer is a transferrable object that owns a block of memory.\n  When such a buffer is transferred between threads, the associated memory resource is detached from the original buffer and attached to the buffer object created in the new thread.\n  The buffer object in the original thread is no longer usable because it no longer owns a memory resource.\n\n  Transferring may also be used when creating deep copies of objects with structuredClone().\n  Following the cloning operation, the transferred resources are moved rather than copied to the cloned object.\n\n  The mechanism used to transfer an object's resources depends on the object.\n  For example, when an ArrayBuffer is transferred between threads, the memory resource that it points to is literally moved between contexts in a fast and efficient zero-copy operation.\n  Other objects may be transferred by copying the associated resource and then deleting it from the old context.\n\n  Not all objects are transferable.\n  A list of transferable objects is provided below.\n\n  The code below demonstrates how transferring works when sending a message from a main thread to a web worker thread.\n  The Uint8Array is copied (duplicated) in the worker while its buffer is transferred.\n  After transfer any attempt to read or write uInt8Array from the main thread will throw, but you can still check the byteLength to confirm it is now zero.\nThe code below shows a structuredClone() operation where the underlying buffer is copied from the original object to the clone.The items that can be transferred are:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Transferable_objects"
  },
  {
    "term": "Web performance",
    "def": "Web performance is the objective time from when a request for content is made until the requested content is displayed in the user's browser, objective render times, and the subjective user experience of load time and runtime.Objectively, it is measurable time, in milliseconds, it takes for the web page or web application to be downloaded, painted in the user's web browser, and become responsive and interactive. It is the frames per second and times the main thread is not available for user interactions. Subjectively, it is the user's perception of whether the time it takes between the time the user requests the content and the time until the user feels the content requested is available and usable feels slow or fast.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Web_performance"
  },
  {
    "term": "WebIDL",
    "def": "WebIDL is the interface description language used to describe the data types, interfaces, methods, properties, and other components which make up a Web application programming interface (API). It uses a somewhat stylized syntax which is independent of any specific programming language, so that the underlying code which is used to build each API can be written in whatever language is most appropriate, while still being possible to map the API's components to JavaScript-compatible constructs.WebIDL is used in nearly every API specification for the Web, and due to its standard format and syntax, the programmers who create Web browsers can more easily ensure that their browsers are compatible with one another, regardless of how they choose to write the code to implement the API.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/WebIDL"
  },
  {
    "term": "WebP",
    "def": "WebP is a lossless and lossy compression image format developed by Google.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/webp"
  },
  {
    "term": "Validator",
    "def": "A validator is a program that checks for syntax errors in code. Validators can be created for any format or language, but in our context we speak of tools that check HTML, CSS, and XML.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Validator"
  },
  {
    "term": "WebRTC",
    "def": "WebRTC (Web Real-Time Communication) is an API that can be used by video-chat, voice-calling, and P2P-file-sharing Web apps.WebRTC consists mainly of these parts:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/WebRTC"
  },
  {
    "term": "Usenet",
    "def": "Usenet is an internet discussion system where each post is duplicated on many servers. The equivalent of Internet forums in its day, Usenet functioned like a bulletin board system.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Usenet"
  },
  {
    "term": "Time to interactive",
    "def": "Time to Interactive (TTI) is a non-standardized web performance 'progress' metric defined as the point in time when the last Long Task finished and was followed by 5 seconds of network and main thread inactivity.TTI, proposed by the Web Incubator Community Group in 2018, is intended to provide a metric that describes when a page or application contains useful content and the main thread is idle and free to respond to user interactions, including having event handlers registered.TTI is derived by leveraging information from the Long Tasks API. Although available in some performance monitoring tools, TTI is not a part of any official web specification at the time of writing.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Time_to_interactive"
  },
  {
    "term": "Unicode",
    "def": "Unicode is a standard character set that numbers and defines characters from the world's different languages, writing systems, and symbols.By assigning each character a number, programmers can create character encodings, to let computers store, process, and transmit any combination of languages in the same file or program.Before Unicode, it was difficult and error-prone to mix languages in the same data. For example, one character set would store Japanese characters, and another would store the Arabic alphabet. If it was not clearly marked which parts of the data were in which character set, other programs and computers would display the text incorrectly, or damage it during processing. If you've ever seen text where characters like curly quotes (“”) were replaced with gibberish like Ã‚Â£, then you've seen this problem, known as Mojibake.The most common Unicode character encoding on the Web is UTF-8. Other encodings exist, like UTF-16 or the obsolete UCS-2, but UTF-8 is recommended.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Unicode"
  },
  {
    "term": "Tag",
    "def": "In HTML, a tag is used for creating an element.The name of an HTML element is the name used in angle brackets such as <p> for paragraph. Note that the end tag's name is preceded by a slash character, </p>, and that in empty elements, the end tag is neither required nor allowed. If attributes are not mentioned, default values are used in each case.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Tag"
  },
  {
    "term": "Tree shaking",
    "def": "Tree shaking is a term commonly used within a JavaScript context to describe the removal of dead code.It relies on the import and export statements in ES2015 to detect if code modules are exported and imported for use between JavaScript files.In modern JavaScript applications, we use module bundlers (e.g., webpack or Rollup) to automatically remove dead code when bundling multiple JavaScript files into single files. This is important for preparing code that is production ready, for example with clean structures and minimal file size.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Tree_shaking"
  },
  {
    "term": "Viewport",
    "def": "A viewport represents a polygonal (normally rectangular) area in computer graphics that is currently being viewed. In web browser terms, it refers to the part of the document you're viewing which is currently visible in its window (or the screen, if the document is being viewed in full screen mode). Content outside the viewport is not visible onscreen until scrolled into view.The portion of the viewport that is currently visible is called the visual viewport. This can be smaller than the layout viewport, such as when the user has pinched-zoomed. The layout viewport remains the same, but the visual viewport became smaller.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Viewport"
  },
  {
    "term": "UUID",
    "def": "A Universally Unique Identifier (UUID) is a label used to uniquely identify a resource among all other resources of that type.\n  Computer systems generate UUIDs locally using very large random numbers.\n  In theory the IDs may not be globally unique, but the probability of duplicates is vanishingly small.\n  If systems really need absolutely unique IDs then these might be allocated by a central authority.\n\n  UUIDs are 128-bit values that are canonically represented as a 36-character string in the format 123e4567-e89b-12d3-a456-426614174000 (5 hex strings separated by hyphens).\n  There are a number of versions that differ slightly in the way they are calculated; for example, the inclusion of temporal information.\nThe formal definition can be found in: RFC4122: A Universally Unique IDentifier (UUID) URN Namespace.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/UUID"
  },
  {
    "term": "WAI",
    "def": "WAI or Web Accessibility Initiative is an effort by the World Wide Web Consortium (W3C) to improve accessibility for people with various challenges, who may need a nonstandard browser or devices.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/WAI"
  },
  {
    "term": "XHR (XMLHttpRequest)",
    "def": "XMLHttpRequest (XHR) is a JavaScript API to create AJAX requests. Its methods provide the ability to send network requests between the browser and a server.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/XHR_(XMLHttpRequest)"
  },
  {
    "term": "UI",
    "def": "User Interface (UI) is anything that facilitates the interaction between a user and a machine. In the world of computers, it can be anything from a keyboard, a joystick, a screen or a program. In case of computer software, it can be a command-line prompt, a webpage, a user input form, or the front-end of any application.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/UI"
  },
  {
    "term": "WebDAV",
    "def": "WebDAV (Web Distributed Authoring and Versioning) is an HTTP Extension that lets web developers update their content remotely from a client.WebDAV is rarely used alone, but two extensions are very common: CalDAV (remote-access calendar) and CardDAV (remote-access address book).WebDAV allows clients to",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/WebDAV"
  },
  {
    "term": "Web standards",
    "def": "Web standards are rules established by international standards bodies and defining how the Web works (and sometimes controlling the Internet as well).Several standards bodies are responsible for defining different aspects of the Web, and all the standards must coordinate to keep the Web maximally usable and accessible. Web standards also must evolve to improve the current status and adapt to new circumstances.This non-exhaustive list gives you an idea of which standards websites and network systems must conform to:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Web_standards"
  },
  {
    "term": "URN",
    "def": "URN (Uniform Resource Name) is a URI in a standard format, referring to a resource without specifying its location or whether it exists. This example comes from RFC3986: urn:oasis:names:specification:docbook:dtd:xml:4.1.2",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/URN"
  },
  {
    "term": "Variable",
    "def": "A variable is a named reference to a value. That way an unpredictable value can be accessed through a predetermined name.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Variable"
  },
  {
    "term": "Synthetic monitoring",
    "def": "Synthetic monitoring involves monitoring the performance of a page in a 'laboratory' environment, typically with automation tooling in an environment that is as consistent as possible.With a consistent baseline, synthetic monitoring is good for measuring the effects of code changes on performance. However, it doesn't necessarily reflect what users are experiencing.Synthetic Monitoring involves deploying scripts to simulate the path an end-user might take through a web application, reporting back the performance of the simulator experiences. Examples of popular synthetic monitoring tools include WebPageTest and Lighthouse. The traffic measured is not of your actual users, but rather synthetically generated traffic collecting data on page performance.Unlike RUM, synthetic monitoring provides a narrow view of performance that doesn't account for user differences, making it useful in getting basic data about an application's performance and spot-checking performance in development environments. Combined with other tools, such as network throttling, can provide excellent insight into potential problem areas.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Synthetic_monitoring"
  },
  {
    "term": "WebExtensions",
    "def": "WebExtensions is a cross-browser system for developing browser extensions in Firefox. This system provides APIs, which to a large extent are supported across different browsers like Mozilla Firefox, Google Chrome, Opera Browser, Microsoft Edge, or Apple Safari.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/WebExtensions"
  },
  {
    "term": "Server Timing",
    "def": "The Server Timing specification enables the server to communicate performance metrics from the request-response cycle to the user agent, and utilizes a JavaScript interface to allow applications to collect, process, and act on these metrics to optimize application delivery.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Server_Timing"
  },
  {
    "term": "UDP (User Datagram Protocol)",
    "def": "UDP (User Datagram Protocol) is a long standing protocol used together with IP for sending data when transmission speed and efficiency matter more than security and reliability.UDP uses a simple connectionless communication model with a minimum of protocol mechanism. UDP provides checksums for data integrity, and port numbers for addressing different functions at the source and destination of the datagram. It has no handshaking dialogues, and thus exposes the user's program to any unreliability of the underlying network; There is no guarantee of delivery, ordering, or duplicate protection. If error-correction facilities are needed at the network interface level, an application may use the Transmission Control Protocol (TCP) or Stream Control Transmission Protocol (SCTP) which are designed for this purpose.UDP is suitable for purposes where error checking and correction are either not necessary or are performed in the application; UDP avoids the overhead of such processing in the protocol stack. Time-sensitive applications often use UDP because dropping packets is preferable to waiting for packets delayed due to retransmission, which may not be an option in a real-time system.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/UDP"
  },
  {
    "term": "TLD",
    "def": "A TLD (top-level domain) is the most generic domain in the Internet's hierarchical DNS (domain name system). A TLD is the final component of a domain name, for example, \"org\" in developer.mozilla.org.ICANN (Internet Corporation for Assigned Names and Numbers) designates organizations to manage each TLD. Depending on how strict an administrating organization might be, TLD often serves as a clue to the purpose, ownership, or nationality of a website.\n  Consider an example Internet address: https://developer.mozilla.org\n  Here org is the TLD; mozilla.org is the second-level domain name; and developer is a subdomain name. All together, these constitute a fully-qualified domain name; the addition of https:// makes this a complete URL.\nIANA today distinguishes the following groups of top-level domains:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/TLD"
  },
  {
    "term": "Vendor Prefix",
    "def": "Browser vendors sometimes add prefixes to experimental or nonstandard CSS properties and JavaScript APIs, so developers can experiment with new ideas while—in theory—preventing their experiments from being relied upon and then breaking web developers' code during the standardization process. Developers should wait to include the unprefixed property until browser behavior is standardized.The major browsers use the following prefixes:Sample usage:Historically, vendors have also used prefixes for experimental APIs. If an entire interface is experimental, then the interface's name is prefixed (but not the properties or methods within). If an experimental property or method is added to a standardized interface, then the individual method or property is prefixed.Prefixes for interface names are upper-cased:The prefixes for properties and methods are lower-case:Sample usage:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix"
  },
  {
    "term": "Value",
    "def": "In the context of data or an object wrapper around that data, the value is the primitive value that the object wrapper contains. In the context of a variable or property, the value can be either a primitive or an object reference.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Value"
  },
  {
    "term": "WebVTT",
    "def": "WebVTT (Web Video Text Tracks) is a W3C specification for a file format marking up text track resources in combination with the HTML <track> element.WebVTT files provide metadata that is time-aligned with audio or video content like captions or subtitles for video content, text video descriptions, chapters for content navigation, and more.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/WebVTT"
  },
  {
    "term": "VoIP",
    "def": "VoIP (Voice over Internet Protocol) is a technology used to transmit voice messages over IP (Internet Protocol) networks. Common VoIP packages include Skype, Msn Messenger, Yahoo and many more. Everything transferred through VoIP is digital. It is also known as IP telephony, or broadband telephony. The main reason for using VoIP technology is because of cost.VoIP allows you to make a call directly from a computer, a special VoIP phone, or a traditional phone connected to a special adapter. A high speed internet connection is required for VoIP. Usually, telephone calls over the Internet do not incur further charges beyond what the user is paying for Internet access, much in the same way that the user doesn't pay for sending individual emails over the Internet.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/VoIP"
  },
  {
    "term": "Web server",
    "def": "A web server is a piece of software that often runs on a hardware server offering service to a user, usually referred to as the client. A server, on the other hand, is a piece of hardware that lives in a room full of computers, commonly known as a data center.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Web_server"
  },
  {
    "term": "TCP slow start",
    "def": "TCP slow start helps buildup transmission speeds to the network's capabilities. It does this without initially knowing what those capabilities are and without creating congestion. TCP slow start is an algorithm used to detect the available bandwidth for packet transmission, and balances the speed of a network connection. It prevents the appearance of network congestion whose capabilities are initially unknown, and slowly increases the volume of information diffused until the network's maximum capacity is found.To implement TCP slow start, the congestion window (cwnd) sets an upper limit on the amount of data a source can transmit over the network before receiving an acknowledgment (ACK). The slow start threshold (ssthresh) determines the (de)activation of slow start. When a new connection is made, cwnd is initialized to one TCP data or acknowledgment packet, and waits for an acknowledgement, or ACK. When that ACK is received, the congestion window is incremented until the cwnd is greater than ssthresh. Slow start also terminates when congestion is experienced.Congestion itself is a state that happens within a network layer when the message traffic is too busy it slows the network response time. The server sends data in TCP packets, the user's client then confirms delivery by returning acknowledgements, or ACKs. The connection has a limited capacity depending on hardware and network conditions. If the server sends too many packets too quickly, they will be dropped. Meaning, there will be no acknowledgement. The server registers this as missing ACKs. Congestion control algorithms use this flow of sent packets and ACKs to determine a send rate.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/TCP_slow_start"
  },
  {
    "term": "Table Wrapper Box",
    "def": "The Table Wrapper Box is the box generated around table grid boxes which accounts for the space needed for any caption displayed for the table. This box will become the containing block for absolutely positioned items where the table is the containing block.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Table_Wrapper_Box"
  },
  {
    "term": "Truthy",
    "def": "In JavaScript, a truthy value is a value that is considered true when encountered in a Boolean context. All values are truthy unless they are defined as falsy (i.e., except for false, 0, -0, 0n, \"\", null, undefined, and NaN).JavaScript uses type coercion in Boolean contexts.Examples of truthy values in JavaScript (which will be coerced to true in boolean contexts, and thus execute the if block):If the first object is truthy, the logical AND operator returns the second operand:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Truthy"
  },
  {
    "term": "Transient activation",
    "def": "Transient activation (or \"transient user activation\") is a window state that indicates a user has recently pressed a button, moved a mouse, used a menu, or performed some other user interaction.\n  This state is sometimes used as a mechanism for ensuring that a web API can only function if triggered by user interaction.\n  For example, scripts cannot arbitrarily launch a popup that requires transient activation ⁠—it must be triggered from a UI element's event handler.\nExamples of APIs that require transient activation are:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Transient_activation"
  },
  {
    "term": "W3C",
    "def": "The World Wide Web Consortium (W3C) is an international body that maintains Web-related rules and frameworks.It consists of over 350 member-organizations that jointly develop Web standards, run outreach programs, and maintain an open forum for talking about the Web. The W3C coordinates companies in the industry to make sure they implement the same W3C standards.Each standard passes through four stages of maturity: Working Draft (WD), Candidate Recommendation (CR), Proposed Recommendation (PR), and W3C Recommendation (REC).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/W3C"
  },
  {
    "term": "URI",
    "def": "A URI (Uniform Resource Identifier) is a string that refers to a resource.The most common are URLs, which identify the resource by giving its location on the Web. URNs, by contrast, refer to a resource by a name, in a given namespace, such as the ISBN of a book.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/URI"
  },
  {
    "term": "Type conversion",
    "def": "Type conversion (or typecasting) means transfer of data from one data type to another. Implicit conversion happens when the compiler automatically assigns data types, but the source code can also explicitly require a conversion to take place. For example, given the instruction 5+2.0, the floating point 2.0 is implicitly typecasted into an integer, but given the instruction Number(\"0x11\"), the string \"0x11\" is explicitly typecasted as the number 17.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Type_Conversion"
  },
  {
    "term": "WebGL",
    "def": "WebGL (Web Graphics Library) is a JavaScript API that draws interactive 2D and 3D graphics.The Khronos Group maintains WebGL, which is based on OpenGL ES 2.0.You can invoke WebGL within the HTML <canvas> element, which provides a rendering surface.All major browsers now support WebGL, but its availability depends also on external factors (e.g. GPU support).",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/WebGL"
  },
  {
    "term": "URL",
    "def": "Uniform Resource Locator (URL) is a text string that specifies where a resource (such as a web page, image, or video) can be found on the Internet.In the context of HTTP, URLs are called \"Web address\" or \"link\". Your browser displays URLs in its address bar, for example: https://developer.mozilla.org Some browsers display only the part of a URL after the \"//\", that is, the Domain name.URLs can also be used for file transfer (FTP) , emails (SMTP), and other applications.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/URL"
  },
  {
    "term": "WCAG",
    "def": "Web Content Accessibility Guidelines (WCAG) are a recommendation published by the Web Accessibility Initiative group at the W3C. They outline a set of guidelines for making content accessible primarily for people with disabilities but also for limited-resource devices such as mobile phones.WCAG 2.0 which superseded WCAG 1.0 was published as a W3C Recommendation on 11 December 2008. It consists of 12 guidelines organized under 4 principles (perceivable, operable, understandable, and robust) and each guideline has testable success criteria.WCAG uses three levels of conformance:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/WCAG"
  },
  {
    "term": "WebM",
    "def": "WebM is royalty-free and is an open web video format natively supported in Mozilla Firefox.",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/webm"
  },
  {
    "term": "Safe",
    "def": "The term safe can have several meanings depending on the context. It may refer to:",
    "src": "https://developer.mozilla.org/en-US/docs/Glossary/Safe"
  }
]
